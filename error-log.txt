{"totals":{"errors":2,"file_errors":1914},"files":{"/var/www/in2plane-cloud/app/AppKernel.php":{"errors":1,"messages":[{"message":"PHPDoc tag @param references unknown parameter: $parameters","line":123,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/AirlinePortalBundle/Controller/OperationsController.php":{"errors":1,"messages":[{"message":"Method In2plane\\AirlinePortalBundle\\Controller\\OperationsController::getAuditLogRepository() should return In2plane\\AuditBundle\\Repository\\AuditLogRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\AuditBundle\\Document\\BaseAction>.","line":567,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/AirlinePortalBundle/Service/ServiceOrderExportService.php":{"errors":5,"messages":[{"message":"Expression on left side of ?? is not nullable.","line":419,"ignorable":true},{"message":"Expression on left side of ?? is not nullable.","line":420,"ignorable":true},{"message":"Expression on left side of ?? is not nullable.","line":422,"ignorable":true},{"message":"Expression on left side of ?? is not nullable.","line":426,"ignorable":true},{"message":"Method In2plane\\AirlinePortalBundle\\Service\\ServiceOrderExportService::getServiceOrderRepository() should return In2plane\\OperationsBundle\\Repository\\ServiceOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrder>.","line":632,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/AirlinePortalBundle/Worker/ExportServiceOrdersWorker.php":{"errors":2,"messages":[{"message":"Method In2plane\\AirlinePortalBundle\\Worker\\ExportServiceOrdersWorker::getUserRepository() should return In2plane\\CoreBundle\\Repository\\UserRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\User>.","line":327,"ignorable":true},{"message":"Method In2plane\\AirlinePortalBundle\\Worker\\ExportServiceOrdersWorker::getServiceOrderRepository() should return In2plane\\OperationsBundle\\Repository\\ServiceOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrder>.","line":335,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/AirlinePortalBundle/Worker/ExportWorksheetWorker.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>::findOneByCompanyId().","line":109,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/AuditBundle/Behat/Helpers/AuditHelper.php (in context of class In2plane\\AuditBundle\\Behat\\AuditContext)":{"errors":1,"messages":[{"message":"Method In2plane\\AuditBundle\\Behat\\AuditContext::getAuditLogRepository() should return In2plane\\AuditBundle\\Repository\\AuditLogRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\AuditBundle\\Document\\BaseAction>.","line":128,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/AuditBundle/Behat/Helpers/AuditHelper.php (in context of class In2plane\\CoreBundle\\Behat\\DefaultContext)":{"errors":1,"messages":[{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getAuditLogRepository() should return In2plane\\AuditBundle\\Repository\\AuditLogRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\AuditBundle\\Document\\BaseAction>.","line":128,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/AuditBundle/Helper/AuditControllerHelper.php (in context of class In2plane\\CoreBundle\\Controller\\DocumentController)":{"errors":2,"messages":[{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getAuditLogRepository() should return In2plane\\AuditBundle\\Repository\\AuditLogRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\AuditBundle\\Document\\BaseAction>.","line":139,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getFuelOrderLogRepository() should return In2plane\\AuditBundle\\Repository\\AuditLogRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\AuditBundle\\Document\\Operations\\ServiceOrderBaseAction>.","line":144,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/AuditBundle/Helper/AuditControllerHelper.php (in context of class In2plane\\CoreBundle\\Controller\\FOSRestDocumentController)":{"errors":2,"messages":[{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getAuditLogRepository() should return In2plane\\AuditBundle\\Repository\\AuditLogRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\AuditBundle\\Document\\BaseAction>.","line":139,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getFuelOrderLogRepository() should return In2plane\\AuditBundle\\Repository\\AuditLogRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\AuditBundle\\Document\\Operations\\ServiceOrderBaseAction>.","line":144,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/AuditBundle/Repository/AuditLogRepository.php":{"errors":1,"messages":[{"message":"Method In2plane\\AuditBundle\\Repository\\AuditLogRepository::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":296,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Behat/BulkStorageSettingsContext.php":{"errors":1,"messages":[{"message":"Variable $company in PHPDoc tag @var does not match assigned variable $sharingCompany.","line":17,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Behat/BulkTransferContext.php":{"errors":1,"messages":[{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":191,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Behat/DailyStockContext.php":{"errors":17,"messages":[{"message":"Expression \"expect($dailyStock->isLocked())->to->be->true\" on a separate line does not do anything.","line":110,"ignorable":true},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":261,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":262,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":263,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":264,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":265,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Expression \"expect($this->todayStock->isLocked())->to->be->true\" on a separate line does not do anything.","line":359,"ignorable":true},{"message":"Expression \"expect($this->todayStock->isLocked())->not->to->be->true\" on a separate line does not do anything.","line":368,"ignorable":true},{"message":"Expression \"expect($latestFuelStockChange)->to->not->be->null\" on a separate line does not do anything.","line":475,"ignorable":true},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":489,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":497,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Variable $bowserTankValue might not be defined.","line":725,"ignorable":true},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":872,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Expression \"expect($data[$tankId])->not->empty\" on a separate line does not do anything.","line":874,"ignorable":true},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":893,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Expression \"expect($data[$tankId])->not->empty\" on a separate line does not do anything.","line":895,"ignorable":true},{"message":"Expression \"expect($data[$tankId]['measurement'])->to->be->null\" on a separate line does not do anything.","line":896,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Behat/DashboardContext.php":{"errors":7,"messages":[{"message":"Expression \"expect($parent['currentStorageTanks'])->to->be->null\" on a separate line does not do anything.","line":433,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Behat\\DashboardContext::getFuelQuantityChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelQuantityChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelQuantityChange>.","line":728,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>::findOneByDomain().","line":761,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":938,"ignorable":true},{"message":"Expression \"expect(isset($data['error']))->to->be->false\" on a separate line does not do anything.","line":1160,"ignorable":true},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":1211,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":1212,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Behat/DataResetContext.php":{"errors":11,"messages":[{"message":"Cannot call method toArray() on array<string, mixed>|int|object.","line":75,"ignorable":true},{"message":"Cannot call method toArray() on array<string, mixed>|int|object.","line":99,"ignorable":true},{"message":"Cannot call method toArray() on array<string, mixed>|int|object.","line":121,"ignorable":true},{"message":"Cannot call method toArray() on array<string, mixed>|int|object.","line":143,"ignorable":true},{"message":"Cannot call method toArray() on array<string, mixed>|int|object.","line":165,"ignorable":true},{"message":"Cannot call method toArray() on array<string, mixed>|int|object.","line":201,"ignorable":true},{"message":"Cannot call method toArray() on array<string, mixed>|int|object.","line":225,"ignorable":true},{"message":"Cannot call method toArray() on array<string, mixed>|int|object.","line":247,"ignorable":true},{"message":"Cannot call method toArray() on array<string, mixed>|int|object.","line":270,"ignorable":true},{"message":"Cannot call method toArray() on array<string, mixed>|int|object.","line":292,"ignorable":true},{"message":"Cannot call method toArray() on array<string, mixed>|int|object.","line":314,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Behat/FuelDeliveryContext.php":{"errors":10,"messages":[{"message":"If condition is always true.","line":178,"ignorable":true},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":389,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":405,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Expression \"expect($fuelMovement)->to->be->null\" on a separate line does not do anything.","line":1160,"ignorable":true},{"message":"Expression \"expect($fuelMovement)->to->be->null\" on a separate line does not do anything.","line":1198,"ignorable":true},{"message":"Expression \"expect($fuelDelivery->isDeleted())->to->be->true\" on a separate line does not do anything.","line":1376,"ignorable":true},{"message":"Expression \"expect($fuelMovement)->to->be->null\" on a separate line does not do anything.","line":1658,"ignorable":true},{"message":"If condition is always true.","line":1744,"ignorable":true},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":1779,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Expression \"expect($deliveryStorageTanks->contains($expectedTank))->to->be->true\" on a separate line does not do anything.","line":2055,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Behat/FuelDeliveryRepositoryContext.php":{"errors":22,"messages":[{"message":"Expression \"expect($this->fuelDeliveries->toArray())->to->not->be->empty\" on a separate line does not do anything.","line":152,"ignorable":true},{"message":"Expression \"expect($this->fuelDeliveries->toArray())->to->not->be->empty\" on a separate line does not do anything.","line":186,"ignorable":true},{"message":"Expression \"expect($this->fuelDeliveries->toArray())->to->not->be->empty\" on a separate line does not do anything.","line":221,"ignorable":true},{"message":"Expression \"expect($fuelDelivery->getEndTime() >= $this->exStar->getReportingPeriodStartDate() && $fuelDelivery->getEndTime() <= $this->exStar->getReportingPeriodEndDate())->to->be->true\" on a separate line does not do anything.","line":229,"ignorable":true},{"message":"Expression \"expect($this->fuelDeliveries->toArray())->to->not->be->empty\" on a separate line does not do anything.","line":252,"ignorable":true},{"message":"Expression \"expect($fuelDelivery->getEndTime() >= new \\DateTime($start) && $fuelDelivery->getEndTime() <= new \\DateTime($end))->to->be->true\" on a separate line does not do anything.","line":255,"ignorable":true},{"message":"Cannot call method toArray() on array<string, mixed>|int|object.","line":306,"ignorable":true},{"message":"Expression \"expect($this->fuelDeliveries)->to->not->be->empty\" on a separate line does not do anything.","line":320,"ignorable":true},{"message":"Expression \"expect($this->fuelDeliveries)->to->not->be->empty\" on a separate line does not do anything.","line":385,"ignorable":true},{"message":"Expression \"expect($this->filter->getDateRange()->contains($fuelDelivery->getEndDate()))->to->be->true\" on a separate line does not do anything.","line":404,"ignorable":true},{"message":"Expression \"expect($this->fuelDeliveries)->to->not->be->empty\" on a separate line does not do anything.","line":431,"ignorable":true},{"message":"Expression \"expect($this->fuelDeliveries)->to->not->be->empty\" on a separate line does not do anything.","line":462,"ignorable":true},{"message":"Expression \"expect($this->fuelDeliveries)->to->not->be->empty\" on a separate line does not do anything.","line":503,"ignorable":true},{"message":"Expression \"expect($this->fuelDeliveries)->to->not->be->empty\" on a separate line does not do anything.","line":550,"ignorable":true},{"message":"Cannot call method toArray() on array<string, mixed>|int|object.","line":570,"ignorable":true},{"message":"Expression \"expect($this->fuelDeliveries)->to->not->be->empty\" on a separate line does not do anything.","line":599,"ignorable":true},{"message":"Expression \"expect($fuelDelivery->isDeleted())->to->be->false\" on a separate line does not do anything.","line":615,"ignorable":true},{"message":"Property In2plane\\BulkStorageBundle\\Behat\\FuelDeliveryRepositoryContext::$fuelDeliveries (Doctrine\\ODM\\MongoDB\\Iterator\\Iterator<In2plane\\BulkStorageBundle\\Document\\FuelDelivery>&iterable<In2plane\\BulkStorageBundle\\Document\\FuelDelivery>) does not accept array<string, mixed>|int|object|null.","line":624,"ignorable":true},{"message":"Property In2plane\\BulkStorageBundle\\Behat\\FuelDeliveryRepositoryContext::$fuelDeliveries (Doctrine\\ODM\\MongoDB\\Iterator\\Iterator<In2plane\\BulkStorageBundle\\Document\\FuelDelivery>&iterable<In2plane\\BulkStorageBundle\\Document\\FuelDelivery>) does not accept array<string, mixed>|int|object|null.","line":653,"ignorable":true},{"message":"Cannot call method toArray() on array<string, mixed>|int|object.","line":706,"ignorable":true},{"message":"Expression \"expect($this->fuelDeliveries)->to->not->be->empty\" on a separate line does not do anything.","line":728,"ignorable":true},{"message":"Expression \"expect($this->fuelDeliveries)->to->not->be->empty\" on a separate line does not do anything.","line":800,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Behat/FuelOwnershipTransferContext.php":{"errors":1,"messages":[{"message":"Access to an undefined property In2plane\\BulkStorageBundle\\Behat\\FuelOwnershipTransferContext::$productMovements.","line":146,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Behat/FuelQuantityChangeContext.php":{"errors":3,"messages":[{"message":"Cannot call method toArray() on array<string, mixed>|int|object.","line":204,"ignorable":true},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":238,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Static property In2plane\\BulkStorageBundle\\Behat\\FuelQuantityChangeContext::$storageTank (In2plane\\BulkStorageBundle\\Document\\StorageTank) does not accept null.","line":283,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Behat/FuelStockChangeRepositoryContext.php":{"errors":14,"messages":[{"message":"Cannot call method getFuelStock() on object|false.","line":76,"ignorable":true},{"message":"Expression \"expect($this->fuelStockChange->getFuelStock())->to->not->be->null\" on a separate line does not do anything.","line":76,"ignorable":true},{"message":"Cannot call method getFuelStock() on object|false.","line":78,"ignorable":true},{"message":"Expression \"expect($this->fuelStockChanges)->to->not->be->empty\" on a separate line does not do anything.","line":146,"ignorable":true},{"message":"Expression \"expect($this->productAllocation)->to->not->be->null\" on a separate line does not do anything.","line":172,"ignorable":true},{"message":"Expression \"expect($this->fuelStockChanges)->to->not->be->empty\" on a separate line does not do anything.","line":212,"ignorable":true},{"message":"Expression \"expect($this->fuelStockChanges)->to->not->be->empty\" on a separate line does not do anything.","line":261,"ignorable":true},{"message":"Expression \"expect($fuelStockChange->getDateTime() >= $this->start && $fuelStockChange->getDateTime() <= $this->end)->to->be->true\" on a separate line does not do anything.","line":264,"ignorable":true},{"message":"Cannot call method toArray() on array<string, mixed>|int|object.","line":284,"ignorable":true},{"message":"Expression \"expect($this->fuelStockChanges)->to->not->be->empty\" on a separate line does not do anything.","line":298,"ignorable":true},{"message":"Cannot call method toArray() on array<string, mixed>|int|object.","line":335,"ignorable":true},{"message":"Expression \"expect($this->fuelStockChanges)->to->not->be->empty\" on a separate line does not do anything.","line":349,"ignorable":true},{"message":"Expression \"expect($fuelStockChange->getDateTime() <= $this->filter->getDateRangeEnd() && $fuelStockChange->getDateTime() >= $this->filter->getDateRangeStart() && $fuelStockChange->getDateTime() <= $this->filter->getDate())->to->be->true\" on a separate line does not do anything.","line":353,"ignorable":true},{"message":"Expression \"expect($fuelStockChange->getDateTime() >= $this->dailyStock->getStart() && $fuelStockChange->getDateTime() <= $this->dailyStock->getEnd())->to->be->true\" on a separate line does not do anything.","line":407,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Behat/FuelStockRepositoryContext.php":{"errors":4,"messages":[{"message":"Property In2plane\\BulkStorageBundle\\Behat\\FuelStockRepositoryContext::$fuelStocks (Doctrine\\ODM\\MongoDB\\Iterator\\Iterator&iterable<In2plane\\BulkStorageBundle\\Document\\FuelStock>) does not accept array.","line":107,"ignorable":true},{"message":"Expression \"expect($this->fuelStocks)->to->not->be->empty\" on a separate line does not do anything.","line":127,"ignorable":true},{"message":"Expression \"expect($fuelStock->isUnallocatedStockHolder())->to->be->true\" on a separate line does not do anything.","line":136,"ignorable":true},{"message":"Expression \"expect($fuelStock->isUnallocatedStockHolder())->to->be->false\" on a separate line does not do anything.","line":146,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Behat/GeneralSettingsContext.php":{"errors":1,"messages":[{"message":"Method In2plane\\BulkStorageBundle\\Behat\\GeneralSettingsContext::getTemperatureAndDensityRepository() should return In2plane\\BulkStorageBundle\\Repository\\TemperatureAndDensityRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\TemperatureAndDensity>.","line":91,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Behat/ProductAllocationContext.php":{"errors":4,"messages":[{"message":"Expression \"expect($result)->to->be->null\" on a separate line does not do anything.","line":49,"ignorable":true},{"message":"Expression \"expect($result)->to->be->not->null\" on a separate line does not do anything.","line":67,"ignorable":true},{"message":"Expression \"expect($ownerId)->to->not->be->null\" on a separate line does not do anything.","line":124,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Behat\\ProductAllocationContext::getProductAllocationRepository() should return In2plane\\BulkStorageBundle\\Repository\\ProductAllocationRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\ProductAllocation\\ProductAllocation>.","line":261,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Behat/ProductMovementContext.php":{"errors":1,"messages":[{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":125,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Behat/ProductUpliftContext.php":{"errors":13,"messages":[{"message":"Property In2plane\\BulkStorageBundle\\Behat\\ProductUpliftContext::$paperworkId is never read, only written.","line":40,"ignorable":true,"tip":"See: https://phpstan.org/developing-extensions/always-read-written-properties"},{"message":"Call to an undefined method In2plane\\BulkStorageBundle\\Document\\ProductUplift::setCustomer().","line":72,"ignorable":true},{"message":"Call to an undefined method In2plane\\BulkStorageBundle\\Document\\ProductUplift::setCustomer().","line":86,"ignorable":true},{"message":"Call to an undefined method In2plane\\BulkStorageBundle\\Document\\ProductUplift::setCustomer().","line":100,"ignorable":true},{"message":"Call to an undefined method In2plane\\BulkStorageBundle\\Document\\ProductUplift::setCustomer().","line":114,"ignorable":true},{"message":"Call to an undefined method In2plane\\BulkStorageBundle\\Document\\ProductUplift::setCustomer().","line":159,"ignorable":true},{"message":"Call to an undefined method In2plane\\BulkStorageBundle\\Document\\ProductUplift::setFuelSupplier().","line":211,"ignorable":true},{"message":"Call to an undefined method In2plane\\BulkStorageBundle\\Document\\ProductUplift::setCustomer().","line":260,"ignorable":true},{"message":"Call to an undefined method In2plane\\BulkStorageBundle\\Document\\ProductUplift::setFuelSupplier().","line":313,"ignorable":true},{"message":"Variable $storageTank might not be defined.","line":389,"ignorable":true},{"message":"Variable $productUpliftId might not be defined.","line":1033,"ignorable":true},{"message":"Expression \"expect($productUplift)->not->to->be->null\" on a separate line does not do anything.","line":1099,"ignorable":true},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":1248,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Behat/ProductUpliftRepositoryContext.php":{"errors":20,"messages":[{"message":"Property In2plane\\BulkStorageBundle\\Behat\\ProductUpliftRepositoryContext::$productUplifts (Doctrine\\ODM\\MongoDB\\Iterator\\Iterator&iterable<In2plane\\BulkStorageBundle\\Document\\ProductUplift>) does not accept array<In2plane\\BulkStorageBundle\\Document\\ProductUplift>.","line":88,"ignorable":true},{"message":"Expression \"expect($this->productUplifts)->to->not->be->empty\" on a separate line does not do anything.","line":98,"ignorable":true},{"message":"Expression \"expect(new \\DateTime('yesterday') <= $time && new \\DateTime('tomorrow') >= $time)->to->be->true\" on a separate line does not do anything.","line":103,"ignorable":true},{"message":"Expression \"expect($this->productUplifts)->to->not->be->empty\" on a separate line does not do anything.","line":143,"ignorable":true},{"message":"Expression \"expect($time >= $this->dailyStock->getStart() && $time <= $this->dailyStock->getEnd())->to->be->true\" on a separate line does not do anything.","line":148,"ignorable":true},{"message":"Expression \"expect($this->productUplifts)->to->not->be->empty\" on a separate line does not do anything.","line":187,"ignorable":true},{"message":"Expression \"expect($productUplift->getUpliftEndTime() >= $this->exStar->getReportingPeriodStartDate() && $productUplift->getUpliftEndTime() <= $this->exStar->getReportingPeriodEndDate())->to->be->true\" on a separate line does not do anything.","line":195,"ignorable":true},{"message":"Call to an undefined method In2plane\\BulkStorageBundle\\Document\\ProductUplift::getFuelSupplier().","line":211,"ignorable":true},{"message":"Call to an undefined method In2plane\\BulkStorageBundle\\Document\\ProductUplift::getFuelSupplier().","line":237,"ignorable":true},{"message":"Call to an undefined method In2plane\\BulkStorageBundle\\Document\\ProductUplift::getCustomer().","line":238,"ignorable":true},{"message":"Cannot call method toArray() on array<string, mixed>|int|object.","line":257,"ignorable":true},{"message":"Expression \"expect($this->productUplifts)->to->not->be->empty\" on a separate line does not do anything.","line":270,"ignorable":true},{"message":"Expression \"expect($this->filter->getDateRange()->contains($this->getTimeForProductUplift($fuelUplift)))->to->be->true\" on a separate line does not do anything.","line":282,"ignorable":true},{"message":"Cannot call method toArray() on array<string, mixed>|int|object.","line":310,"ignorable":true},{"message":"Call to an undefined method In2plane\\BulkStorageBundle\\Document\\ProductUplift::getFlightType().","line":323,"ignorable":true},{"message":"Expression \"expect($this->productUplifts)->to->not->be->empty\" on a separate line does not do anything.","line":336,"ignorable":true},{"message":"Expression \"expect($fuelUplift->isDeleted())->to->be->false\" on a separate line does not do anything.","line":348,"ignorable":true},{"message":"Call to an undefined method In2plane\\BulkStorageBundle\\Document\\ProductUplift::getFlightType().","line":349,"ignorable":true},{"message":"Call to an undefined method In2plane\\BulkStorageBundle\\Document\\ProductUplift::setFuelSupplier().","line":377,"ignorable":true},{"message":"Call to an undefined method In2plane\\BulkStorageBundle\\Document\\ProductUplift::setFlightType().","line":382,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Behat/Rest/FuelDeliveryRestContext.php":{"errors":5,"messages":[{"message":"Property In2plane\\BulkStorageBundle\\Behat\\Rest\\FuelDeliveryRestContext::$fuelDeliveries is unused.","line":34,"ignorable":true,"tip":"See: https://phpstan.org/developing-extensions/always-read-written-properties"},{"message":"Strict comparison using !== between null and null will always evaluate to false.","line":80,"ignorable":true},{"message":"Strict comparison using !== between null and null will always evaluate to false.","line":136,"ignorable":true},{"message":"Undefined variable: $totalBowserQuantity","line":138,"ignorable":true},{"message":"Undefined variable: $bowserDeliveries","line":139,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Behat/Rest/ProductUpliftRestContext.php":{"errors":3,"messages":[{"message":"Property In2plane\\BulkStorageBundle\\Behat\\Rest\\ProductUpliftRestContext::$productUplifts is unused.","line":28,"ignorable":true,"tip":"See: https://phpstan.org/developing-extensions/always-read-written-properties"},{"message":"Access to an undefined property In2plane\\BulkStorageBundle\\Behat\\Rest\\ProductUpliftRestContext::$storageTank.","line":45,"ignorable":true},{"message":"Call to an undefined method In2plane\\BulkStorageBundle\\Document\\ProductUplift::setFuelSupplier().","line":53,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Behat/StorageTankRepositoryContext.php":{"errors":12,"messages":[{"message":"Expression \"expect($this->storageTanks)->to->not->be->empty\" on a separate line does not do anything.","line":115,"ignorable":true},{"message":"Expression \"expect($this->storageTanks)->to->not->be->empty\" on a separate line does not do anything.","line":119,"ignorable":true},{"message":"Expression \"expect($this->storageTanks)->to->not->be->empty\" on a separate line does not do anything.","line":123,"ignorable":true},{"message":"Expression \"expect($this->storageTanks)->to->not->be->empty\" on a separate line does not do anything.","line":127,"ignorable":true},{"message":"Expression \"expect($this->storageTanks)->to->not->be->empty\" on a separate line does not do anything.","line":131,"ignorable":true},{"message":"Expression \"expect($this->storageTanks)->to->not->be->empty\" on a separate line does not do anything.","line":135,"ignorable":true},{"message":"Expression \"expect($this->storageTanks)->to->not->be->empty\" on a separate line does not do anything.","line":139,"ignorable":true},{"message":"Expression \"expect($this->storageTanks)->to->not->be->empty\" on a separate line does not do anything.","line":143,"ignorable":true},{"message":"Expression \"expect($this->storageTanks)->to->not->be->empty\" on a separate line does not do anything.","line":147,"ignorable":true},{"message":"Expression \"expect($this->storageTanks)->to->not->be->empty\" on a separate line does not do anything.","line":151,"ignorable":true},{"message":"Expression \"expect($this->storageTanks)->to->not->be->empty\" on a separate line does not do anything.","line":155,"ignorable":true},{"message":"Expression \"expect($this->storageTanks)->to->not->be->empty\" on a separate line does not do anything.","line":161,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Command/FindWrongFuelQuantityChangesCommand.php":{"errors":5,"messages":[{"message":"Method In2plane\\BulkStorageBundle\\Command\\FindWrongFuelQuantityChangesCommand::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":211,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FindWrongFuelQuantityChangesCommand::getFuelOrderRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":216,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FindWrongFuelQuantityChangesCommand::getVehicleRepository() should return In2plane\\CoreBundle\\Repository\\VehicleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>.","line":221,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FindWrongFuelQuantityChangesCommand::getStorageTankRepository() should return In2plane\\BulkStorageBundle\\Repository\\StorageTankRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\StorageTank>.","line":226,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FindWrongFuelQuantityChangesCommand::getFuelQuantityChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelQuantityChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelQuantityChange>.","line":231,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Command/FindWrongFuelStockChangesCommand.php":{"errors":4,"messages":[{"message":"Method In2plane\\BulkStorageBundle\\Command\\FindWrongFuelStockChangesCommand::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":206,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FindWrongFuelStockChangesCommand::getFuelOrderRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":214,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FindWrongFuelStockChangesCommand::getFuelStockChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelStockChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelStockChange>.","line":222,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FindWrongFuelStockChangesCommand::getFuelStockRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelStockRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelStock>.","line":230,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Command/FixAllStandardVolumesCommand.php":{"errors":5,"messages":[{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixAllStandardVolumesCommand::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":104,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixAllStandardVolumesCommand::getFuelOrderRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":112,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixAllStandardVolumesCommand::getFuelMovementRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelMovementRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelMovement>.","line":120,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixAllStandardVolumesCommand::getFuelQuantityChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelQuantityChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelQuantityChange>.","line":128,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixAllStandardVolumesCommand::getFuelStockChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelStockChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelStockChange>.","line":136,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Command/FixChangesForCreditsCommand.php":{"errors":2,"messages":[{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixChangesForCreditsCommand::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":115,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixChangesForCreditsCommand::getFuelOrderRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":123,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Command/FixChangesWithoutTemperatureCommand.php":{"errors":5,"messages":[{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixChangesWithoutTemperatureCommand::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":203,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixChangesWithoutTemperatureCommand::getFuelOrderRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":211,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixChangesWithoutTemperatureCommand::getFuelMovementRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelMovementRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelMovement>.","line":219,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixChangesWithoutTemperatureCommand::getFuelQuantityChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelQuantityChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelQuantityChange>.","line":227,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixChangesWithoutTemperatureCommand::getFuelStockChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelStockChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelStockChange>.","line":235,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Command/FixFuelStockChangeCommand.php":{"errors":1,"messages":[{"message":"Property In2plane\\BulkStorageBundle\\Command\\FixFuelStockChangeCommand::$fuelStockChangeRepository (In2plane\\BulkStorageBundle\\Repository\\FuelStockChangeRepository) does not accept Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelStockChange>.","line":47,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Command/FixFuelTypeCommand.php":{"errors":3,"messages":[{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixFuelTypeCommand::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":129,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixFuelTypeCommand::getFuelTypeRepository() should return In2plane\\CoreBundle\\Repository\\FuelTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FuelType>.","line":137,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixFuelTypeCommand::getFuelOrderRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":145,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Command/FixMissingQuantityChangesCommand.php":{"errors":3,"messages":[{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixMissingQuantityChangesCommand::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":132,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixMissingQuantityChangesCommand::getFuelOrderRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":140,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixMissingQuantityChangesCommand::getFuelQuantityChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelQuantityChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelQuantityChange>.","line":148,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Command/FixNonSalesStockChangesCommand.php":{"errors":2,"messages":[{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixNonSalesStockChangesCommand::getFuelOrderRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":101,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixNonSalesStockChangesCommand::getFuelStockChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelStockChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelStockChange>.","line":109,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Command/FixOrdersWithoutPitCommand.php":{"errors":3,"messages":[{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixOrdersWithoutPitCommand::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":153,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixOrdersWithoutPitCommand::getPitRepository() should return In2plane\\CoreBundle\\Repository\\PitRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Pit>.","line":161,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixOrdersWithoutPitCommand::getFuelOrderRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":169,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Command/FixQuantityChangesRelatedToDailyReconciliationCommand.php":{"errors":2,"messages":[{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixQuantityChangesRelatedToDailyReconciliationCommand::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":117,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixQuantityChangesRelatedToDailyReconciliationCommand::getDailyStockRepository() should return In2plane\\BulkStorageBundle\\Repository\\DailyStockRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\DailyStock>.","line":125,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Command/FixStandardFinalQuantitiesCommand.php":{"errors":6,"messages":[{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixStandardFinalQuantitiesCommand::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":177,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixStandardFinalQuantitiesCommand::getVehicleRepository() should return In2plane\\CoreBundle\\Repository\\VehicleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>.","line":185,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixStandardFinalQuantitiesCommand::getStorageTankRepository() should return In2plane\\BulkStorageBundle\\Repository\\StorageTankRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\StorageTank>.","line":193,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixStandardFinalQuantitiesCommand::getFuelQuantityChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelQuantityChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelQuantityChange>.","line":201,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixStandardFinalQuantitiesCommand::getFuelStockChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelStockChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelStockChange>.","line":209,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixStandardFinalQuantitiesCommand::getFuelStockRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelStockRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelStock>.","line":217,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Command/FixStandardVolumesCommand.php":{"errors":5,"messages":[{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixStandardVolumesCommand::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":157,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixStandardVolumesCommand::getFuelOrderRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":165,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixStandardVolumesCommand::getFuelMovementRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelMovementRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelMovement>.","line":173,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixStandardVolumesCommand::getFuelQuantityChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelQuantityChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelQuantityChange>.","line":181,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Command\\FixStandardVolumesCommand::getFuelStockChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelStockChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelStockChange>.","line":189,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Command/RefreshReconciliationsCommand.php":{"errors":5,"messages":[{"message":"Property In2plane\\BulkStorageBundle\\Command\\RefreshReconciliationsCommand::$dailyStockRepository (In2plane\\BulkStorageBundle\\Repository\\DailyStockRepository) does not accept Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\DailyStock>.","line":133,"ignorable":true},{"message":"Property In2plane\\BulkStorageBundle\\Command\\RefreshReconciliationsCommand::$monthlyStockRepository (In2plane\\BulkStorageBundle\\Repository\\MonthlyStockRepository) does not accept Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\MonthlyStock>.","line":134,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\DailyStock>::findAllLockedWithoutOwner().","line":159,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\DailyStock>::findOneWithoutOwnerForDate().","line":212,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\DailyStock>::findByDateAndFuelType().","line":295,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Command/ValidateReconciliationDataCommand.php":{"errors":1,"messages":[{"message":"Property In2plane\\BulkStorageBundle\\Command\\ValidateReconciliationDataCommand::$dailyStockRepository (In2plane\\BulkStorageBundle\\Repository\\DailyStockRepository) does not accept Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\DailyStock>.","line":46,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Controller/FuelDeliveryController.php":{"errors":12,"messages":[{"message":"Result of && is always false.","line":223,"ignorable":true},{"message":"Result of && is always false.","line":223,"ignorable":true},{"message":"Strict comparison using === between false and true will always evaluate to false.","line":223,"ignorable":true},{"message":"Left side of && is always false.","line":237,"ignorable":true},{"message":"Ternary operator condition is always false.","line":277,"ignorable":true},{"message":"If condition is always false.","line":356,"ignorable":true},{"message":"Ternary operator condition is always false.","line":394,"ignorable":true},{"message":"Ternary operator condition is always false.","line":401,"ignorable":true},{"message":"Ternary operator condition is always false.","line":432,"ignorable":true},{"message":"Ternary operator condition is always false.","line":590,"ignorable":true},{"message":"If condition is always false.","line":628,"ignorable":true},{"message":"Ternary operator condition is always false.","line":667,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Controller/QualityControlController.php":{"errors":1,"messages":[{"message":"If condition is always false.","line":289,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Controller/StorageTankController.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\StorageTank\\ATGMeasurement>::findLastByStorageTankAndDate().","line":472,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/DataFixtures/Alice/Processor/FuelDeliveryProcessor.php":{"errors":1,"messages":[{"message":"Strict comparison using === between string and null will always evaluate to false.","line":21,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Document/BowserFuelDelivery.php":{"errors":3,"messages":[{"message":"Call to function is_null() with float will always evaluate to false.","line":347,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":369,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":391,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Document/BulkStorageSettings.php":{"errors":2,"messages":[{"message":"Property In2plane\\BulkStorageBundle\\Document\\BulkStorageSettings::$monthlyStockPercentages ((Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\BulkStorageBundle\\Document\\MonthlyStockPercentage>)|null) does not accept array<int, In2plane\\BulkStorageBundle\\Document\\MonthlyStockPercentage>|(Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\BulkStorageBundle\\Document\\MonthlyStockPercentage>).","line":2086,"ignorable":true},{"message":"Call to function is_array() with Doctrine\\Common\\Collections\\Collection will always evaluate to false.","line":2373,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Document/FuelDelivery.php":{"errors":12,"messages":[{"message":"Call to function is_null() with float will always evaluate to false.","line":1228,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":1250,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":1275,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":1297,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":1322,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":1344,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":1371,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Property In2plane\\BulkStorageBundle\\Document\\FuelDelivery::$storageTankDeliveries ((Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\BulkStorageBundle\\Document\\TankQuantity>)|null) does not accept array<int, In2plane\\BulkStorageBundle\\Document\\TankQuantity>|(Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\BulkStorageBundle\\Document\\TankQuantity>).","line":1385,"ignorable":true},{"message":"Property In2plane\\BulkStorageBundle\\Document\\FuelDelivery::$bowserDeliveries ((Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\BulkStorageBundle\\Document\\BowserQuantity>)|null) does not accept array<int, In2plane\\BulkStorageBundle\\Document\\BowserQuantity>|(Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\BulkStorageBundle\\Document\\BowserQuantity>).","line":1427,"ignorable":true},{"message":"Call to function is_null() with float will always evaluate to false.","line":1564,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":1586,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":1722,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Document/PipelineFuelDelivery.php":{"errors":3,"messages":[{"message":"Call to function is_null() with float will always evaluate to false.","line":181,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":200,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":224,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Document/QualityManagement/ReleaseProductAuthorisation.php":{"errors":1,"messages":[{"message":"Property In2plane\\BulkStorageBundle\\Document\\QualityManagement\\ReleaseProductAuthorisation::$fuelDeliveries ((Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\BulkStorageBundle\\Document\\FuelDelivery>)|null) does not accept array<int, In2plane\\BulkStorageBundle\\Document\\FuelDelivery>|(Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\BulkStorageBundle\\Document\\FuelDelivery>).","line":738,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/EventListener/BulkTransferListener.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>::getAndIncrementBulkTransferTicketNumber().","line":53,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/EventListener/FuelDeliveryListener.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>::getAndIncrementDeliveryTicketNumber().","line":61,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/EventListener/FuelMovementSTAVolumeListener.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>::getAndIncrementFuelMovementTicketNumber().","line":109,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/EventListener/FuelOwnershipTransferListener.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>::getAndIncrementFuelOwnershipTransferIdentifier().","line":29,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/EventListener/ProductRegradeListener.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>::getAndIncrementProductRegradeTicketNumber().","line":55,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/EventListener/ProductUpliftListener.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>::getAndIncrementProductUpliftTicketNumber().","line":63,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/EventListener/ReleaseProductAuthorisationListener.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>::getAndIncrementReleaseProductAuthorisationTicketNumber().","line":60,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Factory/MonthlyStockFactory.php":{"errors":2,"messages":[{"message":"PHPDoc tag @return with type Doctrine\\Persistence\\ObjectRepository is not subtype of native type In2plane\\BulkStorageBundle\\Repository\\MonthlyStockRepository.","line":101,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Factory\\MonthlyStockFactory::getMonthlyStockRepository() should return In2plane\\BulkStorageBundle\\Repository\\MonthlyStockRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\MonthlyStock>.","line":103,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Form/Type/BulkTransferType.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FuelType>::findByCompany().","line":65,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Form/Type/FuelDeliveryListFilterType.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>::findAvailableBowsersByCompany().","line":148,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Form/Type/FuelDeliveryType.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FuelType>::findByCompany().","line":127,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Form/Type/FuelMovementListFilterType.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>::findAvailableBowsersByCompany().","line":53,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Form/Type/LedgerFilterType.php":{"errors":2,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>::findAvailableBowsersByCompany().","line":57,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FuelType>::findByCompany().","line":71,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Helper/BulkStorageControllerHelper.php (in context of class In2plane\\CoreBundle\\Controller\\DocumentController)":{"errors":5,"messages":[{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getFuelMovementRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelMovementRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelMovement>.","line":90,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getFuelStockRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelStockRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelStock>.","line":98,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getFuelStockChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelStockChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelStockChange>.","line":106,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getStorageTankRepository() should return In2plane\\BulkStorageBundle\\Repository\\StorageTankRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\StorageTank>.","line":114,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getDeIcingStorageTankRepository() should return In2plane\\BulkStorageBundle\\Repository\\DeIcingStorageTankRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\DeIcingStorageTank>.","line":122,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Helper/BulkStorageControllerHelper.php (in context of class In2plane\\CoreBundle\\Controller\\FOSRestDocumentController)":{"errors":5,"messages":[{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getFuelMovementRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelMovementRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelMovement>.","line":90,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getFuelStockRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelStockRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelStock>.","line":98,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getFuelStockChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelStockChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelStockChange>.","line":106,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getStorageTankRepository() should return In2plane\\BulkStorageBundle\\Repository\\StorageTankRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\StorageTank>.","line":114,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getDeIcingStorageTankRepository() should return In2plane\\BulkStorageBundle\\Repository\\DeIcingStorageTankRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\DeIcingStorageTank>.","line":122,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Repository/DeIcingStorageTankRepository.php":{"errors":1,"messages":[{"message":"If condition is always false.","line":119,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Repository/FuelMovementRepository.php":{"errors":2,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\StorageTank>::findByCriteria().","line":679,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>::findAvailableBowsersByCompany().","line":684,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Repository/ProductRegradeRepository.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\StorageTank>::findByCriteria().","line":93,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Service/DashboardService.php":{"errors":5,"messages":[{"message":"Method In2plane\\BulkStorageBundle\\Service\\DashboardService::getVehicleRepository() should return In2plane\\CoreBundle\\Repository\\VehicleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>.","line":729,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Service\\DashboardService::getTemperatureAndDensityRepository() should return In2plane\\BulkStorageBundle\\Repository\\TemperatureAndDensityRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\TemperatureAndDensity>.","line":734,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Service\\DashboardService::getFuelQuantityChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelQuantityChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelQuantityChange>.","line":742,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Service\\DashboardService::getFuelStockChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelStockChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelStockChange>.","line":750,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Service\\DashboardService::getAtgMeasurementRepository() should return In2plane\\BulkStorageBundle\\Repository\\AtgMeasurementRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\StorageTank\\ATGMeasurement>.","line":758,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Service/DipHistoryService.php":{"errors":4,"messages":[{"message":"Expression on left side of ?? is not nullable.","line":188,"ignorable":true},{"message":"Expression on left side of ?? is not nullable.","line":198,"ignorable":true},{"message":"Expression on left side of ?? is not nullable.","line":208,"ignorable":true},{"message":"Expression on left side of ?? is not nullable.","line":218,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Service/FuelMovementService.php":{"errors":4,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelStockChange>::findByFuelOrderOrResaleOrder().","line":1948,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelMovement>::findByFuelOrder().","line":1949,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelQuantityChange>::findByFuelOrder().","line":1950,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Service\\FuelMovementService::getActiveTankRepository() should return In2plane\\BulkStorageBundle\\Repository\\ActiveTankRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\StorageTank\\ActiveTank>.","line":2551,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Service/ReconciliationInterlockingService.php":{"errors":1,"messages":[{"message":"Method In2plane\\BulkStorageBundle\\Service\\ReconciliationInterlockingService::getMonthlyStockRepository() should return In2plane\\BulkStorageBundle\\Repository\\MonthlyStockRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\MonthlyStock>.","line":499,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Service/ReconciliationValidationService.php":{"errors":2,"messages":[{"message":"Strict comparison using === between true and false will always evaluate to false.","line":396,"ignorable":true},{"message":"Strict comparison using === between true and false will always evaluate to false.","line":420,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Service/StorageTankService.php":{"errors":1,"messages":[{"message":"Negated boolean expression is always true.","line":437,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Service/Traits/LockedDailyStockValidationTrait.php (in context of class In2plane\\BulkStorageBundle\\Form\\Type\\FuelStockChangeFormType)":{"errors":1,"messages":[{"message":"Method In2plane\\BulkStorageBundle\\Form\\Type\\FuelStockChangeFormType::getDailyStockRepository() should return In2plane\\BulkStorageBundle\\Repository\\DailyStockRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\DailyStock>.","line":34,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Service/Traits/LockedDailyStockValidationTrait.php (in context of class In2plane\\BulkStorageBundle\\Form\\Type\\OwnershipTransferType)":{"errors":1,"messages":[{"message":"Method In2plane\\BulkStorageBundle\\Form\\Type\\OwnershipTransferType::getDailyStockRepository() should return In2plane\\BulkStorageBundle\\Repository\\DailyStockRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\DailyStock>.","line":34,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Service/Traits/LockedDailyStockValidationTrait.php (in context of class In2plane\\BulkStorageBundle\\Form\\Type\\StorageTankQuantityType)":{"errors":1,"messages":[{"message":"Method In2plane\\BulkStorageBundle\\Form\\Type\\StorageTankQuantityType::getDailyStockRepository() should return In2plane\\BulkStorageBundle\\Repository\\DailyStockRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\DailyStock>.","line":34,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Service/Traits/LockedDailyStockValidationTrait.php (in context of class In2plane\\CoreBundle\\Form\\Type\\Vehicle\\BowserType)":{"errors":1,"messages":[{"message":"Method In2plane\\CoreBundle\\Form\\Type\\Vehicle\\BowserType::getDailyStockRepository() should return In2plane\\BulkStorageBundle\\Repository\\DailyStockRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\DailyStock>.","line":34,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Service/Traits/LockedDailyStockValidationTrait.php (in context of class In2plane\\CoreBundle\\Worker\\ACPUImportWorker)":{"errors":1,"messages":[{"message":"Method In2plane\\CoreBundle\\Worker\\ACPUImportWorker::getDailyStockRepository() should return In2plane\\BulkStorageBundle\\Repository\\DailyStockRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\DailyStock>.","line":34,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Service/Traits/LockedDailyStockValidationTrait.php (in context of class In2plane\\SuperAdminBundle\\Form\\Type\\FuelStockType)":{"errors":1,"messages":[{"message":"Method In2plane\\SuperAdminBundle\\Form\\Type\\FuelStockType::getDailyStockRepository() should return In2plane\\BulkStorageBundle\\Repository\\DailyStockRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\DailyStock>.","line":34,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Validator/Constraints/LockedDailyStockConstraintValidator.php":{"errors":1,"messages":[{"message":"Method In2plane\\BulkStorageBundle\\Validator\\Constraints\\LockedDailyStockConstraintValidator::getDailyStockRepository() should return In2plane\\BulkStorageBundle\\Repository\\DailyStockRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\DailyStock>.","line":47,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Validator/Constraints/StorageTankOperationalValidator.php":{"errors":1,"messages":[{"message":"Strict comparison using === between true and false will always evaluate to false.","line":22,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/BulkStorageBundle/Worker/UpdateBulkStorageQuantitiesWorker.php":{"errors":3,"messages":[{"message":"Method In2plane\\BulkStorageBundle\\Worker\\UpdateBulkStorageQuantitiesWorker::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":181,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Worker\\UpdateBulkStorageQuantitiesWorker::getDailyStockRepository() should return In2plane\\BulkStorageBundle\\Repository\\DailyStockRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\DailyStock>.","line":186,"ignorable":true},{"message":"Method In2plane\\BulkStorageBundle\\Worker\\UpdateBulkStorageQuantitiesWorker::getFuelQuantityChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelQuantityChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelQuantityChange>.","line":191,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/ApiDoc/Parser/FormTypeParser.php":{"errors":17,"messages":[{"message":"Method In2plane\\CoreBundle\\ApiDoc\\Parser\\FormTypeParser::createForm() invoked with 3 parameters, 1 required.","line":61,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\Form\\ResolvedFormTypeInterface::getName().","line":138,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\Form\\ResolvedFormTypeInterface::getName().","line":139,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\Form\\ResolvedFormTypeInterface::getName().","line":141,"ignorable":true},{"message":"If condition is always true.","line":165,"ignorable":true},{"message":"If condition is always true.","line":166,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\ApiDoc\\Parser\\FormTypeParser::parseForm() invoked with 2 parameters, 1 required.","line":175,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\Form\\ResolvedFormTypeInterface::getName().","line":249,"ignorable":true},{"message":"Right side of && is always true.","line":258,"ignorable":true},{"message":"Class Symfony\\Component\\Form\\Extension\\Core\\ChoiceList\\ChoiceListInterface not found.","line":260,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Method In2plane\\CoreBundle\\ApiDoc\\Parser\\FormTypeParser::createForm() should return Symfony\\Component\\Form\\FormInterface|null but return statement is missing.","line":309,"ignorable":true},{"message":"Parameter $choiceList of method In2plane\\CoreBundle\\ApiDoc\\Parser\\FormTypeParser::handleChoiceListValues() has invalid type Symfony\\Component\\Form\\Extension\\Core\\ChoiceList\\ChoiceListInterface.","line":318,"ignorable":true},{"message":"Call to method getPreferredViews() on an unknown class Symfony\\Component\\Form\\Extension\\Core\\ChoiceList\\ChoiceListInterface.","line":321,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getRemainingViews() on an unknown class Symfony\\Component\\Form\\Extension\\Core\\ChoiceList\\ChoiceListInterface.","line":321,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Class Symfony\\Component\\Form\\Extension\\Core\\View\\ChoiceView not found.","line":332,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Access to property $label on an unknown class Symfony\\Component\\Form\\Extension\\Core\\View\\ChoiceView.","line":333,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Access to property $value on an unknown class Symfony\\Component\\Form\\Extension\\Core\\View\\ChoiceView.","line":333,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/BluetoothDeviceContext.php":{"errors":4,"messages":[{"message":"Static property In2plane\\CoreBundle\\Behat\\BluetoothDeviceContext::$device (In2plane\\CoreBundle\\Document\\Device\\AndroidDevice|In2plane\\CoreBundle\\Document\\Device\\BluetoothDevice|In2plane\\CoreBundle\\Document\\Device\\CloudDevice) does not accept In2plane\\CoreBundle\\Document\\Device|null.","line":87,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Repository\\DeviceRepository::findOneByTypeModelSerialNumber() invoked with 4 parameters, 3 required.","line":116,"ignorable":true},{"message":"Static property In2plane\\CoreBundle\\Behat\\BluetoothDeviceContext::$device (In2plane\\CoreBundle\\Document\\Device\\AndroidDevice|In2plane\\CoreBundle\\Document\\Device\\BluetoothDevice|In2plane\\CoreBundle\\Document\\Device\\CloudDevice) does not accept In2plane\\CoreBundle\\Document\\Device|null.","line":116,"ignorable":true},{"message":"Static property In2plane\\CoreBundle\\Behat\\BluetoothDeviceContext::$device (In2plane\\CoreBundle\\Document\\Device\\AndroidDevice|In2plane\\CoreBundle\\Document\\Device\\BluetoothDevice|In2plane\\CoreBundle\\Document\\Device\\CloudDevice) does not accept In2plane\\CoreBundle\\Document\\Device|null.","line":148,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/BowserRefuelsContext.php":{"errors":2,"messages":[{"message":"Call to method followRedirect() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":58,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":59,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/BusinessRulesContext.php":{"errors":2,"messages":[{"message":"Call to method followRedirect() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":101,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":102,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/CertificateContext.php":{"errors":2,"messages":[{"message":"Call to an undefined method Traversable<(int|string), mixed>::count().","line":64,"ignorable":true},{"message":"Call to an undefined method Traversable<(int|string), mixed>::count().","line":73,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/CommonContext.php":{"errors":3,"messages":[{"message":"Call to method followRedirect() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":80,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":90,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":102,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/CompanyContext.php":{"errors":1,"messages":[{"message":"Call to method getHistory() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":498,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/CustomerContext.php":{"errors":1,"messages":[{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":110,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/DailyCloseoutContext.php":{"errors":2,"messages":[{"message":"Call to method followRedirect() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":56,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":57,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/DataImportContext.php":{"errors":4,"messages":[{"message":"Variable $dataImport in PHPDoc tag @var does not exist.","line":368,"ignorable":true},{"message":"Call to an undefined method In2plane\\BulkStorageBundle\\Document\\ProductUplift::getCustomer().","line":649,"ignorable":true},{"message":"Call to an undefined method In2plane\\BulkStorageBundle\\Document\\ProductUplift::getFuelSupplier().","line":650,"ignorable":true},{"message":"PHPDoc tag @var has invalid value ($productUplift1 FuelUplift): Unexpected token \"$productUplift1\", expected type at offset 9","line":666,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/DatabaseSetupContext.php":{"errors":1,"messages":[{"message":"Variable $database in PHPDoc tag @var does not match assigned variable $databaseService.","line":45,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/DefaultContext.php":{"errors":112,"messages":[{"message":"Call to method followRedirects() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":271,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":377,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getFuelSupplierContractRepository() should return In2plane\\OperationsBundle\\Repository\\FuelSupplierContractRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplierContract>.","line":407,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getFuelDeliveryRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelDeliveryRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelDelivery>.","line":415,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getBowserFuelDeliveryRepository() should return In2plane\\BulkStorageBundle\\Repository\\BowserFuelDeliveryRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\BowserFuelDelivery>.","line":423,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getPipelineFuelDeliveryRepository() should return In2plane\\BulkStorageBundle\\Repository\\PipelineFuelDeliveryRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\PipelineFuelDelivery>.","line":431,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getRailHeadFuelDeliveryRepository() should return In2plane\\BulkStorageBundle\\Repository\\RailHeadFuelDeliveryRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\RailHeadFuelDelivery>.","line":439,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getServiceOrderSupplierRepository() should return In2plane\\OperationsBundle\\Repository\\ServiceOrderSupplierRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrderSupplier>.","line":447,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getStorageTankRepository() should return In2plane\\BulkStorageBundle\\Repository\\StorageTankRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\StorageTank>.","line":455,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getQualityControlItemRepository() should return In2plane\\BulkStorageBundle\\Repository\\QualityControlItemRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\QualityControl\\Item>.","line":463,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getQualityControlScheduledItemRepository() should return In2plane\\BulkStorageBundle\\Repository\\QualityControlScheduledItemRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\QualityControl\\ScheduledItem>.","line":471,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getDeviceRepository() should return In2plane\\CoreBundle\\Repository\\DeviceRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Device>.","line":479,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getServiceFlightRepository() should return In2plane\\OperationsBundle\\Repository\\ServicedFlightRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServicedFlight>.","line":487,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":495,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getBusinessAviationSettingsRepository() should return In2plane\\OperationsBundle\\Repository\\BusinessAviationSettingsRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\BusinessAviationSettings>.","line":500,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getInboundEmailOrderParserSettingsRepository() should return In2plane\\OperationsBundle\\Repository\\InboundEmailOrderParserSettingsRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\InboundEmail\\InboundEmailOrderParserSettings>.","line":508,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getInboundEmailOrderFormatRepository() should return In2plane\\OperationsBundle\\Repository\\InboundEmailOrderFormatRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\InboundEmail\\InboundEmailOrderFormat>.","line":516,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getUserRepository() should return In2plane\\CoreBundle\\Repository\\UserRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\User>.","line":524,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getVehicleRepository() should return In2plane\\CoreBundle\\Repository\\VehicleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>.","line":532,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getAircraftRepository() should return In2plane\\OperationsBundle\\Repository\\AircraftRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Aircraft>.","line":540,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getStandRepository() should return In2plane\\CoreBundle\\Repository\\StandRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Stand>.","line":548,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getAircraftVariantRepository() should return In2plane\\CoreBundle\\Repository\\AircraftVariantRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\AircraftVariant>.","line":556,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getAirlineRepository() should return In2plane\\CoreBundle\\Repository\\AirlineRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airline>.","line":564,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getAirlineGroupRepository() should return In2plane\\OperationsBundle\\Repository\\AirlineGroupRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\AirlineGroup>.","line":572,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getAirportRepository() should return In2plane\\CoreBundle\\Repository\\AirportRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airport>.","line":580,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getSiteRepository() should return In2plane\\CoreBundle\\Repository\\SiteRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Site>.","line":585,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getPitRepository() should return In2plane\\CoreBundle\\Repository\\PitRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Pit>.","line":593,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getCustomerRepository() should return In2plane\\CoreBundle\\Repository\\CustomerRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Customer>.","line":601,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getTemporaryCustomerRepository() should return In2plane\\CoreBundle\\Repository\\TemporaryCustomerRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\TemporaryCustomer>.","line":609,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getFlightRepository() should return In2plane\\OperationsBundle\\Repository\\FlightRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Flight>.","line":617,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getFuelOrderRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":625,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getServiceOrderRepository() should return In2plane\\OperationsBundle\\Repository\\ServiceOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrder>.","line":633,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getFuelTypeRepository() should return In2plane\\CoreBundle\\Repository\\FuelTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FuelType>.","line":641,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getFuelSupplierRepository() should return In2plane\\OperationsBundle\\Repository\\FuelSupplierRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>.","line":649,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getFuelAdditiveRepository() should return In2plane\\OperationsBundle\\Repository\\FuelAdditiveRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelAdditive>.","line":657,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getCloseoutRepository() should return In2plane\\OperationsBundle\\Repository\\CloseoutRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Closeout>.","line":665,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getFuelStockChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelStockChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelStockChange>.","line":673,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getFuelStockRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelStockRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelStock>.","line":681,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getFuelMovementRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelMovementRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelMovement>.","line":689,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getTerminalRepository() should return In2plane\\CoreBundle\\Repository\\TerminalRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Terminal>.","line":697,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getHydrantRepository() should return In2plane\\CoreBundle\\Repository\\HydrantRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Hydrant>.","line":705,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getExternalFlowMeterRepository() should return In2plane\\CoreBundle\\Repository\\ExternalFlowMeterRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\ExternalFlowMeter>.","line":713,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getDOOPFileRepository() should return In2plane\\OperationsBundle\\Repository\\DOOPFileRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\DOOPFile>.","line":721,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getFileRepository() should return In2plane\\CoreBundle\\Repository\\FileRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\File>.","line":729,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getAircraftMovementRepository() should return In2plane\\OperationsBundle\\Repository\\AircraftMovementRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\AircraftMovement>.","line":737,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getBaggageOrderRepository() should return In2plane\\OperationsBundle\\Repository\\BaggageOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\BaggageOrder>.","line":745,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getBeltLoaderOrderRepository() should return In2plane\\OperationsBundle\\Repository\\BeltLoaderOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\BeltLoaderOrder>.","line":753,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getGPUReturnOrderRepository() should return In2plane\\OperationsBundle\\Repository\\GPUReturnOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\GPUReturnOrder>.","line":761,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getWaterOrderRepository() should return In2plane\\OperationsBundle\\Repository\\WaterOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\WaterOrder>.","line":769,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getToiletOrderRepository() should return In2plane\\OperationsBundle\\Repository\\ToiletOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ToiletOrder>.","line":777,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getGPUOrderRepository() should return In2plane\\OperationsBundle\\Repository\\GPUOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\GPUOrder>.","line":785,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getMediliftOrderRepository() should return In2plane\\OperationsBundle\\Repository\\MediliftOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\MediliftOrder>.","line":793,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getAirStartOrderRepository() should return In2plane\\OperationsBundle\\Repository\\AirStartOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\AirStartOrder>.","line":801,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getMarshallingOrderRepository() should return In2plane\\OperationsBundle\\Repository\\MarshallingOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\MarshallingOrder>.","line":809,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getStepsOrderRepository() should return In2plane\\OperationsBundle\\Repository\\StepsOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\StepsOrder>.","line":817,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getTowingOrderRepository() should return In2plane\\OperationsBundle\\Repository\\TowingOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\TowingOrder>.","line":825,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getDeIcingFluidTypeRepository() should return In2plane\\CoreBundle\\Repository\\DeIcingFluidTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\DeIcingFluidType>.","line":833,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getDeIcingStorageTankRepository() should return In2plane\\BulkStorageBundle\\Repository\\DeIcingStorageTankRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\DeIcingStorageTank>.","line":841,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getDeIcingOrderRepository() should return In2plane\\OperationsBundle\\Repository\\DeIcingOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\DeIcingOrder>.","line":849,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getApiSourceRepository() should return In2plane\\OperationsBundle\\Repository\\ApiSourceRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\ApiSource>.","line":857,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getMovementExecCachedFlightRepository() should return In2plane\\OperationsBundle\\Repository\\MovementExecCachedFlightRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\MovementExecCachedFlight>.","line":865,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getTelemetrySessionRepository() should return In2plane\\TelemetryBundle\\Repository\\TelemetrySessionRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\TelemetryBundle\\Document\\TelemetrySession>.","line":873,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getServicedFlightRepository() should return In2plane\\OperationsBundle\\Repository\\ServicedFlightRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServicedFlight>.","line":881,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getServiceTypeSettingsRepository() should return In2plane\\OperationsBundle\\Repository\\ServiceTypeSettingsRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\ServiceTypeSettings>.","line":889,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getFuelQuantityChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelQuantityChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelQuantityChange>.","line":897,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getAirportScheduleRepository() should return In2plane\\OperationsBundle\\Repository\\AirportScheduleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\AirportSchedule>.","line":905,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getRuleRepository() should return In2plane\\RuleBundle\\Repository\\RuleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\RuleBundle\\Document\\Rule>.","line":913,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getAircraftModelRepository() should return In2plane\\CoreBundle\\Repository\\AircraftModelRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\AircraftModel>.","line":921,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getReasonRepository() should return In2plane\\OperationsBundle\\Repository\\ReasonRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\Reason>.","line":929,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getNonServicedFlightRepository() should return In2plane\\OperationsBundle\\Repository\\NonServicedFlightRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\NonServicedFlight>.","line":937,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getShiftRepository() should return In2plane\\OperationsBundle\\Repository\\ShiftRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Shift>.","line":945,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getDataImportRepository() should return In2plane\\CoreBundle\\Repository\\DataImportRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\DataImport>.","line":953,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getQualityControlScheduleRepository() should return In2plane\\BulkStorageBundle\\Repository\\QualityControlScheduleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\QualityControl\\Schedule>.","line":961,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getAutomatedExporterRepository() should return In2plane\\CoreBundle\\Repository\\AutomatedExporterRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Machine\\AutomatedExporter>.","line":969,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getSettingsChangeRepository() should return In2plane\\CoreBundle\\Repository\\SettingsChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\SettingsChange>.","line":977,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getLogEntryRepository() should return In2plane\\CoreBundle\\Repository\\LogEntryRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\LogEntry>.","line":995,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getPasswordPolicyRepository() should return In2plane\\CoreBundle\\Repository\\PasswordPolicyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\PasswordPolicy>.","line":1003,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getQualityCheckDefinitionRepository() should return In2plane\\OperationsBundle\\Repository\\QualityCheckDefinitionRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\QualityCheckDefinition>.","line":1011,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":1079,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getDriver() should return Behat\\Mink\\Driver\\BrowserKitDriver but returns Behat\\Mink\\Driver\\DriverInterface.","line":1108,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getClient() has invalid return type In2plane\\CoreBundle\\Behat\\Client.","line":1114,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getClient() should return In2plane\\CoreBundle\\Behat\\Client but returns Symfony\\Component\\BrowserKit\\AbstractBrowser.","line":1128,"ignorable":true},{"message":"Variable $node in isset() always exists and is not nullable.","line":1148,"ignorable":true},{"message":"Variable $node in isset() always exists and is not nullable.","line":1172,"ignorable":true},{"message":"Call to method getHistory() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":1212,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getFlagRepository() should return In2plane\\OperationsBundle\\Repository\\FlagRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Flags\\Flag>.","line":1227,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getFuelOwnershipTransferRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelOwnershipTransferRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelOwnershipTransfer>.","line":1232,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getWorkerJobRepository() should return In2plane\\CoreBundle\\Repository\\WorkerJobRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\WorkerJob>.","line":1255,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getWorkerJobArchiveRepository() should return In2plane\\CoreBundle\\Repository\\WorkerJobArchiveRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\WorkerJobArchive>.","line":1260,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getSwimlaneRepository() should return In2plane\\OperationsBundle\\Repository\\SwimLaneRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\SwimLane>.","line":1270,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getGanttRepository() should return In2plane\\OperationsBundle\\Repository\\GanttRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Gantt>.","line":1275,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getCountryRepository() should return In2plane\\CoreBundle\\Repository\\CountryRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Country>.","line":1285,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getEnrolmentKeyRepository() should return In2plane\\CoreBundle\\Repository\\EnrolmentKeyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\EnrolmentKey>.","line":1290,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getCurrencyRepository() should return In2plane\\CoreBundle\\Repository\\CurrencyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Currency>.","line":1295,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getSupplySourceRepository() should return In2plane\\BulkStorageBundle\\Repository\\SupplySourceRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\SupplySource>.","line":1300,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getFailureLoginAttemptRepository() should return Anyx\\LoginGateBundle\\Document\\FailureLoginAttemptRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FailureLoginAttempt>.","line":1313,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getFuelFarmMeterRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelFarmMeterRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelFarmMeter>.","line":1321,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getPrintRendererRepository() should return In2plane\\CoreBundle\\Repository\\PrintRendererRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\PrintRenderer>.","line":1326,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getDiscrepancyCalculationSettingsRepository() should return In2plane\\OperationsBundle\\Repository\\DiscrepancyCalculationSettingsRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\DiscrepancyCalculationSettings>.","line":1383,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getLogisticsOperatorRepository() should return In2plane\\LogisticsBundle\\Repository\\LogisticsOperatorRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\LogisticsBundle\\Document\\LogisticsOperator>.","line":1391,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getDataResetRepository() should return In2plane\\BulkStorageBundle\\Repository\\DataResetRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\DataReset>.","line":1404,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getProductAllocationRepository() should return In2plane\\BulkStorageBundle\\Repository\\ProductAllocationRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\ProductAllocation\\ProductAllocation>.","line":1412,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getMonthlyStockRepository() should return In2plane\\BulkStorageBundle\\Repository\\MonthlyStockRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\MonthlyStock>.","line":1420,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getDailyStockRepository() should return In2plane\\BulkStorageBundle\\Repository\\DailyStockRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\DailyStock>.","line":1428,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getProductAdjustmentRepository() should return In2plane\\BulkStorageBundle\\Repository\\ProductAdjustmentRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\ProductAdjustment>.","line":1436,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getDraftCertificateRepository() should return In2plane\\CoreBundle\\Repository\\DraftCertificateRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\DraftCertificate>.","line":1441,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getBulkCertificateFileRepository() should return In2plane\\CoreBundle\\Repository\\BulkCertificateFileRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\BulkCertificateFile>.","line":1446,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getDataFeedRepository() should return In2plane\\CoreBundle\\Repository\\DataFeedRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Machine\\DataFeed>.","line":1456,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getCertificateTypeRepository() should return In2plane\\CoreBundle\\Repository\\CertificateTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\CertificateType>.","line":1461,"ignorable":true},{"message":"Call to an undefined method In2plane\\OperationsBundle\\MessageQueue\\Processor\\ProcessorInterface::setMachine().","line":1502,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getBlacklistRepository() should return In2plane\\OperationsBundle\\Repository\\BlacklistRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Blacklist>.","line":1537,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::getSanctionRepository() should return In2plane\\OperationsBundle\\Repository\\SanctionRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Sanction>.","line":1542,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/DelaysContext.php":{"errors":2,"messages":[{"message":"Call to method followRedirect() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":58,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":59,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/DeviceManagementContext.php":{"errors":16,"messages":[{"message":"Expression \"expect($data['additivesToCapture'])->to->be->false\" on a separate line does not do anything.","line":363,"ignorable":true},{"message":"Expression \"expect($data['allowPrivateFlights'])->to->be->false\" on a separate line does not do anything.","line":369,"ignorable":true},{"message":"Expression \"expect($data['defaultFuelSupplier'])->to->be->null\" on a separate line does not do anything.","line":375,"ignorable":true},{"message":"Expression \"expect($data['pitRequired'])->to->be->true\" on a separate line does not do anything.","line":386,"ignorable":true},{"message":"Expression \"expect($data['singleSignOnEnabled'])->to->be->false\" on a separate line does not do anything.","line":391,"ignorable":true},{"message":"Expression \"expect($data['standRequired'])->to->be->true\" on a separate line does not do anything.","line":392,"ignorable":true},{"message":"Expression \"expect($data['terminalRequired'])->to->be->true\" on a separate line does not do anything.","line":393,"ignorable":true},{"message":"Expression \"expect($data['useDefaultValues'])->to->be->true\" on a separate line does not do anything.","line":394,"ignorable":true},{"message":"Expression \"expect($data['config']['allocationEnabled'])->to->be->true\" on a separate line does not do anything.","line":404,"ignorable":true},{"message":"Expression \"expect($data['config']['allowQualityChecksForFuelOrders'])->to->be->false\" on a separate line does not do anything.","line":405,"ignorable":true},{"message":"Expression \"expect($data['config']['claimingEnabled'])->to->be->false\" on a separate line does not do anything.","line":407,"ignorable":true},{"message":"Expression \"expect($data['config']['commsEnabled'])->to->be->false\" on a separate line does not do anything.","line":408,"ignorable":true},{"message":"Expression \"expect($data['config']['createAircraftOrderEnabled'])->to->be->false\" on a separate line does not do anything.","line":409,"ignorable":true},{"message":"Expression \"expect($data['config']['createBowserOrderEnabled'])->to->be->false\" on a separate line does not do anything.","line":410,"ignorable":true},{"message":"Expression \"expect($data['config']['multiVehicleOrdersEnabled'])->to->be->false\" on a separate line does not do anything.","line":412,"ignorable":true},{"message":"Expression \"expect($data['config']['allowQualityChecksForFuelOrders'])->to->be->true\" on a separate line does not do anything.","line":440,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/DiallingRulesContext.php":{"errors":6,"messages":[{"message":"Variable $user in PHPDoc tag @var does not exist.","line":30,"ignorable":true},{"message":"Variable $user in PHPDoc tag @var does not exist.","line":83,"ignorable":true},{"message":"Call to method followRedirect() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":127,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":128,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":139,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Expression \"expect($diallingList->getInheritRules())->to->be->true\" on a separate line does not do anything.","line":170,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/DiscrepancySettingsContext.php":{"errors":5,"messages":[{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":76,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method followRedirect() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":86,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":87,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":115,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":134,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/DoctrineLoggingContext.php":{"errors":1,"messages":[{"message":"PHPDoc tag @throws has invalid value (): Unexpected token \"\\n     *\", expected type at offset 102","line":159,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/DoctrineTransactionsContext.php":{"errors":2,"messages":[{"message":"Expression \"expect($airline)->to->not->be->null\" on a separate line does not do anything.","line":50,"ignorable":true},{"message":"Expression \"expect($airline)->to->be->null\" on a separate line does not do anything.","line":70,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/EditVehicleFormContext.php":{"errors":3,"messages":[{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":206,"ignorable":true},{"message":"Negated boolean expression is always false.","line":387,"ignorable":true},{"message":"Negated boolean expression is always false.","line":392,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/GeneralOperationsContext.php":{"errors":5,"messages":[{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":62,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":67,"ignorable":true},{"message":"Call to method followRedirect() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":77,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":78,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Iterator\\Iterator<In2plane\\CoreBundle\\Document\\FuelType>::count().","line":235,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/Helpers/HtmlCrawlerHelper.php (in context of class In2plane\\CoreBundle\\Behat\\DefaultContext)":{"errors":1,"messages":[{"message":"Using nullsafe method call on non-nullable type Symfony\\Component\\DomCrawler\\Crawler. Use -> instead.","line":40,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/Helpers/RestAPIHelper.php (in context of class In2plane\\BulkStorageBundle\\Behat\\Rest\\FuelDeliveryRestContext)":{"errors":8,"messages":[{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":11,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":18,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":25,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":31,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":36,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":41,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":46,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":51,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/Helpers/RestAPIHelper.php (in context of class In2plane\\BulkStorageBundle\\Behat\\Rest\\ProductUpliftRestContext)":{"errors":8,"messages":[{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":11,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":18,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":25,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":31,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":36,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":41,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":46,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":51,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/Helpers/RestAPIHelper.php (in context of class In2plane\\CoreBundle\\Behat\\DefaultContext)":{"errors":8,"messages":[{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":11,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":18,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":25,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":31,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":36,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":41,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":46,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":51,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/Helpers/RestAPIHelper.php (in context of class In2plane\\CoreBundle\\Behat\\RestAPIContext)":{"errors":8,"messages":[{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":11,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":18,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":25,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":31,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":36,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":41,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":46,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":51,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/Helpers/RestAPIHelper.php (in context of class In2plane\\OperationsBundle\\Behat\\Operations\\DataEntryModule\\DataEntryModuleContext)":{"errors":8,"messages":[{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":11,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":18,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":25,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":31,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":36,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":41,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":46,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":51,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/LoggerContext.php":{"errors":2,"messages":[{"message":"Call to an undefined method Prophecy\\Prophecy\\ObjectProphecy::log().","line":69,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":76,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/MessagingContext.php":{"errors":23,"messages":[{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":58,"ignorable":true},{"message":"Call to an undefined method In2plane\\OperationsBundle\\Document\\RealTimeNotifiable::getCompany().","line":62,"ignorable":true},{"message":"Call to an undefined method In2plane\\OperationsBundle\\Document\\RealTimeNotifiable::getDate().","line":64,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":67,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":68,"ignorable":true},{"message":"Static access to instance property In2plane\\BulkStorageBundle\\Behat\\DailyStockContext::$lastDailyStock.","line":71,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":73,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":81,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":88,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":94,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":100,"ignorable":true},{"message":"If condition is always false.","line":106,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":123,"ignorable":true},{"message":"If condition is always true.","line":346,"ignorable":true},{"message":"Cannot call method toArray() on array<string, mixed>|int|object.","line":415,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":457,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":489,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":522,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":538,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":555,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":578,"ignorable":true},{"message":"Static property In2plane\\OperationsBundle\\Behat\\FuelOrderContext::$fuelOrder (In2plane\\OperationsBundle\\Document\\FuelOrder) does not accept In2plane\\OperationsBundle\\Document\\ServiceOrder|null.","line":592,"ignorable":true},{"message":"Static property In2plane\\OperationsBundle\\Behat\\FuelOrderContext::$fuelOrder (In2plane\\OperationsBundle\\Document\\FuelOrder) does not accept In2plane\\OperationsBundle\\Document\\ServiceOrder|null.","line":602,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/OperatorRulesContext.php":{"errors":2,"messages":[{"message":"Call to method followRedirect() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":57,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":58,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/RestAPIContext.php":{"errors":1,"messages":[{"message":"Expression \"expect($found)->to->be->true\" on a separate line does not do anything.","line":610,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/SpreadsheetContext.php":{"errors":2,"messages":[{"message":"Using nullsafe method call on non-nullable type In2plane\\CoreBundle\\Spreadsheet\\SpreadsheetInterface. Use -> instead.","line":31,"ignorable":true},{"message":"Call to an undefined method In2plane\\CoreBundle\\Behat\\SpreadsheetContext::getCellName().","line":96,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/UserAPIContext.php":{"errors":4,"messages":[{"message":"Call to an undefined method In2plane\\AuditBundle\\Document\\BaseAction::getEvent().","line":170,"ignorable":true},{"message":"Call to an undefined method In2plane\\AuditBundle\\Document\\BaseAction::getEvent().","line":171,"ignorable":true},{"message":"Call to an undefined method In2plane\\AuditBundle\\Document\\BaseAction::getPrettifiedEvents().","line":171,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":313,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Behat/UserContext.php":{"errors":1,"messages":[{"message":"Static property In2plane\\CoreBundle\\Behat\\UserContext::$user (In2plane\\CoreBundle\\Document\\User) does not accept null.","line":30,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Command/CompanyCleanupCommand.php":{"errors":6,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelStockChange>::findByFuelOrder().","line":104,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelMovement>::findByFuelOrder().","line":107,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Command\\CompanyCleanupCommand::getFuelOrderRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":168,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Command\\CompanyCleanupCommand::getStorageTankRepository() should return In2plane\\BulkStorageBundle\\Repository\\StorageTankRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\StorageTank>.","line":176,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Command\\CompanyCleanupCommand::getFuelQuantityChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelQuantityChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelQuantityChange>.","line":184,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Command\\CompanyCleanupCommand::getVehicleRepository() should return In2plane\\CoreBundle\\Repository\\VehicleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>.","line":192,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Command/FixAndMergeStandsCommand.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Stand>::findOneByName().","line":88,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Command/GeneratePasswordForBlankCommand.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>::findOneByDomain().","line":53,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Command/NotificationCommand.php":{"errors":3,"messages":[{"message":"Call to an undefined method Symfony\\Component\\Console\\Helper\\HelperInterface::ask().","line":229,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\Console\\Helper\\HelperInterface::ask().","line":240,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\Console\\Helper\\HelperInterface::ask().","line":249,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Command/SwaggerDumpCommand.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>::findOneByDomain().","line":51,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Controller/CustomerController.php":{"errors":1,"messages":[{"message":"Argument of an invalid type In2plane\\CoreBundle\\Document\\TemporaryCustomer supplied for foreach, only iterables are supported.","line":276,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Controller/DataImportController.php":{"errors":2,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\DataImport>::createFindByCompanyAndProcessorQB().","line":46,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\DataImport>::createFindByCompanyAndProcessorQB().","line":198,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Controller/DocumentController.php":{"errors":79,"messages":[{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getAircraftModelRepository() should return In2plane\\CoreBundle\\Repository\\AircraftModelRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\AircraftModel>.","line":327,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getDiscrepancyCalculationSettingsRepository() should return In2plane\\OperationsBundle\\Repository\\DiscrepancyCalculationSettingsRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\DiscrepancyCalculationSettings>.","line":335,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getAircraftVariantRepository() should return In2plane\\CoreBundle\\Repository\\AircraftVariantRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\AircraftVariant>.","line":343,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getAircraftRepository() should return In2plane\\OperationsBundle\\Repository\\AircraftRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Aircraft>.","line":351,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getAirportRepository() should return In2plane\\CoreBundle\\Repository\\AirportRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airport>.","line":359,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getSiteRepository() should return In2plane\\CoreBundle\\Repository\\SiteRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Site>.","line":367,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getCloseoutRepository() should return In2plane\\OperationsBundle\\Repository\\CloseoutRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Closeout>.","line":383,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getCurrencyRepository() should return In2plane\\CoreBundle\\Repository\\CurrencyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Currency>.","line":391,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":399,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getCountryRepository() should return In2plane\\CoreBundle\\Repository\\CountryRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Country>.","line":407,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getDataFeedRepository() should return In2plane\\CoreBundle\\Repository\\DataFeedRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Machine\\DataFeed>.","line":415,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getAutomatedExporterRepository() should return In2plane\\CoreBundle\\Repository\\AutomatedExporterRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Machine\\AutomatedExporter>.","line":423,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getFlightRepository() should return In2plane\\OperationsBundle\\Repository\\FlightRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Flight>.","line":431,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getFileRepository() should return In2plane\\CoreBundle\\Repository\\FileRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\File>.","line":439,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getLogEntryRepository() should return In2plane\\CoreBundle\\Repository\\LogEntryRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\LogEntry>.","line":447,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getDocumentEditRepository() should return In2plane\\CoreBundle\\Repository\\DocumentEditRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\DocumentEdit>.","line":455,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getServiceOrderRepository() should return In2plane\\OperationsBundle\\Repository\\ServiceOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrder>.","line":463,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getDeicingOrderRepository() should return In2plane\\OperationsBundle\\Repository\\DeIcingOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\DeIcingOrder>.","line":471,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getFuelOrderRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":479,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getServiceOrderSupplierRepository() should return In2plane\\OperationsBundle\\Repository\\ServiceOrderSupplierRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrderSupplier>.","line":487,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getLocationRepository() should return In2plane\\CoreBundle\\Repository\\LocationRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Location>.","line":495,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getMachineRepository() should return In2plane\\CoreBundle\\Repository\\MachineRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Machine>.","line":503,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getShiftTemplateRepository() should return In2plane\\OperationsBundle\\Repository\\ShiftTemplateRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ShiftTemplate>.","line":511,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getBillingTypeRepository() should return In2plane\\OperationsBundle\\Repository\\BillingTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\BillingType>.","line":519,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getShiftScheduleRepository() should return In2plane\\OperationsBundle\\Repository\\ShiftScheduleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ShiftSchedule>.","line":527,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getShiftRepository() should return In2plane\\OperationsBundle\\Repository\\ShiftRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Shift>.","line":535,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getQualityControlScheduleRepository() should return In2plane\\BulkStorageBundle\\Repository\\QualityControlScheduleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\QualityControl\\Schedule>.","line":543,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getQualityControlScheduledItemRepository() should return In2plane\\BulkStorageBundle\\Repository\\QualityControlScheduledItemRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\QualityControl\\ScheduledItem>.","line":551,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getTelemetryRepository() should return In2plane\\TelemetryBundle\\Repository\\TelemetryRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\TelemetryBundle\\Document\\Telemetry>.","line":559,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getTelemetrySessionRepository() should return In2plane\\TelemetryBundle\\Repository\\TelemetrySessionRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\TelemetryBundle\\Document\\TelemetrySession>.","line":567,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getTelemetryDataRepository() should return In2plane\\TelemetryBundle\\Repository\\TelemetryDataRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\TelemetryBundle\\Document\\TelemetryData>.","line":575,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getUserRepository() should return In2plane\\CoreBundle\\Repository\\UserRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\User>.","line":583,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getTemporaryUserRepository() should return In2plane\\CoreBundle\\Repository\\TemporaryUserRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\TemporaryUser>.","line":591,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getTemporaryCustomerRepository() should return In2plane\\CoreBundle\\Repository\\TemporaryCustomerRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\TemporaryCustomer>.","line":599,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getScheduledBreakRepository() should return In2plane\\OperationsBundle\\Repository\\ScheduledBreakRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ScheduledBreak>.","line":607,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getVehicleRepository() should return In2plane\\CoreBundle\\Repository\\VehicleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>.","line":615,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getVehicleLocationHistoryRepository() should return In2plane\\CoreBundle\\Repository\\VehicleLocationHistoryRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\VehicleLocationHistory>.","line":623,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getVehicleStatusHistoryRepository() should return In2plane\\CoreBundle\\Repository\\VehicleStatusHistoryRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\VehicleStatusHistory>.","line":631,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getVoiceCallRepository() should return In2plane\\CommsBundle\\Repository\\VoiceCallRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CommsBundle\\Document\\VoiceCall>.","line":639,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getJourneyRepository() should return In2plane\\TelemetryBundle\\Repository\\JourneyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\TelemetryBundle\\Document\\Journey>.","line":647,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getGeofencingAreaRepository() should return In2plane\\TelemetryBundle\\Repository\\GeofencingAreaRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\TelemetryBundle\\Document\\GeofencingArea>.","line":655,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getRuleRepository() should return In2plane\\RuleBundle\\Repository\\RuleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\RuleBundle\\Document\\Rule>.","line":663,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getPasswordPolicyRepository() should return In2plane\\CoreBundle\\Repository\\PasswordPolicyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\PasswordPolicy>.","line":671,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getAircraftMovementRepository() should return In2plane\\OperationsBundle\\Repository\\AircraftMovementRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\AircraftMovement>.","line":679,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getDatabaseRepository() should return In2plane\\TestBundle\\Repository\\DatabaseRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\TestBundle\\Document\\Database>.","line":687,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getReleaseRepository() should return In2plane\\CoreBundle\\Repository\\ReleaseRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Release>.","line":695,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getReportRepository() should return In2plane\\ReportingBundle\\Repository\\ReportRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\ReportingBundle\\Document\\Report>.","line":703,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getFuelTransferRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelTransferRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelTransfer>.","line":711,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getPaymentCardRepository() should return In2plane\\OperationsBundle\\Repository\\PaymentCardRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\PaymentCard>.","line":719,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getCostReportCodeRepository() should return In2plane\\CoreBundle\\Repository\\CostReportCodeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\CostReportCode>.","line":727,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getFinancePackageCostMonthRepository() should return In2plane\\CoreBundle\\Repository\\FinancePackageCostMonthRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FinancePackageCostMonth>.","line":735,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getFuelQuantityChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelQuantityChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelQuantityChange>.","line":743,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getPrintRendererRepository() should return In2plane\\CoreBundle\\Repository\\PrintRendererRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\PrintRenderer>.","line":751,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getInboundEmailOrderParserSettingsRepository() should return In2plane\\OperationsBundle\\Repository\\InboundEmailOrderParserSettingsRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\InboundEmail\\InboundEmailOrderParserSettings>.","line":759,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getInboundEmailOrderFormatRepository() should return In2plane\\OperationsBundle\\Repository\\InboundEmailOrderFormatRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\InboundEmail\\InboundEmailOrderFormat>.","line":767,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getDailyStockRepository() should return In2plane\\BulkStorageBundle\\Repository\\DailyStockRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\DailyStock>.","line":775,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getMonthlyStockRepository() should return In2plane\\BulkStorageBundle\\Repository\\MonthlyStockRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\MonthlyStock>.","line":783,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getDataImportRepository() should return In2plane\\CoreBundle\\Repository\\DataImportRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\DataImport>.","line":791,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getFuelTypeCodeRepository() should return In2plane\\OperationsBundle\\Repository\\FuelTypeCodeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelTypeCode>.","line":799,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getCompanyFuelSupplierIdentifierRepository() should return In2plane\\CoreBundle\\Repository\\CompanyFuelSupplierIdentifierRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\CompanyFuelSupplierIdentifier>.","line":1058,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getDoorRepository() should return In2plane\\CoreBundle\\Repository\\DoorRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Door>.","line":1066,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getBatchNumberRepository() should return In2plane\\OperationsBundle\\Repository\\BatchNumberRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\BatchNumber>.","line":1134,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getCustomsSettingsRepository() should return In2plane\\OperationsBundle\\Repository\\Customs\\CustomsSettingsRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\CustomsSettings>.","line":1150,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getFuelSupplierRepository() should return In2plane\\OperationsBundle\\Repository\\FuelSupplierRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>.","line":1158,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getFuelSupplierLocationCodeRepository() should return In2plane\\OperationsBundle\\Repository\\FuelSupplierLocationCodeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplierLocationCode>.","line":1166,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getEnrolmentKeyRepository() should return In2plane\\CoreBundle\\Repository\\EnrolmentKeyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\EnrolmentKey>.","line":1182,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getSupplySourceRepository() should return In2plane\\BulkStorageBundle\\Repository\\SupplySourceRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\SupplySource>.","line":1214,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getAirlineGroupRepository() should return In2plane\\OperationsBundle\\Repository\\AirlineGroupRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\AirlineGroup>.","line":1222,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getBlacklistRepository() should return In2plane\\OperationsBundle\\Repository\\BlacklistRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Blacklist>.","line":1238,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getSanctionRepository() should return In2plane\\OperationsBundle\\Repository\\SanctionRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Sanction>.","line":1246,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getTemporaryVehicleRepository() should return In2plane\\CoreBundle\\Repository\\TemporaryVehicleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\TemporaryVehicle>.","line":1254,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getFuelDeliveryRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelDeliveryRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelDelivery>.","line":1302,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getFuelSupplierCustomerCodeRepository() should return In2plane\\OperationsBundle\\Repository\\FuelSupplierCustomerCodeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplierCustomerCode>.","line":1310,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getFuelFarmMeterRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelFarmMeterRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelFarmMeter>.","line":1318,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getLogisticsOperatorRepository() should return In2plane\\LogisticsBundle\\Repository\\LogisticsOperatorRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\LogisticsBundle\\Document\\LogisticsOperator>.","line":1342,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getSettingsChangeRepository() should return In2plane\\CoreBundle\\Repository\\SettingsChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\SettingsChange>.","line":1418,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getBulkCertificateFileRepository() should return In2plane\\CoreBundle\\Repository\\BulkCertificateFileRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\BulkCertificateFile>.","line":1423,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getDraftCertificateRepository() should return In2plane\\CoreBundle\\Repository\\DraftCertificateRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\DraftCertificate>.","line":1428,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getQualityControlCheckSettingsRepository() should return In2plane\\OperationsBundle\\Repository\\QualityControlCheckSettingsRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\QualityControlCheckSettings>.","line":1436,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Controller/DownloadController.php":{"errors":1,"messages":[{"message":"Method In2plane\\CoreBundle\\Controller\\DownloadController::getFileDownloadRepository() should return In2plane\\CoreBundle\\Repository\\FileDownloadRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FileDownload>.","line":209,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Controller/FOSRestDocumentController.php":{"errors":34,"messages":[{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getAircraftModelRepository() should return In2plane\\CoreBundle\\Repository\\AircraftModelRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\AircraftModel>.","line":178,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getAircraftVariantRepository() should return In2plane\\CoreBundle\\Repository\\AircraftVariantRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\AircraftVariant>.","line":186,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getAircraftRepository() should return In2plane\\OperationsBundle\\Repository\\AircraftRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Aircraft>.","line":194,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getAircraftMovementRepository() should return In2plane\\OperationsBundle\\Repository\\AircraftMovementRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\AircraftMovement>.","line":202,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getAirportRepository() should return In2plane\\CoreBundle\\Repository\\AirportRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airport>.","line":210,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":218,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getCountryRepository() should return In2plane\\CoreBundle\\Repository\\CountryRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Country>.","line":226,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getFlightRepository() should return In2plane\\OperationsBundle\\Repository\\FlightRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Flight>.","line":234,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getServiceOrderRepository() should return In2plane\\OperationsBundle\\Repository\\ServiceOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrder>.","line":242,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getFuelOrderRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":250,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getTowingOrderRepository() should return In2plane\\OperationsBundle\\Repository\\TowingOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\TowingOrder>.","line":258,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getLocationRepository() should return In2plane\\CoreBundle\\Repository\\LocationRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Location>.","line":266,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getScheduledBreakRepository() should return In2plane\\OperationsBundle\\Repository\\ScheduledBreakRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ScheduledBreak>.","line":274,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getShiftTemplateRepository() should return In2plane\\OperationsBundle\\Repository\\ShiftTemplateRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ShiftTemplate>.","line":282,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getShiftRepository() should return In2plane\\OperationsBundle\\Repository\\ShiftRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Shift>.","line":290,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getShiftScheduleRepository() should return In2plane\\OperationsBundle\\Repository\\ShiftScheduleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ShiftSchedule>.","line":298,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getTelemetryRepository() should return In2plane\\TelemetryBundle\\Repository\\TelemetryRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\TelemetryBundle\\Document\\Telemetry>.","line":306,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getTelemetrySessionRepository() should return In2plane\\TelemetryBundle\\Repository\\TelemetrySessionRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\TelemetryBundle\\Document\\TelemetrySession>.","line":314,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getUserRepository() should return In2plane\\CoreBundle\\Repository\\UserRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\User>.","line":322,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getVehicleRepository() should return In2plane\\CoreBundle\\Repository\\VehicleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>.","line":330,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getVehicleLocationHistoryRepository() should return In2plane\\CoreBundle\\Repository\\VehicleLocationHistoryRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\VehicleLocationHistory>.","line":338,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getVehicleStatusHistoryRepository() should return In2plane\\CoreBundle\\Repository\\VehicleStatusHistoryRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\VehicleStatusHistory>.","line":346,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getVoiceCallRepository() should return In2plane\\CommsBundle\\Repository\\VoiceCallRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CommsBundle\\Document\\VoiceCall>.","line":354,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getJourneyRepository() should return In2plane\\TelemetryBundle\\Repository\\JourneyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\TelemetryBundle\\Document\\Journey>.","line":362,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getGlobalSettingsRepository() should return In2plane\\SuperAdminBundle\\Repository\\GlobalSettingsRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\SuperAdminBundle\\Document\\GlobalSettings>.","line":370,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getPaymentCardRepository() should return In2plane\\OperationsBundle\\Repository\\PaymentCardRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\PaymentCard>.","line":378,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getInboundEmailOrderParserSettingsRepository() should return In2plane\\OperationsBundle\\Repository\\InboundEmailOrderParserSettingsRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\InboundEmail\\InboundEmailOrderParserSettings>.","line":386,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getInboundEmailOrderFormatRepository() should return In2plane\\OperationsBundle\\Repository\\InboundEmailOrderFormatRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\InboundEmail\\InboundEmailOrderFormat>.","line":394,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getBulkTransferRepository() should return In2plane\\BulkStorageBundle\\Repository\\BulkTransferRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\BulkTransfer>.","line":402,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getQualityControlCheckSettingsRepository() should return In2plane\\OperationsBundle\\Repository\\QualityControlCheckSettingsRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\QualityControlCheckSettings>.","line":407,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getSalesOrderRepository() should return In2plane\\OperationsBundle\\Repository\\SalesOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\SalesOrder>.","line":568,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getEnrolmentKeyRepository() should return In2plane\\CoreBundle\\Repository\\EnrolmentKeyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\EnrolmentKey>.","line":573,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getPasswordPolicyRepository() should return In2plane\\CoreBundle\\Repository\\PasswordPolicyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\PasswordPolicy>.","line":583,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getAirlineGroupRepository() should return In2plane\\OperationsBundle\\Repository\\AirlineGroupRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\AirlineGroup>.","line":600,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Controller/SecurityController.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>::findOneByDomain().","line":112,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/DataFixtures/Faker/Provider/DocumentProvider.php":{"errors":6,"messages":[{"message":"Right side of && is always true.","line":57,"ignorable":true},{"message":"Left side of && is always true.","line":322,"ignorable":true},{"message":"If condition is always false.","line":369,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Method In2plane\\CoreBundle\\DataFixtures\\Faker\\Provider\\DocumentProvider::i6Pit() should return In2plane\\CoreBundle\\Document\\Pit but returns null.","line":487,"ignorable":true},{"message":"Cannot call method getCompanyRoles() on array|object.","line":498,"ignorable":true},{"message":"PHPDoc tag @param has invalid value (float lat): Unexpected token \"lat\", expected variable at offset 49","line":597,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/DataFixtures/Faker/Provider/ProviderHelper.php (in context of class In2plane\\CoreBundle\\DataFixtures\\Faker\\Provider\\DocumentProvider)":{"errors":23,"messages":[{"message":"Method In2plane\\CoreBundle\\DataFixtures\\Faker\\Provider\\DocumentProvider::getUserRepo() should return In2plane\\CoreBundle\\Repository\\UserRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\User>.","line":46,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\DataFixtures\\Faker\\Provider\\DocumentProvider::getStandRepo() should return In2plane\\CoreBundle\\Repository\\StandRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Stand>.","line":54,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\DataFixtures\\Faker\\Provider\\DocumentProvider::getTerminalRepo() should return In2plane\\CoreBundle\\Repository\\TerminalRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Terminal>.","line":62,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\DataFixtures\\Faker\\Provider\\DocumentProvider::getAircraftVariantRepo() should return In2plane\\CoreBundle\\Repository\\AircraftVariantRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\AircraftVariant>.","line":70,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\DataFixtures\\Faker\\Provider\\DocumentProvider::getAircraftRepo() should return In2plane\\OperationsBundle\\Repository\\AircraftRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Aircraft>.","line":78,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\DataFixtures\\Faker\\Provider\\DocumentProvider::getCompanyRepo() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":86,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\DataFixtures\\Faker\\Provider\\DocumentProvider::getAirlineRepo() should return In2plane\\CoreBundle\\Repository\\AirlineRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airline>.","line":94,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\DataFixtures\\Faker\\Provider\\DocumentProvider::getAirportRepo() should return In2plane\\CoreBundle\\Repository\\AirportRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airport>.","line":102,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\DataFixtures\\Faker\\Provider\\DocumentProvider::getSiteRepo() should return In2plane\\CoreBundle\\Repository\\SiteRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Site>.","line":110,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\DataFixtures\\Faker\\Provider\\DocumentProvider::getMachineRepo() should return In2plane\\CoreBundle\\Repository\\MachineRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Machine>.","line":118,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\DataFixtures\\Faker\\Provider\\DocumentProvider::getVehicleRepo() should return In2plane\\CoreBundle\\Repository\\VehicleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>.","line":126,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\DataFixtures\\Faker\\Provider\\DocumentProvider::getFuelSupplierRepo() should return In2plane\\OperationsBundle\\Repository\\FuelSupplierRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>.","line":134,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\DataFixtures\\Faker\\Provider\\DocumentProvider::getCustomerRepo() should return In2plane\\CoreBundle\\Repository\\CustomerRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Customer>.","line":142,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\DataFixtures\\Faker\\Provider\\DocumentProvider::getReasonRepo() should return In2plane\\OperationsBundle\\Repository\\ReasonRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\Reason>.","line":150,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\DataFixtures\\Faker\\Provider\\DocumentProvider::getCoreSettingsRepo() should return In2plane\\CoreBundle\\Repository\\CoreSettingsRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Settings\\CoreSettings>.","line":158,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\DataFixtures\\Faker\\Provider\\DocumentProvider::getFuelTypeRepo() should return In2plane\\CoreBundle\\Repository\\FuelTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FuelType>.","line":166,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\DataFixtures\\Faker\\Provider\\DocumentProvider::getAircraftMovementRepo() should return In2plane\\OperationsBundle\\Repository\\AircraftMovementRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\AircraftMovement>.","line":174,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\DataFixtures\\Faker\\Provider\\DocumentProvider::getDoorRepo() should return In2plane\\CoreBundle\\Repository\\DoorRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Door>.","line":182,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\DataFixtures\\Faker\\Provider\\DocumentProvider::getDeIcingStorageTankRepo() should return In2plane\\BulkStorageBundle\\Repository\\DeIcingStorageTankRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\DeIcingStorageTank>.","line":190,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\DataFixtures\\Faker\\Provider\\DocumentProvider::getDeIcingFluidTypeRepository() should return In2plane\\CoreBundle\\Repository\\DeIcingFluidTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\DeIcingFluidType>.","line":198,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\DataFixtures\\Faker\\Provider\\DocumentProvider::getStorageTankRepo() should return In2plane\\BulkStorageBundle\\Repository\\StorageTankRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\StorageTank>.","line":206,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\DataFixtures\\Faker\\Provider\\DocumentProvider::getCountryRepo() should return In2plane\\CoreBundle\\Repository\\CountryRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Country>.","line":214,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\DataFixtures\\Faker\\Provider\\DocumentProvider::getRuleRepo() should return In2plane\\RuleBundle\\Repository\\RuleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\RuleBundle\\Document\\Rule>.","line":222,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/DataFixtures/Faker/Provider/ProviderHelper.php (in context of class In2plane\\OperationsBundle\\DataFixtures\\Faker\\Provider\\OperationsProvider)":{"errors":23,"messages":[{"message":"Method In2plane\\OperationsBundle\\DataFixtures\\Faker\\Provider\\OperationsProvider::getUserRepo() should return In2plane\\CoreBundle\\Repository\\UserRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\User>.","line":46,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\DataFixtures\\Faker\\Provider\\OperationsProvider::getStandRepo() should return In2plane\\CoreBundle\\Repository\\StandRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Stand>.","line":54,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\DataFixtures\\Faker\\Provider\\OperationsProvider::getTerminalRepo() should return In2plane\\CoreBundle\\Repository\\TerminalRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Terminal>.","line":62,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\DataFixtures\\Faker\\Provider\\OperationsProvider::getAircraftVariantRepo() should return In2plane\\CoreBundle\\Repository\\AircraftVariantRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\AircraftVariant>.","line":70,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\DataFixtures\\Faker\\Provider\\OperationsProvider::getAircraftRepo() should return In2plane\\OperationsBundle\\Repository\\AircraftRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Aircraft>.","line":78,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\DataFixtures\\Faker\\Provider\\OperationsProvider::getCompanyRepo() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":86,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\DataFixtures\\Faker\\Provider\\OperationsProvider::getAirlineRepo() should return In2plane\\CoreBundle\\Repository\\AirlineRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airline>.","line":94,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\DataFixtures\\Faker\\Provider\\OperationsProvider::getAirportRepo() should return In2plane\\CoreBundle\\Repository\\AirportRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airport>.","line":102,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\DataFixtures\\Faker\\Provider\\OperationsProvider::getSiteRepo() should return In2plane\\CoreBundle\\Repository\\SiteRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Site>.","line":110,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\DataFixtures\\Faker\\Provider\\OperationsProvider::getMachineRepo() should return In2plane\\CoreBundle\\Repository\\MachineRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Machine>.","line":118,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\DataFixtures\\Faker\\Provider\\OperationsProvider::getVehicleRepo() should return In2plane\\CoreBundle\\Repository\\VehicleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>.","line":126,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\DataFixtures\\Faker\\Provider\\OperationsProvider::getFuelSupplierRepo() should return In2plane\\OperationsBundle\\Repository\\FuelSupplierRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>.","line":134,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\DataFixtures\\Faker\\Provider\\OperationsProvider::getCustomerRepo() should return In2plane\\CoreBundle\\Repository\\CustomerRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Customer>.","line":142,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\DataFixtures\\Faker\\Provider\\OperationsProvider::getReasonRepo() should return In2plane\\OperationsBundle\\Repository\\ReasonRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\Reason>.","line":150,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\DataFixtures\\Faker\\Provider\\OperationsProvider::getCoreSettingsRepo() should return In2plane\\CoreBundle\\Repository\\CoreSettingsRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Settings\\CoreSettings>.","line":158,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\DataFixtures\\Faker\\Provider\\OperationsProvider::getFuelTypeRepo() should return In2plane\\CoreBundle\\Repository\\FuelTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FuelType>.","line":166,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\DataFixtures\\Faker\\Provider\\OperationsProvider::getAircraftMovementRepo() should return In2plane\\OperationsBundle\\Repository\\AircraftMovementRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\AircraftMovement>.","line":174,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\DataFixtures\\Faker\\Provider\\OperationsProvider::getDoorRepo() should return In2plane\\CoreBundle\\Repository\\DoorRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Door>.","line":182,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\DataFixtures\\Faker\\Provider\\OperationsProvider::getDeIcingStorageTankRepo() should return In2plane\\BulkStorageBundle\\Repository\\DeIcingStorageTankRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\DeIcingStorageTank>.","line":190,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\DataFixtures\\Faker\\Provider\\OperationsProvider::getDeIcingFluidTypeRepository() should return In2plane\\CoreBundle\\Repository\\DeIcingFluidTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\DeIcingFluidType>.","line":198,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\DataFixtures\\Faker\\Provider\\OperationsProvider::getStorageTankRepo() should return In2plane\\BulkStorageBundle\\Repository\\StorageTankRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\StorageTank>.","line":206,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\DataFixtures\\Faker\\Provider\\OperationsProvider::getCountryRepo() should return In2plane\\CoreBundle\\Repository\\CountryRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Country>.","line":214,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\DataFixtures\\Faker\\Provider\\OperationsProvider::getRuleRepo() should return In2plane\\RuleBundle\\Repository\\RuleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\RuleBundle\\Document\\Rule>.","line":222,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/DataFixtures/MongoDB/Company/UnitedStatesCompany.php":{"errors":1,"messages":[{"message":"Type array|float|int|string|false|null in generic type Doctrine\\Common\\Collections\\ArrayCollection<array|float|int|string|false|null, array|float|int|string|false|null> in PHPDoc tag @return is not subtype of template type TKey of (int|string) of class Doctrine\\Common\\Collections\\ArrayCollection.","line":97,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/DataFixtures/MongoDB/LoadAircraftModelData.php":{"errors":1,"messages":[{"message":"Instanceof between null and In2plane\\CoreBundle\\Document\\AircraftModel will always evaluate to false.","line":61,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/DataFixtures/MongoDB/LoadAircraftVariantData.php":{"errors":1,"messages":[{"message":"Instanceof between null and In2plane\\CoreBundle\\Document\\AircraftVariant will always evaluate to false.","line":60,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/DataFixtures/MongoDB/LoadAirlineData.php":{"errors":2,"messages":[{"message":"Instanceof between null and In2plane\\CoreBundle\\Document\\Airline will always evaluate to false.","line":61,"ignorable":true},{"message":"PHPDoc tag @param references unknown parameter: $manager","line":145,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/DataFixtures/MongoDB/LoadAirportData.php":{"errors":1,"messages":[{"message":"Instanceof between null and In2plane\\CoreBundle\\Document\\Airport will always evaluate to false.","line":70,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/DataFixtures/MongoDB/LoadCertificateData.php":{"errors":2,"messages":[{"message":"Offset 'unlimited' on array{company: object, certType: object, scope: 'EMPLOYEE'|'ORG'|'VEHICLE', user?: object}|array{company: object, certType: object, scope: 'EMPLOYEE'|'ORG'|'VEHICLE', vehicle: object} on left side of ?? does not exist.","line":43,"ignorable":true},{"message":"Offset 'expiry' on array{company: object, certType: object, scope: 'EMPLOYEE'|'ORG'|'VEHICLE', user?: object}|array{company: object, certType: object, scope: 'EMPLOYEE'|'ORG'|'VEHICLE', vehicle: object} in isset() does not exist.","line":45,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/DataFixtures/MongoDB/LoadStandData.php":{"errors":1,"messages":[{"message":"Offset 'terminal' on array{name: string, terminal: string, parent?: string} in isset() always exists and is not nullable.","line":34,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/DataFixtures/MongoDB/LoadUserData.php":{"errors":6,"messages":[{"message":"Offset 'businessAviationRol…' on array{lastName: string, firstName: string, roles: array{0: string, 1?: string}, username?: string, serviceOrderTypes?: array{0: string, 1?: string}|array{string, string, string, string}}|array{lastName: string, firstName: string, roles: array{string}, super-admin?: true} in isset() does not exist.","line":54,"ignorable":true},{"message":"Offset 'apiKeys' on array{lastName: string, firstName: string, roles: array{0: string, 1?: string}, username?: string, serviceOrderTypes?: array{0: string, 1?: string}|array{string, string, string, string}}|array{lastName: string, firstName: string, roles: array{string}, super-admin?: true} in isset() does not exist.","line":77,"ignorable":true},{"message":"Offset 'currentVehicle' on array{0: array{lastName: string, firstName: string, roles: array{string}, serviceOrderTypes?: array{string}}|array{lastName: string, firstName: string, roles: array{string}, super-admin?: true}, 1?: array{lastName: string, firstName: string, roles: array{string}, super-admin?: true}}|array{array{lastName: string, firstName: string, roles: array{string}, super-admin: true}, array{lastName: string, firstName: string, roles: array{string}, super-admin: true}, array{lastName: string, firstName: string, roles: array{string}, super-admin: true}, array{lastName: string, firstName: string, roles: array{string}, super-admin: true}, array{lastName: string, firstName: string, roles: array{string}, super-admin: true}, array{lastName: string, firstName: string, roles: array{string}, super-admin: true}, array{lastName: string, firstName: string, roles: array{string}, super-admin: true}, array{lastName: string, firstName: string, roles: array{string}}, ...}|array{array{lastName: string, firstName: string, roles: array{string}, super-admin: true}, array{lastName: string, firstName: string, roles: array{string}}, array{lastName: string, firstName: string, roles: array{string}}, array{lastName: string, firstName: string, roles: array{string}}, array{lastName: string, firstName: string, roles: array{string, string}, username: string, serviceOrderTypes: array{string, string, string, string}}, array{lastName: string, firstName: string, roles: array{string}, username: string}, array{lastName: string, firstName: string, roles: array{string}}, array{lastName: string, firstName: string, roles: array{string}, username: string, serviceOrderTypes: array{string, string}}}|array{array{lastName: string, firstName: string, roles: array{string}, super-admin: true}, array{lastName: string, firstName: string, roles: array{string}}, array{lastName: string, firstName: string, roles: array{string}}, array{lastName: string, firstName: string, roles: array{string}}, array{lastName: string, firstName: string, roles: array{string}}}|array{array{lastName: string, firstName: string, roles: array{string}}, array{lastName: string, firstName: string, roles: array{string}}, array{lastName: string, firstName: string, roles: array{string}}} in isset() does not exist.","line":83,"ignorable":true},{"message":"Offset 'adpUnlimited' on array{lastName: string, firstName: string, roles: array{0: string, 1?: string}, username?: string, serviceOrderTypes?: array{0: string, 1?: string}|array{string, string, string, string}}|array{lastName: string, firstName: string, roles: array{string}, super-admin?: true} on left side of ?? does not exist.","line":90,"ignorable":true},{"message":"Offset 'adpExpiry' on array{lastName: string, firstName: string, roles: array{0: string, 1?: string}, username?: string, serviceOrderTypes?: array{0: string, 1?: string}|array{string, string, string, string}}|array{lastName: string, firstName: string, roles: array{string}, super-admin?: true} in isset() does not exist.","line":92,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\DataFixtures\\MongoDB\\LoadUserData::getCompanyEmployeeData() should return array{company-i6: array{array{lastName: string, firstName: string, roles: array{string}, super-admin: true}, array{lastName: string, firstName: string, roles: array{string}, super-admin: true}, array{lastName: string, firstName: string, roles: array{string}, super-admin: true}, array{lastName: string, firstName: string, roles: array{string}, super-admin: true}, array{lastName: string, firstName: string, roles: array{string}, super-admin: true}, array{lastName: string, firstName: string, roles: array{string}, super-admin: true}, array{lastName: string, firstName: string, roles: array{string}, super-admin: true}, array{lastName: string, firstName: string, roles: array{string}}, ...}, company-fab: array{array{lastName: string, firstName: string, roles: array{string}, super-admin: true}, array{lastName: string, firstName: string, roles: array{string}}, array{lastName: string, firstName: string, roles: array{string}}, array{lastName: string, firstName: string, roles: array{string}}, array{lastName: string, firstName: string, roles: array{string, string}, username: string, serviceOrderTypes: array{string, string, string, string}}, array{lastName: string, firstName: string, roles: array{string}, username: string}, array{lastName: string, firstName: string, roles: array{string}}, array{lastName: string, firstName: string, roles: array{string}, username: string, serviceOrderTypes: array{string, string}}}, company-asig: array{array{lastName: string, firstName: string, roles: array{string}, super-admin: true}, array{lastName: string, firstName: string, roles: array{string}}, array{lastName: string, firstName: string, roles: array{string}}, array{lastName: string, firstName: string, roles: array{string}}, array{lastName: string, firstName: string, roles: array{string}}}, company-na: array{array{lastName: string, firstName: string, roles: array{string}}, array{lastName: string, firstName: string, roles: array{string}}, array{lastName: string, firstName: string, roles: array{string}}}, company-virgin: array{array{lastName: string, firstName: string, roles: array{string}}}, company-ba: array{array{lastName: string, firstName: string, roles: array{string}}}, company-eppco: array{array{lastName: string, firstName: string, roles: array{string}, super-admin: true}, array{lastName: string, firstName: string, roles: array{string}}}, company-drs: array{array{lastName: string, firstName: string, roles: array{string}, super-admin: true}}, ...} but returns array{company-i6: array{array{lastName: 'Mattos', firstName: 'Alex', roles: array{'manager'}, super-admin: true}, array{lastName: 'Holmes', firstName: 'Rob', roles: array{'manager'}, super-admin: true}, array{lastName: 'Ossorio', firstName: 'Dan', roles: array{'manager'}, super-admin: true}, array{lastName: 'Freeman', firstName: 'Roger', roles: array{'manager'}, super-admin: true}, array{lastName: 'Uhrmacher', firstName: 'Steve', roles: array{'manager'}, super-admin: true}, array{lastName: 'Granados', firstName: 'Carlos', roles: array{'manager'}, super-admin: true}, array{lastName: 'User', firstName: 'Test', roles: array{'manager'}, super-admin: true}, array{lastName: 'Manager', firstName: 'Paul', roles: array{'manager'}}, ...}, company-fab: array{array{lastName: 'superadmin', firstName: 'fab', roles: array{'manager'}, super-admin: true}, array{lastName: 'manager', firstName: 'fab', roles: array{'manager'}, businessAviationRoles: array{'operations-manager'}}, array{lastName: 'supervisor', firstName: 'fab', roles: array{'supervisor'}}, array{lastName: 'allocator', firstName: 'fab', roles: array{'allocator'}}, array{lastName: 'operator', firstName: 'fab', roles: array{'operator', 'customer-services…'}, username: 'fab.operator.user', serviceOrderTypes: array{'ice-order', 'fuel-order', 'baggage-order', 'de-icing-order', 'dishes-collect-order', 'dishes-return-order'}}, array{lastName: 'operator2', firstName: 'fab', roles: array{'operator'}, username: 'fab.operator2.user'}, array{lastName: 'atc', firstName: 'fab', roles: array{'atc'}, businessAviationRoles: array{'atc'}}, array{lastName: 'inactive', firstName: 'fab', roles: array{'operator'}, username: 'fab.inactive.user', serviceOrderTypes: array{'towing-order', 'fuel-order'}}, ...}, company-asig: array{array{lastName: 'superadmin', firstName: 'asig', roles: array{'manager'}, super-admin: true}, array{lastName: 'manager', firstName: 'asig', roles: array{'manager'}}, array{lastName: 'supervisor', firstName: 'asig', roles: array{'supervisor'}}, array{lastName: 'allocator', firstName: 'asig', roles: array{'allocator'}}, array{lastName: 'operator', firstName: 'asig', roles: array{'operator'}}}, company-na: array{array{lastName: 'manager', firstName: 'na', roles: array{'manager'}}, array{lastName: 'supervisor', firstName: 'na', roles: array{'supervisor'}}, array{lastName: 'allocator', firstName: 'na', roles: array{'allocator'}}}, company-virgin: array{array{lastName: 'manager', firstName: 'virgin', roles: array{'manager'}}}, company-ba: array{array{lastName: 'manager', firstName: 'ba', roles: array{'manager'}}}, company-eppco: array{array{lastName: 'superadmin', firstName: 'eppco', roles: array{'manager'}, super-admin: true}, array{lastName: 'operator', firstName: 'eppco', roles: array{'operator'}}}, company-drs: array{array{lastName: 'superadmin', firstName: 'drs', roles: array{'manager'}, super-admin: true}}, ...}.","line":125,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/DataFixtures/MongoDB/LoadVehicleData.php":{"errors":12,"messages":[{"message":"Offset 'location' on array{name: string, role: string, status: string, currentUser: array{name: string, status: string}, bowserQty: int, bowserCapacity: int, bowserSwl: int, bowserMinWorkingLevel: int, ...}|array{name: string, role: string, status: string, currentUser: array{name: string, status: string}, bowserQty: int, bowserCapacity: int, flowMeters: int, defuelledQty: int, ...}|array{name: string, role: string, status: string, currentUser?: array{name: string, status: string}, bowserQty: int, bowserCapacity: int, bowserSwl?: int, flowMeters: int}|array{name: string, role: string, status: string, flowMeters?: int, user_status?: string, currentUser?: array{name: string, status: string}}|array{name: string, role: string, status: string, maxPassengers: int} in isset() does not exist.","line":41,"ignorable":true},{"message":"Instanceof between null and In2plane\\CoreBundle\\Document\\Location will always evaluate to false.","line":42,"ignorable":true},{"message":"Offset 'companyVehicleId' on array{name: string, role: string, status: string, currentUser: array{name: string, status: string}, bowserQty: int, bowserCapacity: int, bowserSwl: int, bowserMinWorkingLevel: int, ...}|array{name: string, role: string, status: string, currentUser: array{name: string, status: string}, bowserQty: int, bowserCapacity: int, flowMeters: int, defuelledQty: int, ...}|array{name: string, role: string, status: string, currentUser?: array{name: string, status: string}, bowserQty: int, bowserCapacity: int, bowserSwl?: int, flowMeters: int}|array{name: string, role: string, status: string, flowMeters?: int, user_status?: string, currentUser?: array{name: string, status: string}}|array{name: string, role: string, status: string, maxPassengers: int} in isset() does not exist.","line":72,"ignorable":true},{"message":"If condition is always false.","line":76,"ignorable":true},{"message":"Offset 'bowserCapacity' on array{name: string, role: string, status: string, currentUser: array{name: string, status: string}, bowserQty: int, bowserCapacity: int, flowMeters: int, defuelledQty: int, ...} in isset() always exists and is not nullable.","line":106,"ignorable":true},{"message":"Offset 'avpUnlimited' on array{name: string, role: string, status: string, currentUser: array{name: string, status: string}, bowserQty: int, bowserCapacity: int, bowserSwl: int, bowserMinWorkingLevel: int, ...}|array{name: string, role: string, status: string, currentUser: array{name: string, status: string}, bowserQty: int, bowserCapacity: int, flowMeters: int, defuelledQty: int, ...}|array{name: string, role: string, status: string, currentUser?: array{name: string, status: string}, bowserQty: int, bowserCapacity: int, bowserSwl?: int, flowMeters: int}|array{name: string, role: string, status: string, flowMeters?: int, user_status?: string, currentUser?: array{name: string, status: string}}|array{name: string, role: string, status: string, maxPassengers: int} on left side of ?? does not exist.","line":124,"ignorable":true},{"message":"Offset 'avpExpiry' on array{name: string, role: string, status: string, currentUser: array{name: string, status: string}, bowserQty: int, bowserCapacity: int, bowserSwl: int, bowserMinWorkingLevel: int, ...}|array{name: string, role: string, status: string, currentUser: array{name: string, status: string}, bowserQty: int, bowserCapacity: int, flowMeters: int, defuelledQty: int, ...}|array{name: string, role: string, status: string, currentUser?: array{name: string, status: string}, bowserQty: int, bowserCapacity: int, bowserSwl?: int, flowMeters: int}|array{name: string, role: string, status: string, flowMeters?: int, user_status?: string, currentUser?: array{name: string, status: string}}|array{name: string, role: string, status: string, maxPassengers: int} in isset() does not exist.","line":125,"ignorable":true},{"message":"Offset 'flowMetersNumber' on array{name: string, role: string, status: string, currentUser: array{name: string, status: string}, bowserQty: int, bowserCapacity: int, bowserSwl: int, bowserMinWorkingLevel: int, ...}|array{name: string, role: string, status: string, currentUser: array{name: string, status: string}, bowserQty: int, bowserCapacity: int, flowMeters: int, defuelledQty: int, ...}|array{name: string, role: string, status: string, currentUser?: array{name: string, status: string}, bowserQty: int, bowserCapacity: int, bowserSwl?: int, flowMeters: int}|array{name: string, role: string, status: string, flowMeters?: int, user_status?: string, currentUser?: array{name: string, status: string}}|array{name: string, role: string, status: string, maxPassengers: int} on left side of ?? does not exist.","line":128,"ignorable":true},{"message":"Comparison operation \"<\" between 0 and 0 is always false.","line":129,"ignorable":true},{"message":"Offset 'inputFlowMeters' on array{name: string, role: string, status: string, currentUser: array{name: string, status: string}, bowserQty: int, bowserCapacity: int, bowserSwl: int, bowserMinWorkingLevel: int, ...}|array{name: string, role: string, status: string, currentUser: array{name: string, status: string}, bowserQty: int, bowserCapacity: int, flowMeters: int, defuelledQty: int, ...}|array{name: string, role: string, status: string, currentUser?: array{name: string, status: string}, bowserQty: int, bowserCapacity: int, bowserSwl?: int, flowMeters: int}|array{name: string, role: string, status: string, flowMeters?: int, user_status?: string, currentUser?: array{name: string, status: string}}|array{name: string, role: string, status: string, maxPassengers: int} on left side of ?? does not exist.","line":138,"ignorable":true},{"message":"Argument of an invalid type int supplied for foreach, only iterables are supported.","line":153,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\DataFixtures\\MongoDB\\LoadVehicleData::getData() should return array{company-i6: array{array{name: string, role: string, status: string, flowMeters: int, currentUser: array{name: string, status: string}}, array{name: string, role: string, status: string, flowMeters: int, currentUser: array{name: string, status: string}}, array{name: string, role: string, status: string, flowMeters: int, currentUser: array{name: string, status: string}}, array{name: string, role: string, status: string, flowMeters: int, currentUser: array{name: string, status: string}}, array{name: string, role: string, status: string, flowMeters: int, currentUser: array{name: string, status: string}}, array{name: string, role: string, status: string, flowMeters: int, currentUser: array{name: string, status: string}}, array{name: string, role: string, status: string, flowMeters: int, currentUser: array{name: string, status: string}}, array{name: string, role: string, status: string, flowMeters: int, currentUser: array{name: string, status: string}}, ...}, company-fab: array{array{name: string, role: string, status: string, currentUser: array{name: string, status: string}, bowserQty: int, bowserCapacity: int, flowMeters: int}, array{name: string, role: string, status: string, currentUser: array{name: string, status: string}, bowserQty: int, bowserCapacity: int, flowMeters: int}, array{name: string, role: string, status: string, currentUser: array{name: string, status: string}, bowserQty: int, bowserCapacity: int, flowMeters: int}, array{name: string, role: string, status: string, currentUser: array{name: string, status: string}}, array{name: string, role: string, status: string, currentUser: array{name: string, status: string}}}, company-eppco: array{array{name: string, role: string, status: string, bowserQty: int, bowserCapacity: int, flowMeters: int, currentUser: array{name: string, status: string}}}, company-bafco: array{array{name: string, role: string, status: string, bowserQty: int, bowserCapacity: int, flowMeters: int, currentUser: array{name: string, status: string}}}, company-us-test: array{array{name: string, role: string, status: string, bowserQty: int, bowserCapacity: int, flowMeters: int, currentUser: array{name: string, status: string}}, array{name: string, role: string, status: string, bowserQty: int, bowserCapacity: int, flowMeters: int, currentUser: array{name: string, status: string}}}, company-fingal-dub: array{array{name: string, role: string, status: string, bowserQty: int, bowserCapacity: int, flowMeters: int, currentUser: array{name: string, status: string}}}, company-sju: array{array{name: string, role: string, status: string, bowserQty: int, bowserCapacity: int, flowMeters: int, currentUser: array{name: string, status: string}}, array{name: string, role: string, status: string, bowserQty: int, bowserCapacity: int, flowMeters: int, currentUser: array{name: string, status: string}}, array{name: string, role: string, status: string, flowMeters: int}}, company-lcy: array{array{name: string, role: string, status: string, maxPassengers: int}}, ...} but returns array{company-i6: array{array{name: '1', role: 'refuel', status: 'operational', flowMetersNumber: 1, currentUser: array{name: 'U01', status: 'logged-out'}}, array{name: '2', role: 'refuel', status: 'operational', flowMetersNumber: 1, currentUser: array{name: 'U02', status: 'active'}}, array{name: '3', role: 'refuel', status: 'operational', flowMetersNumber: 1, currentUser: array{name: 'U03', status: 'active'}}, array{name: '4', role: 'refuel', status: 'operational-in-use', flowMetersNumber: 1, currentUser: array{name: 'U04', status: 'active'}}, array{name: '5', role: 'refuel', status: 'operational-in…', flowMetersNumber: 1, currentUser: array{name: 'U05', status: 'active'}}, array{name: '6', role: 'refuel', status: 'defective', flowMetersNumber: 1, currentUser: array{name: 'U06', status: 'active'}}, array{name: '7', role: 'refuel', status: 'in-maintenance', flowMetersNumber: 1, currentUser: array{name: 'U07', status: 'active'}}, array{name: '8', role: 'refuel', status: 'inactive', flowMetersNumber: 1, currentUser: array{name: 'U08', status: 'active'}}, ...}, company-fab: array{array{name: 'BW001', role: 'bowser', status: 'operational', currentUser: array{name: 'FU01', status: 'offline'}, bowserQty: 15000, bowserCapacity: 32000, flowMetersNumber: 1}, array{name: 'BW002', role: 'bowser', status: 'operational', currentUser: array{name: 'FU02', status: 'offline'}, bowserQty: 8000, bowserCapacity: 32000, flowMetersNumber: 1}, array{name: 'BW003', role: 'bowser', status: 'operational', currentUser: array{name: 'FU03', status: 'offline'}, bowserQty: 0, bowserCapacity: 50000, flowMetersNumber: 1}, array{name: 'BL001', role: 'belt-loader', status: 'operational', currentUser: array{name: 'FU04', status: 'offline'}}, array{name: 'DI001', role: 'deicing', status: 'operational', currentUser: array{name: 'FU05', status: 'offline'}}}, company-eppco: array{array{name: 'ER001', role: 'bowser', status: 'operational', bowserQty: 5200, bowserCapacity: 8300, flowMetersNumber: 1, currentUser: array{name: 'UEP01', status: 'offline'}}}, company-bafco: array{array{name: 'BF001', role: 'bowser', status: 'operational', bowserQty: 5200, bowserCapacity: 10000, flowMetersNumber: 1, currentUser: array{name: 'UBAF01', status: 'offline'}}}, company-us-test: array{array{name: 'TRK3', role: 'bowser', status: 'operational', bowserQty: 5200, bowserCapacity: 10000, flowMetersNumber: 1, currentUser: array{name: 'UUS01', status: 'offline'}}, array{name: 'TRK6', role: 'bowser', status: 'operational', bowserQty: 5200, bowserCapacity: 10000, flowMetersNumber: 1, currentUser: array{name: 'UUS02', status: 'offline'}}}, company-fingal-dub: array{array{name: 'B01', role: 'bowser', status: 'operational', bowserQty: 1000, bowserCapacity: 10000, flowMetersNumber: 1, currentUser: array{name: 'U01', status: 'offline'}}}, company-sju: array{array{name: 'SJU01', role: 'bowser', status: 'operational', bowserQty: 1000, bowserCapacity: 10000, flowMetersNumber: 1, currentUser: array{name: 'U01', status: 'offline'}}, array{name: 'SJU02', role: 'bowser', status: 'operational', bowserQty: 1000, bowserCapacity: 10000, flowMetersNumber: 1, currentUser: array{name: 'U01', status: 'offline'}}, array{name: 'H01', role: 'hydrant-cart', status: 'operational', flowMetersNumber: 1}}, company-lcy: array{array{name: 'LCY-SB01', role: 'shuttle-bus', status: 'operational', maxPassengers: 50}}, ...}.","line":190,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Doctrine/Filter/CompanyFilter.php":{"errors":2,"messages":[{"message":"Negated boolean expression is always false.","line":62,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Property In2plane\\CoreBundle\\Doctrine\\Filter\\CompanyFilter::$companyService (In2plane\\CoreBundle\\Service\\CompanyService) in empty() is not falsy.","line":148,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Doctrine/Proxy/ProxyFactory.php":{"errors":1,"messages":[{"message":"Method In2plane\\CoreBundle\\Doctrine\\Proxy\\ProxyFactory::createInitializer() should return Closure(ProxyManager\\Proxy\\GhostObjectInterface<TDocument of object>&TDocument of object, string, array<string, mixed>, Closure|null=, array<string, mixed>): bool but returns Closure(ProxyManager\\Proxy\\GhostObjectInterface, string, array, mixed, array): true.","line":102,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Document/Company.php":{"errors":1,"messages":[{"message":"Property In2plane\\CoreBundle\\Document\\Company::$apiKeys ((Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\CoreBundle\\Document\\ApiKey>)|null) does not accept array<int, In2plane\\CoreBundle\\Document\\ApiKey>|(Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\CoreBundle\\Document\\ApiKey>).","line":1929,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Document/Coordinates.php":{"errors":5,"messages":[{"message":"Call to function is_null() with float will always evaluate to false.","line":73,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":101,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":139,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":161,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":183,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Document/Customer.php":{"errors":1,"messages":[{"message":"Property In2plane\\CoreBundle\\Document\\Customer::$contacts ((Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\CoreBundle\\Document\\Contact>)|null) does not accept array<int, In2plane\\CoreBundle\\Document\\Contact>|(Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\CoreBundle\\Document\\Contact>).","line":703,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Document/User.php":{"errors":1,"messages":[{"message":"Property In2plane\\CoreBundle\\Document\\User::$apiKeys ((Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\CoreBundle\\Document\\ApiKey>)|null) does not accept array<int, In2plane\\CoreBundle\\Document\\ApiKey>|(Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\CoreBundle\\Document\\ApiKey>).","line":2947,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Document/Vehicle.php":{"errors":1,"messages":[{"message":"Property In2plane\\CoreBundle\\Document\\Vehicle::$certificates ((Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\CoreBundle\\Document\\Certificate>)|null) does not accept array<int, In2plane\\CoreBundle\\Document\\Certificate>|(Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\CoreBundle\\Document\\Certificate>).","line":1346,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/FOS/RestBundle/Serializer/Normalizer/ExceptionHandler.php":{"errors":6,"messages":[{"message":"Method JMS\\Serializer\\JsonSerializationVisitor::visitArray() invoked with 3 parameters, 2 required.","line":69,"ignorable":true},{"message":"Method JMS\\Serializer\\JsonSerializationVisitor::visitArray() invoked with 3 parameters, 2 required.","line":80,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Jms\\Serializer\\XmlSerializationVisitor::getDocument() invoked with 1 parameter, 0 required.","line":91,"ignorable":true},{"message":"Method JMS\\Serializer\\GraphNavigatorInterface::accept() invoked with 3 parameters, 1-2 required.","line":102,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Jms\\Serializer\\XmlSerializationVisitor::getDocument() invoked with 1 parameter, 0 required.","line":119,"ignorable":true},{"message":"Method JMS\\Serializer\\GraphNavigatorInterface::accept() invoked with 3 parameters, 1-2 required.","line":130,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Factory/AircraftModelFactory.php":{"errors":1,"messages":[{"message":"Method In2plane\\CoreBundle\\Factory\\AircraftModelFactory::getAircraftModelRepository() should return In2plane\\CoreBundle\\Repository\\AircraftModelRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\AircraftModel>.","line":115,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Factory/AircraftVariantFactory.php":{"errors":1,"messages":[{"message":"Method In2plane\\CoreBundle\\Factory\\AircraftVariantFactory::getAircraftVariantRepository() should return In2plane\\CoreBundle\\Repository\\AircraftVariantRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\AircraftVariant>.","line":131,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Factory/AirlineFactory.php":{"errors":2,"messages":[{"message":"Method In2plane\\CoreBundle\\Factory\\AirlineFactory::getAirlineRepository() should return In2plane\\CoreBundle\\Repository\\AirlineRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airline>.","line":148,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Country>::findOneByIsoCode2().","line":206,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Factory/AirportFactory.php":{"errors":2,"messages":[{"message":"Method In2plane\\CoreBundle\\Factory\\AirportFactory::getAirportRepository() should return In2plane\\CoreBundle\\Repository\\AirportRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airport>.","line":131,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Country>::findOneByIsoCode2().","line":224,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Factory/CountryFactory.php":{"errors":1,"messages":[{"message":"Method In2plane\\CoreBundle\\Factory\\CountryFactory::getRepository() should return In2plane\\CoreBundle\\Repository\\CountryRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Country>.","line":28,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Factory/CustomerFactory.php":{"errors":1,"messages":[{"message":"Method In2plane\\CoreBundle\\Factory\\CustomerFactory::getCustomerRepository() should return In2plane\\CoreBundle\\Repository\\CustomerRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Customer>.","line":165,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Factory/FileDownloadFactory.php":{"errors":1,"messages":[{"message":"Method In2plane\\CoreBundle\\Factory\\FileDownloadFactory::getFileDownloadRepository() should return In2plane\\CoreBundle\\Repository\\FileDownloadRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FileDownload>.","line":110,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Factory/FuelSupplierCodeFactory.php":{"errors":1,"messages":[{"message":"Method In2plane\\CoreBundle\\Factory\\FuelSupplierCodeFactory::getFuelSupplierCodeRepository() should return In2plane\\CoreBundle\\Repository\\FuelSupplierCodeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FuelSupplierCode>.","line":36,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Factory/LocationFactory.php":{"errors":1,"messages":[{"message":"Method In2plane\\CoreBundle\\Factory\\LocationFactory::getLocationRepository() should return In2plane\\CoreBundle\\Repository\\LocationRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Location>.","line":77,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Factory/MachineFactory.php":{"errors":1,"messages":[{"message":"Method In2plane\\CoreBundle\\Factory\\MachineFactory::getMachineRepository() should return In2plane\\CoreBundle\\Repository\\MachineRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Machine>.","line":96,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Factory/StandFactory.php":{"errors":2,"messages":[{"message":"Method In2plane\\CoreBundle\\Factory\\StandFactory::getStandRepository() should return In2plane\\CoreBundle\\Repository\\StandRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Stand>.","line":146,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Factory\\StandFactory::getTerminalRepository() should return In2plane\\CoreBundle\\Repository\\TerminalRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Terminal>.","line":154,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Factory/TaxFactory.php":{"errors":1,"messages":[{"message":"Method In2plane\\CoreBundle\\Factory\\TaxFactory::getRepository() should return In2plane\\CoreBundle\\Repository\\TaxRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Tax>.","line":27,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Factory/TerminalFactory.php":{"errors":1,"messages":[{"message":"Method In2plane\\CoreBundle\\Factory\\TerminalFactory::getTerminalRepository() should return In2plane\\CoreBundle\\Repository\\TerminalRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Terminal>.","line":111,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Factory/UserInactiveHistoryFactory.php":{"errors":1,"messages":[{"message":"Method In2plane\\CoreBundle\\Factory\\UserInactiveHistoryFactory::getUserInactiveHistoryRepository() should return In2plane\\CoreBundle\\Repository\\UserInactiveHistoryRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\UserInactiveHistory>.","line":20,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Factory/VehicleFactory.php":{"errors":1,"messages":[{"message":"Method In2plane\\CoreBundle\\Factory\\VehicleFactory::getVehicleRepository() should return In2plane\\CoreBundle\\Repository\\VehicleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>.","line":22,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Form/Type/CertificateType.php":{"errors":1,"messages":[{"message":"Method In2plane\\CoreBundle\\Form\\Type\\CertificateType::getCertTypeRepo() should return In2plane\\CoreBundle\\Repository\\CertificateTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\CertificateType>.","line":69,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Form/Type/CertificatesType.php":{"errors":1,"messages":[{"message":"Method In2plane\\CoreBundle\\Form\\Type\\CertificatesType::getCertTypeRepo() should return In2plane\\CoreBundle\\Repository\\CertificateTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\CertificateType>.","line":69,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Form/Type/DraftCertificateType.php":{"errors":1,"messages":[{"message":"Method In2plane\\CoreBundle\\Form\\Type\\DraftCertificateType::getCertificateTypeRepository() should return In2plane\\CoreBundle\\Repository\\CertificateTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\CertificateType>.","line":195,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Form/Type/Filters/FiltersType.php":{"errors":12,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>::findByOwningCompany().","line":1354,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>::findByCompany().","line":1637,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>::findByCompany().","line":1672,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>::findByOwningCompany().","line":2064,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>::findAvailableBowsersByCompany().","line":2304,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>::findOneByCompanyId().","line":2702,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>::findByCompany().","line":3008,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>::findByCompany().","line":3029,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Form\\Type\\Filters\\FiltersType::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":3135,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Form\\Type\\Filters\\FiltersType::getStorageTankRepository() should return In2plane\\BulkStorageBundle\\Repository\\StorageTankRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\StorageTank>.","line":3140,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Form\\Type\\Filters\\FiltersType::getBillingTypeRepository() should return In2plane\\OperationsBundle\\Repository\\BillingTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\BillingType>.","line":3145,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>::findByOwningCompany().","line":3160,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Form/Type/FuelOwnerType.php":{"errors":1,"messages":[{"message":"Expression on left side of ?? is not nullable.","line":52,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Form/Type/Rest/AndroidDeviceRegisterType.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\EnrolmentKey>::findOneActiveByKey().","line":75,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Form/Validator/Constraints/File/ExcelFileHeadersAreValidValidator.php":{"errors":3,"messages":[{"message":"Access to an undefined property Symfony\\Component\\Validator\\Constraint::$headerRowIndex.","line":29,"ignorable":true},{"message":"Access to an undefined property Symfony\\Component\\Validator\\Constraint::$headerArray.","line":36,"ignorable":true},{"message":"Access to an undefined property Symfony\\Component\\Validator\\Constraint::$headerArray.","line":37,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Generator/ApiKeyGenerator.php":{"errors":2,"messages":[{"message":"Property In2plane\\CoreBundle\\Generator\\ApiKeyGenerator::$companyRepository (In2plane\\CoreBundle\\Repository\\CompanyRepository) does not accept Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":34,"ignorable":true},{"message":"Property In2plane\\CoreBundle\\Generator\\ApiKeyGenerator::$userRepository (In2plane\\CoreBundle\\Repository\\UserRepository) does not accept Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\User>.","line":35,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Generator/EnrolmentKeyGenerator.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\EnrolmentKey>::findOneByKey().","line":35,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Helper/CoreControllerHelper.php (in context of class In2plane\\CoreBundle\\Controller\\DocumentController)":{"errors":28,"messages":[{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getCertificateRepository() should return In2plane\\CoreBundle\\Repository\\CertificateRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Certificate>.","line":90,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getAirlineRepository() should return In2plane\\CoreBundle\\Repository\\AirlineRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airline>.","line":98,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getCustomerRepository() should return In2plane\\CoreBundle\\Repository\\CustomerRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Customer>.","line":106,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getServicedFlightRepository() should return In2plane\\OperationsBundle\\Repository\\ServicedFlightRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServicedFlight>.","line":114,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getNonServicedFlightRepository() should return In2plane\\OperationsBundle\\Repository\\NonServicedFlightRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\NonServicedFlight>.","line":122,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getRefuelTimingRepository() should return In2plane\\OperationsBundle\\Repository\\RefuelTimingRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\RefuelTiming>.","line":138,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getServiceOrderTimingRepository() should return In2plane\\OperationsBundle\\Repository\\ServiceOrderTimingRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\ServiceOrderTiming>.","line":146,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getReasonRepository() should return In2plane\\OperationsBundle\\Repository\\ReasonRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\Reason>.","line":154,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getFuelSupplierGroupRepository() should return In2plane\\OperationsBundle\\Repository\\FuelSupplierGroupRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplierGroup>.","line":162,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getHydrantRepository() should return In2plane\\CoreBundle\\Repository\\HydrantRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Hydrant>.","line":208,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getFuelTypeRepository() should return In2plane\\CoreBundle\\Repository\\FuelTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FuelType>.","line":216,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getTerminalRepository() should return In2plane\\CoreBundle\\Repository\\TerminalRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Terminal>.","line":224,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getStandRepository() should return In2plane\\CoreBundle\\Repository\\StandRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Stand>.","line":232,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getPitRepository() should return In2plane\\CoreBundle\\Repository\\PitRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Pit>.","line":240,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getFuelSupplierUniqueCodeRepository() should return In2plane\\OperationsBundle\\Repository\\FuelSupplierUniqueCodeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplierUniqueCode>.","line":256,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getFuelAdditiveRepository() should return In2plane\\OperationsBundle\\Repository\\FuelAdditiveRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelAdditive>.","line":264,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getQualityControlItemRepository() should return In2plane\\BulkStorageBundle\\Repository\\QualityControlItemRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\QualityControl\\Item>.","line":272,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getCertificateTypeRepository() should return In2plane\\CoreBundle\\Repository\\CertificateTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\CertificateType>.","line":280,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getDeviceRepository() should return In2plane\\CoreBundle\\Repository\\DeviceRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Device>.","line":288,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getAndroidDeviceRepository() should return In2plane\\CoreBundle\\Repository\\DeviceRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Device\\AndroidDevice>.","line":296,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getFuelSupplierContractRepository() should return In2plane\\OperationsBundle\\Repository\\FuelSupplierContractRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplierContract>.","line":304,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getNotificationRepository() should return In2plane\\CoreBundle\\Repository\\NotificationRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Notification>.","line":312,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getExternalFlowMeterRepository() should return In2plane\\CoreBundle\\Repository\\ExternalFlowMeterRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\ExternalFlowMeter>.","line":320,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getDeIcingFluidTypeRepository() should return In2plane\\CoreBundle\\Repository\\DeIcingFluidTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\DeIcingFluidType>.","line":328,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getFlagRepository() should return In2plane\\OperationsBundle\\Repository\\FlagRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Flags\\Flag>.","line":336,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getServiceTypeSettingsRepository() should return In2plane\\OperationsBundle\\Repository\\ServiceTypeSettingsRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\ServiceTypeSettings>.","line":344,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getQualityCheckDefinitionRepository() should return In2plane\\OperationsBundle\\Repository\\QualityCheckDefinitionRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\QualityCheckDefinition>.","line":352,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getConsortiumRepository() should return In2plane\\BulkStorageBundle\\Repository\\ConsortiumRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\Consortium>.","line":392,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Helper/CoreControllerHelper.php (in context of class In2plane\\CoreBundle\\Controller\\FOSRestDocumentController)":{"errors":30,"messages":[{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getCertificateRepository() should return In2plane\\CoreBundle\\Repository\\CertificateRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Certificate>.","line":90,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getAirlineRepository() should return In2plane\\CoreBundle\\Repository\\AirlineRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airline>.","line":98,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getCustomerRepository() should return In2plane\\CoreBundle\\Repository\\CustomerRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Customer>.","line":106,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getServicedFlightRepository() should return In2plane\\OperationsBundle\\Repository\\ServicedFlightRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServicedFlight>.","line":114,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getNonServicedFlightRepository() should return In2plane\\OperationsBundle\\Repository\\NonServicedFlightRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\NonServicedFlight>.","line":122,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getFuelDeliveryRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelDeliveryRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelDelivery>.","line":130,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getRefuelTimingRepository() should return In2plane\\OperationsBundle\\Repository\\RefuelTimingRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\RefuelTiming>.","line":138,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getServiceOrderTimingRepository() should return In2plane\\OperationsBundle\\Repository\\ServiceOrderTimingRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\ServiceOrderTiming>.","line":146,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getReasonRepository() should return In2plane\\OperationsBundle\\Repository\\ReasonRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\Reason>.","line":154,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getFuelSupplierGroupRepository() should return In2plane\\OperationsBundle\\Repository\\FuelSupplierGroupRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplierGroup>.","line":162,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getHydrantRepository() should return In2plane\\CoreBundle\\Repository\\HydrantRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Hydrant>.","line":208,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getFuelTypeRepository() should return In2plane\\CoreBundle\\Repository\\FuelTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FuelType>.","line":216,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getTerminalRepository() should return In2plane\\CoreBundle\\Repository\\TerminalRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Terminal>.","line":224,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getStandRepository() should return In2plane\\CoreBundle\\Repository\\StandRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Stand>.","line":232,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getPitRepository() should return In2plane\\CoreBundle\\Repository\\PitRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Pit>.","line":240,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getFuelSupplierRepository() should return In2plane\\OperationsBundle\\Repository\\FuelSupplierRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>.","line":248,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getFuelSupplierUniqueCodeRepository() should return In2plane\\OperationsBundle\\Repository\\FuelSupplierUniqueCodeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplierUniqueCode>.","line":256,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getFuelAdditiveRepository() should return In2plane\\OperationsBundle\\Repository\\FuelAdditiveRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelAdditive>.","line":264,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getQualityControlItemRepository() should return In2plane\\BulkStorageBundle\\Repository\\QualityControlItemRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\QualityControl\\Item>.","line":272,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getCertificateTypeRepository() should return In2plane\\CoreBundle\\Repository\\CertificateTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\CertificateType>.","line":280,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getDeviceRepository() should return In2plane\\CoreBundle\\Repository\\DeviceRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Device>.","line":288,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getAndroidDeviceRepository() should return In2plane\\CoreBundle\\Repository\\DeviceRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Device\\AndroidDevice>.","line":296,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getFuelSupplierContractRepository() should return In2plane\\OperationsBundle\\Repository\\FuelSupplierContractRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplierContract>.","line":304,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getNotificationRepository() should return In2plane\\CoreBundle\\Repository\\NotificationRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Notification>.","line":312,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getExternalFlowMeterRepository() should return In2plane\\CoreBundle\\Repository\\ExternalFlowMeterRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\ExternalFlowMeter>.","line":320,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getDeIcingFluidTypeRepository() should return In2plane\\CoreBundle\\Repository\\DeIcingFluidTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\DeIcingFluidType>.","line":328,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getFlagRepository() should return In2plane\\OperationsBundle\\Repository\\FlagRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Flags\\Flag>.","line":336,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getServiceTypeSettingsRepository() should return In2plane\\OperationsBundle\\Repository\\ServiceTypeSettingsRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\ServiceTypeSettings>.","line":344,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getQualityCheckDefinitionRepository() should return In2plane\\OperationsBundle\\Repository\\QualityCheckDefinitionRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\QualityCheckDefinition>.","line":352,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getConsortiumRepository() should return In2plane\\BulkStorageBundle\\Repository\\ConsortiumRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\Consortium>.","line":392,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Jms/Serializer/Handler/DateHandler.php":{"errors":2,"messages":[{"message":"Instanceof between DateTime|null and SimpleXMLElement will always evaluate to false.","line":133,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Method In2plane\\CoreBundle\\Jms\\Serializer\\Handler\\DateHandler::getDeserializationFormats() is unused.","line":315,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Jms/Serializer/XmlSerializationVisitor.php":{"errors":6,"messages":[{"message":"Return type (void) of method In2plane\\CoreBundle\\Jms\\Serializer\\XmlSerializationVisitor::visitArray() should be compatible with return type (array|ArrayObject) of method JMS\\Serializer\\Visitor\\SerializationVisitorInterface::visitArray()","line":188,"ignorable":true},{"message":"Access to an undefined property JMS\\Serializer\\Metadata\\PropertyMetadata::$reflection.","line":272,"ignorable":true},{"message":"Access to an undefined property JMS\\Serializer\\Metadata\\PropertyMetadata::$reflection.","line":272,"ignorable":true},{"message":"Property JMS\\Serializer\\Metadata\\PropertyMetadata::$xmlNamespace (string) on left side of ?? is not nullable.","line":301,"ignorable":true},{"message":"Return type (void) of method In2plane\\CoreBundle\\Jms\\Serializer\\XmlSerializationVisitor::endVisitingObject() should be compatible with return type (array|ArrayObject) of method JMS\\Serializer\\Visitor\\SerializationVisitorInterface::endVisitingObject()","line":356,"ignorable":true},{"message":"Cannot call method appendChild() on null.","line":372,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Listener/UserLoginFormListener.php":{"errors":1,"messages":[{"message":"Property In2plane\\CoreBundle\\Listener\\UserLoginFormListener::$dispatcher is never read, only written.","line":21,"ignorable":true,"tip":"See: https://phpstan.org/developing-extensions/always-read-written-properties"}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Logging/DebuggerAgent.php":{"errors":2,"messages":[{"message":"Function stackdriver_debugger_add_snapshot not found.","line":196,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Function stackdriver_debugger_add_logpoint not found.","line":210,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Repository/CertificateRepository.php":{"errors":3,"messages":[{"message":"Method In2plane\\CoreBundle\\Repository\\CertificateRepository::getCertTypeRepo() should return In2plane\\CoreBundle\\Repository\\CertificateTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\CertificateType>.","line":33,"ignorable":true},{"message":"Elseif branch is unreachable because previous condition is always true.","line":169,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Instanceof between *NEVER* and MongoDB\\BSON\\ObjectId will always evaluate to false.","line":171,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Repository/CertificateTypeRepository.php":{"errors":1,"messages":[{"message":"Call to function is_array() with string will always evaluate to false.","line":61,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Repository/CustomerRepository.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\AirlineGroup>::findOneForAirlines().","line":179,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Security/OauthClientManager.php":{"errors":2,"messages":[{"message":"Property In2plane\\CoreBundle\\Security\\OauthClientManager::$companyRepository (In2plane\\CoreBundle\\Repository\\CompanyRepository) does not accept Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":46,"ignorable":true},{"message":"Strict comparison using === between In2plane\\CoreBundle\\Document\\Oauth2\\Client and null will always evaluate to false.","line":53,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Service/ArchiveService.php":{"errors":2,"messages":[{"message":"Negated boolean expression is always true.","line":25,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Ternary operator condition is always false.","line":32,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Service/AutomatedExporter/AutomatedExporterTriggerService.php":{"errors":1,"messages":[{"message":"Expression on left side of ?? is not nullable.","line":90,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Service/AutomatedExporter/BulkStorageObjectToTextConverter.php":{"errors":1,"messages":[{"message":"Unreachable statement - code above always terminates.","line":440,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Service/AutomatedExporter/Format/FixedWidthService.php":{"errors":1,"messages":[{"message":"Comparison operation \">\" between int<1, max> and 0 is always true.","line":174,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Service/AutomatedExporter/Format/ReportService.php":{"errors":2,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>::findOneByCompanyId().","line":125,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>::findOneByCompanyId().","line":139,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Service/AutomatedExporter/FuelOrderObjectToTextConverter.php":{"errors":2,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplierUniqueCode>::findOneByFuelSupplierAndAirline().","line":1071,"ignorable":true},{"message":"Right side of && is always true.","line":1952,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Service/CertificateService.php":{"errors":4,"messages":[{"message":"Method In2plane\\CoreBundle\\Service\\CertificateService::getCertificateRepository() should return In2plane\\CoreBundle\\Repository\\CertificateRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Certificate>.","line":48,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Service\\CertificateService::getCertificateTypeRepository() should return In2plane\\CoreBundle\\Repository\\CertificateTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\CertificateType>.","line":58,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Service\\CertificateService::getUserRepository() should return In2plane\\CoreBundle\\Repository\\UserRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\User>.","line":459,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Service\\CertificateService::getVehicleRepository() should return In2plane\\CoreBundle\\Repository\\VehicleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>.","line":464,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Service/CompanyService.php":{"errors":2,"messages":[{"message":"Method In2plane\\CoreBundle\\Service\\CompanyService::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":289,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\BusinessAviationSettings>::findOneByCompany().","line":310,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Service/DashboardWidgetService.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\DeIcingOrder>::getCompletedDeicingOrdersCountAfterDate().","line":61,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Service/DataImport/DataImportService.php":{"errors":1,"messages":[{"message":"Method In2plane\\CoreBundle\\Service\\DataImport\\DataImportService::getDataImporterSettingsRepositoryByImporterType() should return In2plane\\CoreBundle\\Repository\\DataImporterSettingsRepositoryInterface but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\WFSALXSSMDataImporterSettings>|Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\WFSSSMDataImporterSettings>.","line":144,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Service/FinancePackageCostService.php":{"errors":2,"messages":[{"message":"Method In2plane\\CoreBundle\\Service\\FinancePackageCostService::getCostReportCodeRepository() should return In2plane\\CoreBundle\\Repository\\CostReportCodeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\CostReportCode>.","line":197,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Service\\FinancePackageCostService::getFinancePackageCostRepository() should return In2plane\\CoreBundle\\Repository\\FinancePackageCostRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FinancePackageCost>.","line":205,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Service/Storage/GoogleServiceStorageProxy.php":{"errors":2,"messages":[{"message":"Constant In2plane\\CoreBundle\\Service\\Storage\\GoogleServiceStorageProxy::RETRY_NEVER is unused.","line":14,"ignorable":true,"tip":"See: https://phpstan.org/developing-extensions/always-used-class-constants"},{"message":"Constant In2plane\\CoreBundle\\Service\\Storage\\GoogleServiceStorageProxy::RETRY_ONCE is unused.","line":15,"ignorable":true,"tip":"See: https://phpstan.org/developing-extensions/always-used-class-constants"}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Service/UserService.php":{"errors":2,"messages":[{"message":"Method In2plane\\CoreBundle\\Service\\UserService::getUserRepository() should return In2plane\\CoreBundle\\Repository\\UserRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\User>.","line":169,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Service\\UserService::getTemporaryUserRepository() should return In2plane\\CoreBundle\\Repository\\TemporaryUserRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\TemporaryUser>.","line":174,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Service/UserVehicleManager.php":{"errors":1,"messages":[{"message":"Method In2plane\\CoreBundle\\Service\\UserVehicleManager::getUserRepository() should return In2plane\\CoreBundle\\Repository\\UserRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\User>.","line":130,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Service/VehicleService.php":{"errors":3,"messages":[{"message":"Method In2plane\\CoreBundle\\Service\\VehicleService::getVehicleRepository() should return In2plane\\CoreBundle\\Repository\\VehicleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>.","line":722,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Service\\VehicleService::getTemporaryVehicleRepository() should return In2plane\\CoreBundle\\Repository\\TemporaryVehicleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\TemporaryVehicle>.","line":727,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Service\\VehicleService::getFuelTypeRepository() should return In2plane\\CoreBundle\\Repository\\FuelTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FuelType>.","line":732,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Tests/Mocks/Mock.php":{"errors":1,"messages":[{"message":"Ternary operator condition is always false.","line":41,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Tools/AirlineTools.php":{"errors":2,"messages":[{"message":"Unreachable statement - code above always terminates.","line":20,"ignorable":true},{"message":"Unreachable statement - code above always terminates.","line":36,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Tools/GeneralTools.php":{"errors":4,"messages":[{"message":"Unreachable statement - code above always terminates.","line":25,"ignorable":true},{"message":"Negated boolean expression is always false.","line":75,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Negated boolean expression is always false.","line":75,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Result of || is always false.","line":75,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Tools/StandTools.php":{"errors":1,"messages":[{"message":"Unreachable statement - code above always terminates.","line":29,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Twig/ClassTwigExtension.php":{"errors":1,"messages":[{"message":"Method In2plane\\CoreBundle\\Twig\\ClassTwigExtension::getFunctions() should return array{className: Twig\\TwigFunction} but returns array{className: Twig\\TwigFilter}.","line":31,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Twig/DateTwigExtension.php":{"errors":5,"messages":[{"message":"Function twig_date_converter not found.","line":71,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Function twig_date_converter not found.","line":72,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"If condition is always true.","line":91,"ignorable":true},{"message":"Call to an undefined method Symfony\\Contracts\\Translation\\TranslatorInterface::transChoice().","line":94,"ignorable":true},{"message":"Unreachable statement - code above always terminates.","line":97,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Twig/FormatTimeFromSecondsExtension.php":{"errors":1,"messages":[{"message":"PHPDoc tag @param references unknown parameter: $includeSeconds","line":59,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Twig/IntlTwigExtension.php":{"errors":5,"messages":[{"message":"Strict comparison using === between float and '-' will always evaluate to false.","line":74,"ignorable":true},{"message":"Call to an undefined method Twig\\Extension\\ExtensionInterface::getTimezone().","line":152,"ignorable":true},{"message":"Call to an undefined method DateTimeInterface::setTimezone().","line":166,"ignorable":true},{"message":"Call to an undefined method Twig\\Extension\\ExtensionInterface::getTimezone().","line":177,"ignorable":true},{"message":"Call to an undefined method Twig\\Extension\\ExtensionInterface::getTimezone().","line":184,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Twig/NumberFormatExtension.php":{"errors":1,"messages":[{"message":"Strict comparison using === between int and null will always evaluate to false.","line":40,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Twig/TranslationExtension.php":{"errors":2,"messages":[{"message":"Class In2plane\\CoreBundle\\Twig\\TranslationExtension extends @final class Symfony\\Bridge\\Twig\\Extension\\TranslationExtension.","line":13,"ignorable":true},{"message":"Right side of && is always true.","line":21,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Twig/TwigGetNumberFormatterTrait.php (in context of class In2plane\\CoreBundle\\Twig\\IntlTwigExtension)":{"errors":1,"messages":[{"message":"Variable $locale on left side of ?? always exists and is not nullable.","line":24,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Twig/TwigGetNumberFormatterTrait.php (in context of class In2plane\\CoreBundle\\Twig\\UnitConversionExtension)":{"errors":1,"messages":[{"message":"Variable $locale on left side of ?? always exists and is not nullable.","line":24,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Twig/TwigLocalizedDateFilterTrait.php (in context of class In2plane\\CoreBundle\\Twig\\FormatDayNameExtension)":{"errors":1,"messages":[{"message":"Function twig_date_converter not found.","line":12,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Twig/TwigLocalizedDateFilterTrait.php (in context of class In2plane\\CoreBundle\\Twig\\TimezoneExtension)":{"errors":1,"messages":[{"message":"Function twig_date_converter not found.","line":12,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Twig/UnitConversionExtension.php":{"errors":1,"messages":[{"message":"Strict comparison using === between float and '-' will always evaluate to false.","line":76,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Validator/Constraints/Machine/AutomatedExporter/Trigger/DeliveryTicketPDFConstraintValidator.php":{"errors":2,"messages":[{"message":"Access to an undefined property Symfony\\Component\\Validator\\Constraint::$serviceOrder.","line":22,"ignorable":true},{"message":"Access to an undefined property Symfony\\Component\\Validator\\Constraint::$message.","line":26,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Validator/Constraints/Machine/AutomatedExporter/Trigger/ETicketConstraintValidator.php":{"errors":2,"messages":[{"message":"Access to an undefined property Symfony\\Component\\Validator\\Constraint::$serviceOrder.","line":25,"ignorable":true},{"message":"Access to an undefined property Symfony\\Component\\Validator\\Constraint::$message.","line":29,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Validator/Constraints/UniqueCompanyFuelSupplierIdentifierValidator.php":{"errors":1,"messages":[{"message":"Method In2plane\\CoreBundle\\Validator\\Constraints\\UniqueCompanyFuelSupplierIdentifierValidator::getCompanyFuelSupplierIdentifierRepository() should return In2plane\\CoreBundle\\Repository\\CompanyFuelSupplierIdentifierRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\CompanyFuelSupplierIdentifier>.","line":54,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Worker/BaseImportWorker.php":{"errors":15,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airline>::findOneByCode().","line":489,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airline>::findOneByName().","line":493,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Customer>::findOneByCompanyAndName().","line":578,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>::findOneByRawName().","line":627,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FuelType>::findOneByNameOrAlias().","line":660,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Pit>::findOneByStandName().","line":689,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\User>::findOneByEmployeeId().","line":721,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Stand>::findOneByName().","line":759,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>::findOneByNameAndCompany().","line":792,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>::getAndIncrementTicketNumber().","line":966,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Worker\\BaseImportWorker::getFlightRepository() should return In2plane\\OperationsBundle\\Repository\\FlightRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Flight>.","line":1013,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Worker\\BaseImportWorker::getFuelOrderRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":1018,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Worker\\BaseImportWorker::getCloseoutRepository() should return In2plane\\OperationsBundle\\Repository\\CloseoutRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Closeout>.","line":1023,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Worker\\BaseImportWorker::getFuelSupplierCodeRepository() should return In2plane\\CoreBundle\\Repository\\FuelSupplierCodeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FuelSupplierCode>.","line":1028,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>::findOneByCode().","line":1037,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Worker/CLHIDImportWorker.php":{"errors":1,"messages":[{"message":"Doctrine\\Common\\Collections\\ArrayCollection<*NEVER*, *NEVER*> does not accept In2plane\\BulkStorageBundle\\Document\\TankQuantity.","line":571,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Worker/ChipImportWorker.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>::findOneByCode().","line":436,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Worker/QTImportWorker.php":{"errors":1,"messages":[{"message":"Method In2plane\\CoreBundle\\Worker\\QTImportWorker::getFuelSupplierGroupRepository() should return In2plane\\OperationsBundle\\Repository\\FuelSupplierGroupRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplierGroup>.","line":356,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Worker/RailcarDataImportWorker.php":{"errors":1,"messages":[{"message":"Method In2plane\\CoreBundle\\Worker\\RailcarDataImportWorker::getFuelTypeRepository() should return In2plane\\CoreBundle\\Repository\\FuelTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FuelType>.","line":451,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/CoreBundle/Worker/WFSSSMImportWorker.php":{"errors":2,"messages":[{"message":"Method In2plane\\CoreBundle\\Worker\\WFSSSMImportWorker::getWFSSSMDataImporterSettingsRepository() should return In2plane\\CoreBundle\\Repository\\WFSSSMDataImporterSettingsRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\WFSSSMDataImporterSettings>.","line":288,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Worker\\WFSSSMImportWorker::getStorageTankRepository() should return In2plane\\BulkStorageBundle\\Repository\\StorageTankRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\StorageTank>.","line":293,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/DenormalizationBundle/Storage/DoctrineODMStorage.php":{"errors":1,"messages":[{"message":"Strict comparison using === between true and false will always evaluate to false.","line":47,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/DenormalizationBundle/Storage/InMemoryStorage.php":{"errors":1,"messages":[{"message":"Strict comparison using === between true and false will always evaluate to false.","line":41,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/FuelSupplierPortalBundle/Form/Type/OperationsFilterType.php":{"errors":2,"messages":[{"message":"Method In2plane\\FuelSupplierPortalBundle\\Form\\Type\\OperationsFilterType::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":341,"ignorable":true},{"message":"Method In2plane\\FuelSupplierPortalBundle\\Form\\Type\\OperationsFilterType::getAirportRepository() should return In2plane\\CoreBundle\\Repository\\AirportRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airport>.","line":349,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/FuelSupplierPortalBundle/Worker/ExportWorksheetWorker.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>::findOneByCompanyId().","line":89,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/LogisticsBundle/Behat/LogisticsMovementContext.php":{"errors":7,"messages":[{"message":"Access to an undefined property In2plane\\LogisticsBundle\\Behat\\LogisticsMovementContext::$fuelType.","line":62,"ignorable":true},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":195,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Expression \"expect($logisticsMovement)->to->not->be->null\" on a separate line does not do anything.","line":209,"ignorable":true},{"message":"Expression \"expect($productUplift)->to->not->be->null\" on a separate line does not do anything.","line":251,"ignorable":true},{"message":"Expression \"expect($fuelDelivery)->to->not->be->null\" on a separate line does not do anything.","line":278,"ignorable":true},{"message":"Variable $logisticsMovement in PHPDoc tag @var does not match assigned variable $fuelDelivery.","line":714,"ignorable":true},{"message":"Variable $logisticsMovement in PHPDoc tag @var does not match assigned variable $fuelDelivery.","line":768,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/LogisticsBundle/Controller/LogisticsMovementController.php":{"errors":1,"messages":[{"message":"Doctrine\\Common\\Collections\\ArrayCollection<*NEVER*, *NEVER*> does not accept In2plane\\LogisticsBundle\\Document\\Paperwork.","line":517,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/LogisticsBundle/Service/LogisticsMovementService.php":{"errors":2,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>::getAndIncrementProductUpliftTicketNumber().","line":53,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>::getAndIncrementDeliveryTicketNumber().","line":178,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/AllocationScreen/AllocationContext.php":{"errors":4,"messages":[{"message":"Expression \"expect($data['success'])->to->be->true\" on a separate line does not do anything.","line":693,"ignorable":true},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":828,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":868,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Method In2plane\\OperationsBundle\\Behat\\AllocationScreen\\AllocationContext::getTerminalRepository() should return In2plane\\CoreBundle\\Repository\\TerminalRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Terminal>.","line":966,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/AllocationScreen/BowserOrderFormContext.php":{"errors":4,"messages":[{"message":"Variable $order in PHPDoc tag @var does not exist.","line":236,"ignorable":true},{"message":"Cannot call method getId() on array<string, mixed>|object.","line":240,"ignorable":true},{"message":"Cannot call method getVehicle() on array<string, mixed>|object.","line":241,"ignorable":true},{"message":"Cannot assign offset 'targetTotal' to string.","line":308,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/AllocationScreen/FuelOrderAsideContext.php":{"errors":3,"messages":[{"message":"Strict comparison using === between In2plane\\OperationsBundle\\Document\\FuelOrder and null will always evaluate to false.","line":36,"ignorable":true},{"message":"Strict comparison using === between In2plane\\OperationsBundle\\Document\\FuelOrder and null will always evaluate to false.","line":51,"ignorable":true},{"message":"Strict comparison using === between In2plane\\OperationsBundle\\Document\\FuelOrder and null will always evaluate to false.","line":102,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/AllocationScreen/FuelOrderFormContext.php":{"errors":14,"messages":[{"message":"Static property In2plane\\OperationsBundle\\Behat\\AllocationScreen\\FuelOrderFormContext::$lastFuelOrderId (int) does not accept string|null.","line":1049,"ignorable":true},{"message":"Expression \"expect($fuelOrder->getShouldBeAssignedToADepartureMovement())->to->be->false\" on a separate line does not do anything.","line":1156,"ignorable":true},{"message":"Expression \"expect($fuelOrder->getShouldBeAssignedToADepartureMovement())->to->be->true\" on a separate line does not do anything.","line":1167,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelQuantityChange>::findByFuelOrder().","line":1609,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelStockChange>::findByFuelOrder().","line":1624,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelMovement>::findOneByFuelOrderVehicleAndStorageTank().","line":1639,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelQuantityChange>::findByFuelOrder().","line":1654,"ignorable":true},{"message":"Negated boolean expression is always false.","line":1847,"ignorable":true},{"message":"Call to an undefined method In2plane\\OperationsBundle\\Document\\ServiceOrder::getType().","line":2561,"ignorable":true},{"message":"Call to an undefined method In2plane\\OperationsBundle\\Document\\ServiceOrder::getRefuelType().","line":2563,"ignorable":true},{"message":"Call to an undefined method In2plane\\OperationsBundle\\Document\\ServiceOrder::getFuelType().","line":2580,"ignorable":true},{"message":"Call to an undefined method In2plane\\OperationsBundle\\Document\\ServiceOrder::getFuelSupplier().","line":2581,"ignorable":true},{"message":"Cannot call method getQuantityChange() on array<string, mixed>|object.","line":3152,"ignorable":true},{"message":"Cannot call method getQuantityChange() on array<string, mixed>|object.","line":3418,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/AllocationScreen/FuelOrderMeasurementsFormContext.php":{"errors":5,"messages":[{"message":"PHPDoc tag @var above assignment does not specify variable name.","line":43,"ignorable":true},{"message":"Static property In2plane\\OperationsBundle\\Behat\\AllocationScreen\\FuelOrderFormContext::$lastFuelOrderId (int) does not accept string|null.","line":180,"ignorable":true},{"message":"Static property In2plane\\OperationsBundle\\Behat\\AllocationScreen\\FuelOrderFormContext::$lastFuelOrderId (int) does not accept string.","line":191,"ignorable":true},{"message":"Static property In2plane\\OperationsBundle\\Behat\\AllocationScreen\\FuelOrderFormContext::$lastFuelOrderId (int) does not accept string.","line":213,"ignorable":true},{"message":"Negated boolean expression is always false.","line":922,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/BlacklistSanctions/BlackListSanctionsContext.php":{"errors":1,"messages":[{"message":"Cannot call method getSanctions() on array<string, mixed>|object.","line":121,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/BlacklistSanctions/ImportExcelFileBlacklistSanctionsContext.php":{"errors":1,"messages":[{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":87,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/BlacklistSanctions/SanctionEventsContext.php":{"errors":1,"messages":[{"message":"Expression \"expect($sanctionCheckedEventsFound > 0)->to->be->true\" on a separate line does not do anything.","line":45,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/CloseoutContext.php":{"errors":9,"messages":[{"message":"PHPDoc tag @var has invalid value ($vehicleKeys array): Unexpected token \"$vehicleKeys\", expected type at offset 81","line":57,"ignorable":true},{"message":"PHPDoc tag @var has invalid value ($orderKeys array): Unexpected token \"$orderKeys\", expected type at offset 87","line":80,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Behat\\CloseoutContext::iCloseOutDay() invoked with 1 parameter, 0 required.","line":234,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Behat\\CloseoutContext::iCloseOutDay() invoked with 1 parameter, 0 required.","line":246,"ignorable":true},{"message":"Call to method followRedirect() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":256,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":257,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Expression \"expect(self::$closeOut->getLocked())->to->be->true\" on a separate line does not do anything.","line":1569,"ignorable":true},{"message":"Expression \"expect(self::$closeOut->getLocked())->to->be->false\" on a separate line does not do anything.","line":1579,"ignorable":true},{"message":"Expression \"expect(self::$previousFuelOrder)->to->be->null\" on a separate line does not do anything.","line":2135,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/CommandContext.php":{"errors":3,"messages":[{"message":"Using nullsafe method call on non-nullable type Symfony\\Component\\Console\\Tester\\CommandTester. Use -> instead.","line":43,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":313,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":351,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/CreditReissueContext.php":{"errors":9,"messages":[{"message":"Variable $fuelOrder in PHPDoc tag @var does not exist.","line":103,"ignorable":true},{"message":"Static property In2plane\\OperationsBundle\\Behat\\CreditReissueContext::$fuelOrder (In2plane\\OperationsBundle\\Document\\FuelOrder) does not accept In2plane\\OperationsBundle\\Document\\ServiceOrder|null.","line":146,"ignorable":true},{"message":"Static property In2plane\\OperationsBundle\\Behat\\CreditReissueContext::$fuelOrder (In2plane\\OperationsBundle\\Document\\FuelOrder) does not accept In2plane\\OperationsBundle\\Document\\ServiceOrder|null.","line":149,"ignorable":true},{"message":"Static property In2plane\\OperationsBundle\\Behat\\AllocationScreen\\FuelOrderFormContext::$lastFuelOrderId (int) does not accept string|null.","line":154,"ignorable":true},{"message":"Negated boolean expression is always false.","line":199,"ignorable":true},{"message":"Negated boolean expression is always false.","line":222,"ignorable":true},{"message":"Call to an undefined method In2plane\\OperationsBundle\\Document\\ServiceOrder::getType().","line":235,"ignorable":true},{"message":"Call to an undefined method In2plane\\OperationsBundle\\Document\\ServiceOrder::getType().","line":236,"ignorable":true},{"message":"Static property In2plane\\OperationsBundle\\Behat\\FuelOrderContext::$fuelOrder (In2plane\\OperationsBundle\\Document\\FuelOrder) does not accept In2plane\\OperationsBundle\\Document\\ServiceOrder|null.","line":307,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/FuelOrderContext.php":{"errors":13,"messages":[{"message":"Static property In2plane\\OperationsBundle\\Behat\\FuelOrderContext::$fuelOrder (In2plane\\OperationsBundle\\Document\\FuelOrder) does not accept null.","line":73,"ignorable":true},{"message":"Call to method followRedirect() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":594,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":595,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Variable $fuelOrderAdditive1 in PHPDoc tag @var does not exist.","line":632,"ignorable":true},{"message":"Static property In2plane\\OperationsBundle\\Behat\\AllocationScreen\\FuelOrderFormContext::$lastFuelOrderId (int) does not accept string|null.","line":852,"ignorable":true},{"message":"Static property In2plane\\OperationsBundle\\Behat\\AllocationScreen\\FuelOrderFormContext::$lastFuelOrderId (int) does not accept string|null.","line":901,"ignorable":true},{"message":"PHPDoc tag @var above assignment does not specify variable name.","line":1205,"ignorable":true},{"message":"PHPDoc tag @var above assignment does not specify variable name.","line":1241,"ignorable":true},{"message":"Static property In2plane\\OperationsBundle\\Behat\\FuelOrderContext::$fuelOrder (In2plane\\OperationsBundle\\Document\\FuelOrder) does not accept In2plane\\OperationsBundle\\Document\\ServiceOrder|null.","line":1388,"ignorable":true},{"message":"Static property In2plane\\OperationsBundle\\Behat\\FuelOrderContext::$fuelOrder (In2plane\\OperationsBundle\\Document\\FuelOrder) does not accept In2plane\\OperationsBundle\\Document\\ServiceOrder|null.","line":1467,"ignorable":true},{"message":"Function expect invoked with 2 parameters, 1 required.","line":1772,"ignorable":true},{"message":"Static property In2plane\\OperationsBundle\\Behat\\AllocationScreen\\FuelOrderFormContext::$lastFuelOrderId (int) does not accept string|null.","line":2007,"ignorable":true},{"message":"Expression \"expect($fuelOrder->isManualDataEntry())->to->be->true\" on a separate line does not do anything.","line":2245,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/FuelSupplierContractContext.php":{"errors":3,"messages":[{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":131,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":143,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Expression \"expect(static::$validFuelSupplierContract->isDeleted())->to->be->true\" on a separate line does not do anything.","line":374,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/GanttContext.php":{"errors":3,"messages":[{"message":"Variable $gantt in PHPDoc tag @var does not match assigned variable $now.","line":31,"ignorable":true},{"message":"Variable $order in PHPDoc tag @var does not exist.","line":206,"ignorable":true},{"message":"Variable $gantt in PHPDoc tag @var does not match assigned variable $yesterday.","line":233,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/Helpers/FuelOrderHelper.php (in context of class In2plane\\CoreBundle\\Behat\\DefaultContext)":{"errors":2,"messages":[{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::fuelOrderTypeDataWithBothAmbientAndSTAMeasurements() has invalid return type array.","line":130,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Behat\\DefaultContext::fuelOrderTypeDataWithBothAmbientAndSTAMeasurements() should return array<array<array<array>>> but returns array<string, array<string, array<int, array<string, mixed>>>>.","line":131,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/InboundEmailParseContext.php":{"errors":2,"messages":[{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":35,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":56,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/ManualOperationsFuelOrderScreenContext.php":{"errors":8,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airport>::findOneByCode().","line":96,"ignorable":true},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":156,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":157,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":206,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method followRedirect() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":346,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":347,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Terminal>::findOneByName().","line":655,"ignorable":true},{"message":"Cannot call method getTicketNumber() on object|false.","line":697,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/MessageQueue/AidxFlightLegRsProcessorContext.php":{"errors":12,"messages":[{"message":"Variable $company in PHPDoc tag @var does not match assigned variable $date.","line":29,"ignorable":true},{"message":"Variable $company in PHPDoc tag @var does not match assigned variable $date.","line":47,"ignorable":true},{"message":"Call to an undefined method In2plane\\OperationsBundle\\MessageQueue\\Processor\\ProcessorInterface::setAidxMessage().","line":282,"ignorable":true},{"message":"Call to an undefined method In2plane\\OperationsBundle\\MessageQueue\\Processor\\ProcessorInterface::processXml().","line":367,"ignorable":true},{"message":"Call to an undefined method In2plane\\OperationsBundle\\MessageQueue\\Processor\\ProcessorInterface::processXml().","line":374,"ignorable":true},{"message":"Expression on left side of ?? is not nullable.","line":412,"ignorable":true},{"message":"Instantiated class InavalidArgumentException not found.","line":467,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Throwing object of an unknown class InavalidArgumentException.","line":467,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Instantiated class InavalidArgumentException not found.","line":472,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Throwing object of an unknown class InavalidArgumentException.","line":472,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Instantiated class InavalidArgumentException not found.","line":477,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Throwing object of an unknown class InavalidArgumentException.","line":477,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/MessageQueue/KLMEmployeeProcessorContext.php":{"errors":2,"messages":[{"message":"Cannot call method getId() on array<string, mixed>|object.","line":60,"ignorable":true},{"message":"Caught class In2plane\\OperationsBundle\\Behat\\MessageQueue\\Exception not found.","line":81,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/MessageQueue/KLMTaskProcessorContext.php":{"errors":3,"messages":[{"message":"Expression \"expect($fuelOrder->getAircraft())->to->be->null\" on a separate line does not do anything.","line":227,"ignorable":true},{"message":"Call to an undefined method In2plane\\OperationsBundle\\Document\\ServiceOrder::getPrimaryOrder().","line":282,"ignorable":true},{"message":"Call to an undefined method In2plane\\OperationsBundle\\Document\\ServiceOrder::getPrimaryOrder().","line":283,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/Operations/API/FlowMeterAPIContext.php":{"errors":3,"messages":[{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":569,"ignorable":true},{"message":"Expression \"$fuelFlow['flowChange']\" on a separate line does not do anything.","line":1055,"ignorable":true},{"message":"Expression \"$fuelFlow['temperature']\" on a separate line does not do anything.","line":1056,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/Operations/API/FuelOrderOperatorAPIContext.php":{"errors":9,"messages":[{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":681,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":682,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Expression \"expect($fuelQuantity->getCrewAssisted())->to->be->false\" on a separate line does not do anything.","line":1289,"ignorable":true},{"message":"Expression \"expect($fuelQuantity->getQuantity())->to->be->null\" on a separate line does not do anything.","line":1304,"ignorable":true},{"message":"Expression \"expect($fuelQuantity->getStatus())->to->be->null\" on a separate line does not do anything.","line":1305,"ignorable":true},{"message":"Expression \"expect($fuelQuantity->getCrewAssisted())->to->be->true\" on a separate line does not do anything.","line":1310,"ignorable":true},{"message":"If condition is always true.","line":1368,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\Reason>::findOneByCodeAndCompany().","line":1372,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\RuleBundle\\Document\\Rule>::findActiveRulesForCompanyAndType().","line":1647,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/Operations/API/FuelOrderPilotAPIContext.php":{"errors":3,"messages":[{"message":"Else branch is unreachable because ternary operator condition is always true.","line":139,"ignorable":true},{"message":"Variable $targetTotal in PHPDoc tag @var does not match assigned variable $noFuel.","line":1271,"ignorable":true},{"message":"Call to an undefined method In2plane\\OperationsBundle\\Document\\ServiceOrder::getFuelSheetFilename().","line":1765,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/Operations/API/ServiceOrderLogContext.php":{"errors":1,"messages":[{"message":"Variable $data in empty() is never defined.","line":25,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/Operations/API/ServiceOrderOperatorAPIContext.php":{"errors":1,"messages":[{"message":"Variable $data in empty() is never defined.","line":1135,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/Operations/API/ShuttleBusOrderOperatorAPIContext.php":{"errors":1,"messages":[{"message":"Static property In2plane\\OperationsBundle\\Behat\\Operations\\API\\ShuttleBusOrderOperatorAPIContext::$shuttleBusOrder (In2plane\\OperationsBundle\\Document\\ShuttleBusOrder) does not accept In2plane\\OperationsBundle\\Document\\ServiceOrder|null.","line":107,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/Operations/AircraftMovementContext.php":{"errors":1,"messages":[{"message":"Expression \"expect(\\In2plane\\OperationsBundle\\Behat\\Operations\\BaseServiceOrdersContext::$aircraftMovement instanceof \\In2plane\\OperationsBundle\\Document\\AircraftMovement)->to->be->true\" on a separate line does not do anything.","line":208,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/Operations/AircraftMovementFactoryContext.php":{"errors":7,"messages":[{"message":"Expression \"expect($aircraftMovement->getIsInbound())->to->be->false\" on a separate line does not do anything.","line":129,"ignorable":true},{"message":"Expression \"expect($aircraftMovement->getIsInbound())->to->be->true\" on a separate line does not do anything.","line":207,"ignorable":true},{"message":"Expression \"expect($aircraftMovement->getIsInbound())->to->be->true\" on a separate line does not do anything.","line":235,"ignorable":true},{"message":"Expression \"expect($aircraftMovement->getIsInbound())->to->be->false\" on a separate line does not do anything.","line":288,"ignorable":true},{"message":"Expression \"expect($aircraftMovement->getIsInbound())->to->be->true\" on a separate line does not do anything.","line":339,"ignorable":true},{"message":"Expression \"expect($aircraftMovement)->to->be->null\" on a separate line does not do anything.","line":630,"ignorable":true},{"message":"Expression \"expect($aircraftMovement->getIsInbound())->to->be->true\" on a separate line does not do anything.","line":661,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/Operations/BaggageOrderContext.php":{"errors":2,"messages":[{"message":"Variable $aircraftMovement in PHPDoc tag @var does not exist.","line":36,"ignorable":true},{"message":"Static property In2plane\\OperationsBundle\\Behat\\Operations\\BaggageOrderContext::$baggageOrder (In2plane\\OperationsBundle\\Document\\BaggageOrder) does not accept In2plane\\OperationsBundle\\Document\\ServiceOrder|null.","line":103,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/Operations/BaseServiceOrdersContext.php":{"errors":22,"messages":[{"message":"Call to an undefined method Behat\\Testwork\\Environment\\Environment::getContext().","line":132,"ignorable":true},{"message":"Call to an undefined method Behat\\Testwork\\Environment\\Environment::getContext().","line":133,"ignorable":true},{"message":"Variable $aircraftMovement in PHPDoc tag @var does not exist.","line":216,"ignorable":true},{"message":"Static property In2plane\\OperationsBundle\\Behat\\Operations\\BaseServiceOrdersContext::$serviceOrderDocument (In2plane\\OperationsBundle\\Document\\ServiceOrder) does not accept array.","line":441,"ignorable":true},{"message":"Cannot call method getId() on array.","line":448,"ignorable":true},{"message":"Cannot call method getId() on array.","line":455,"ignorable":true},{"message":"Static property In2plane\\OperationsBundle\\Behat\\Operations\\BaseServiceOrdersContext::$serviceOrderDocument (In2plane\\OperationsBundle\\Document\\ServiceOrder) does not accept array.","line":486,"ignorable":true},{"message":"Cannot call method getId() on array.","line":493,"ignorable":true},{"message":"Cannot call method getId() on array.","line":500,"ignorable":true},{"message":"Static property In2plane\\OperationsBundle\\Behat\\Operations\\BaseServiceOrdersContext::$serviceOrderDocument (In2plane\\OperationsBundle\\Document\\ServiceOrder) does not accept array.","line":520,"ignorable":true},{"message":"Cannot call method getId() on array.","line":528,"ignorable":true},{"message":"Cannot call method getId() on array.","line":541,"ignorable":true},{"message":"Static property In2plane\\OperationsBundle\\Behat\\Operations\\BaseServiceOrdersContext::$serviceOrderDocument (In2plane\\OperationsBundle\\Document\\ServiceOrder) does not accept array.","line":569,"ignorable":true},{"message":"Cannot call method getId() on array.","line":576,"ignorable":true},{"message":"Cannot call method getId() on array.","line":589,"ignorable":true},{"message":"Static property In2plane\\OperationsBundle\\Behat\\Operations\\BaseServiceOrdersContext::$serviceOrderDocument (In2plane\\OperationsBundle\\Document\\ServiceOrder) does not accept array.","line":618,"ignorable":true},{"message":"Cannot call method getId() on array.","line":625,"ignorable":true},{"message":"Static property In2plane\\OperationsBundle\\Behat\\Operations\\BaseServiceOrdersContext::$serviceOrderDocument (In2plane\\OperationsBundle\\Document\\ServiceOrder) does not accept array.","line":650,"ignorable":true},{"message":"Cannot call method getId() on array.","line":656,"ignorable":true},{"message":"Expression \"expect($serviceOrder->getId())->not->to->be->null\" on a separate line does not do anything.","line":986,"ignorable":true},{"message":"Expression \"expect(static::$aircraftMovement instanceof \\In2plane\\OperationsBundle\\Document\\AircraftMovement)->to->be->true\" on a separate line does not do anything.","line":997,"ignorable":true},{"message":"Expression \"expect(static::$aircraftMovement->getLinkedFlightNumber())->not->to->be->null\" on a separate line does not do anything.","line":998,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/Operations/DataEntryModule/DataEntryModuleContext.php":{"errors":1,"messages":[{"message":"Dead catch - Exception is never thrown in the try block.","line":186,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/Operations/DeIcingOrderContext.php":{"errors":1,"messages":[{"message":"Variable $aircraftMovement in PHPDoc tag @var does not exist.","line":33,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/Operations/EHandshake/ThirdPartyIn2PlaneAgentEHandshakeContext.php":{"errors":16,"messages":[{"message":"Cannot call method willReturn() on array.","line":108,"ignorable":true},{"message":"Cannot call method willReturn() on array.","line":121,"ignorable":true},{"message":"Cannot call method willReturn() on array.","line":134,"ignorable":true},{"message":"Cannot call method willReturn() on array.","line":147,"ignorable":true},{"message":"Cannot call method shouldHaveBeenCalled() on array.","line":160,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Service\\EHandshake\\ThirdPartyIn2PlaneAgentAPI::findOrder() invoked with 1 parameter, 4 required.","line":160,"ignorable":true},{"message":"Cannot call method shouldNotBeCalled() on array.","line":171,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Service\\EHandshake\\ThirdPartyIn2PlaneAgentAPI::findOrder() invoked with 1 parameter, 4 required.","line":171,"ignorable":true},{"message":"Cannot call method shouldHaveBeenCalled() on null.","line":182,"ignorable":true},{"message":"Cannot call method shouldHaveBeenCalled() on array.","line":193,"ignorable":true},{"message":"Cannot call method shouldHaveBeenCalled() on array.","line":204,"ignorable":true},{"message":"Cannot call method shouldHaveBeenCalled() on array.","line":215,"ignorable":true},{"message":"Cannot call method shouldHaveBeenCalled() on array.","line":226,"ignorable":true},{"message":"Cannot call method shouldHaveBeenCalled() on array.","line":237,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":321,"ignorable":true},{"message":"Variable $service might not be defined.","line":321,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/Operations/Factory/ApiSources/GuzzleResponseMock.php":{"errors":20,"messages":[{"message":"Return type (void) of method In2plane\\OperationsBundle\\Behat\\Operations\\Factory\\ApiSources\\GuzzleResponseMock::getProtocolVersion() should be compatible with return type (string) of method Psr\\Http\\Message\\MessageInterface::getProtocolVersion()","line":866,"ignorable":true},{"message":"Return type (void) of method In2plane\\OperationsBundle\\Behat\\Operations\\Factory\\ApiSources\\GuzzleResponseMock::getProtocolVersion() should be compatible with return type (string) of method Psr\\Http\\Message\\MessageInterface::getProtocolVersion()","line":866,"ignorable":true},{"message":"Return type (void) of method In2plane\\OperationsBundle\\Behat\\Operations\\Factory\\ApiSources\\GuzzleResponseMock::withProtocolVersion() should be compatible with return type (static(Psr\\Http\\Message\\MessageInterface)) of method Psr\\Http\\Message\\MessageInterface::withProtocolVersion()","line":885,"ignorable":true},{"message":"Return type (void) of method In2plane\\OperationsBundle\\Behat\\Operations\\Factory\\ApiSources\\GuzzleResponseMock::withProtocolVersion() should be compatible with return type (static(Psr\\Http\\Message\\MessageInterface)) of method Psr\\Http\\Message\\MessageInterface::withProtocolVersion()","line":885,"ignorable":true},{"message":"Return type (void) of method In2plane\\OperationsBundle\\Behat\\Operations\\Factory\\ApiSources\\GuzzleResponseMock::getHeaders() should be compatible with return type (array<array<string>>) of method Psr\\Http\\Message\\MessageInterface::getHeaders()","line":913,"ignorable":true},{"message":"Return type (void) of method In2plane\\OperationsBundle\\Behat\\Operations\\Factory\\ApiSources\\GuzzleResponseMock::getHeaders() should be compatible with return type (array<array<string>>) of method Psr\\Http\\Message\\MessageInterface::getHeaders()","line":913,"ignorable":true},{"message":"Return type (void) of method In2plane\\OperationsBundle\\Behat\\Operations\\Factory\\ApiSources\\GuzzleResponseMock::hasHeader() should be compatible with return type (bool) of method Psr\\Http\\Message\\MessageInterface::hasHeader()","line":925,"ignorable":true},{"message":"Return type (void) of method In2plane\\OperationsBundle\\Behat\\Operations\\Factory\\ApiSources\\GuzzleResponseMock::hasHeader() should be compatible with return type (bool) of method Psr\\Http\\Message\\MessageInterface::hasHeader()","line":925,"ignorable":true},{"message":"Return type (void) of method In2plane\\OperationsBundle\\Behat\\Operations\\Factory\\ApiSources\\GuzzleResponseMock::getHeaderLine() should be compatible with return type (string) of method Psr\\Http\\Message\\MessageInterface::getHeaderLine()","line":948,"ignorable":true},{"message":"Return type (void) of method In2plane\\OperationsBundle\\Behat\\Operations\\Factory\\ApiSources\\GuzzleResponseMock::getHeaderLine() should be compatible with return type (string) of method Psr\\Http\\Message\\MessageInterface::getHeaderLine()","line":948,"ignorable":true},{"message":"Return type (void) of method In2plane\\OperationsBundle\\Behat\\Operations\\Factory\\ApiSources\\GuzzleResponseMock::withHeader() should be compatible with return type (static(Psr\\Http\\Message\\MessageInterface)) of method Psr\\Http\\Message\\MessageInterface::withHeader()","line":970,"ignorable":true},{"message":"Return type (void) of method In2plane\\OperationsBundle\\Behat\\Operations\\Factory\\ApiSources\\GuzzleResponseMock::withHeader() should be compatible with return type (static(Psr\\Http\\Message\\MessageInterface)) of method Psr\\Http\\Message\\MessageInterface::withHeader()","line":970,"ignorable":true},{"message":"Return type (void) of method In2plane\\OperationsBundle\\Behat\\Operations\\Factory\\ApiSources\\GuzzleResponseMock::withAddedHeader() should be compatible with return type (static(Psr\\Http\\Message\\MessageInterface)) of method Psr\\Http\\Message\\MessageInterface::withAddedHeader()","line":993,"ignorable":true},{"message":"Return type (void) of method In2plane\\OperationsBundle\\Behat\\Operations\\Factory\\ApiSources\\GuzzleResponseMock::withAddedHeader() should be compatible with return type (static(Psr\\Http\\Message\\MessageInterface)) of method Psr\\Http\\Message\\MessageInterface::withAddedHeader()","line":993,"ignorable":true},{"message":"Return type (void) of method In2plane\\OperationsBundle\\Behat\\Operations\\Factory\\ApiSources\\GuzzleResponseMock::withoutHeader() should be compatible with return type (static(Psr\\Http\\Message\\MessageInterface)) of method Psr\\Http\\Message\\MessageInterface::withoutHeader()","line":1011,"ignorable":true},{"message":"Return type (void) of method In2plane\\OperationsBundle\\Behat\\Operations\\Factory\\ApiSources\\GuzzleResponseMock::withoutHeader() should be compatible with return type (static(Psr\\Http\\Message\\MessageInterface)) of method Psr\\Http\\Message\\MessageInterface::withoutHeader()","line":1011,"ignorable":true},{"message":"Return type (void) of method In2plane\\OperationsBundle\\Behat\\Operations\\Factory\\ApiSources\\GuzzleResponseMock::withBody() should be compatible with return type (static(Psr\\Http\\Message\\MessageInterface)) of method Psr\\Http\\Message\\MessageInterface::withBody()","line":1031,"ignorable":true},{"message":"Return type (void) of method In2plane\\OperationsBundle\\Behat\\Operations\\Factory\\ApiSources\\GuzzleResponseMock::withBody() should be compatible with return type (static(Psr\\Http\\Message\\MessageInterface)) of method Psr\\Http\\Message\\MessageInterface::withBody()","line":1031,"ignorable":true},{"message":"Return type (void) of method In2plane\\OperationsBundle\\Behat\\Operations\\Factory\\ApiSources\\GuzzleResponseMock::withStatus() should be compatible with return type (static(Psr\\Http\\Message\\ResponseInterface)) of method Psr\\Http\\Message\\ResponseInterface::withStatus()","line":1059,"ignorable":true},{"message":"Return type (void) of method In2plane\\OperationsBundle\\Behat\\Operations\\Factory\\ApiSources\\GuzzleResponseMock::getReasonPhrase() should be compatible with return type (string) of method Psr\\Http\\Message\\ResponseInterface::getReasonPhrase()","line":1078,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/Operations/StepsOrderContext.php":{"errors":2,"messages":[{"message":"Variable $aircraftMovement in PHPDoc tag @var does not exist.","line":31,"ignorable":true},{"message":"Static property In2plane\\OperationsBundle\\Behat\\Operations\\StepsOrderContext::$stepsOrder (In2plane\\OperationsBundle\\Document\\StepsOrder) does not accept In2plane\\OperationsBundle\\Document\\ServiceOrder|null.","line":95,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/Operations/SupplierOrderContext.php":{"errors":1,"messages":[{"message":"Variable $aircraftMovement in PHPDoc tag @var does not exist.","line":35,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/OperationsFuelOrderScreenContext.php":{"errors":2,"messages":[{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":353,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":467,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/Services/CustomsServiceContext.php":{"errors":1,"messages":[{"message":"Call to an undefined method Prophecy\\Prophecy\\ObjectProphecy<In2plane\\CoreBundle\\Mailer\\CoreMailer>::italianCustomsYearly().","line":38,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/Settings/BillingTypeContext.php":{"errors":1,"messages":[{"message":"Call to method getInternalResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":27,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/Settings/FuelSupplierConfigurationsContext.php":{"errors":2,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>::findOneByName().","line":19,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>::findOneByName().","line":20,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/Settings/QualityControlChecksContext.php":{"errors":1,"messages":[{"message":"Access to an undefined property In2plane\\OperationsBundle\\Behat\\Settings\\QualityControlChecksContext::$qcCheckName.","line":62,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/Settings/ServiceTypesContext.php":{"errors":2,"messages":[{"message":"Expression \"expect(in_array($type, $companyRelatedServiceTypes, true))->to->be->true\" on a separate line does not do anything.","line":39,"ignorable":true},{"message":"Expression \"expect($setting)->not->to->be->empty\" on a separate line does not do anything.","line":165,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/Settings/ServicedFlightsContext.php":{"errors":2,"messages":[{"message":"Expression \"expect(isset($companies[$company->getId()]))->to->be->false\" on a separate line does not do anything.","line":683,"ignorable":true},{"message":"Expression \"expect(isset($companies[$company->getId()]))->to->be->true\" on a separate line does not do anything.","line":697,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/ShiftContext.php":{"errors":1,"messages":[{"message":"Static property In2plane\\OperationsBundle\\Behat\\ShiftContext::$shift (In2plane\\OperationsBundle\\Document\\Shift) does not accept null.","line":64,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Behat/SwimlaneContext.php":{"errors":2,"messages":[{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":100,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method request() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":141,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Command/AutomatedExporterTriggerCommand.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Closeout>::findByDate().","line":108,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Command/BaseFeedProcess.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Command\\BaseFeedProcess::getDataFeedRepository() should return In2plane\\CoreBundle\\Repository\\DataFeedRepository but returns Doctrine\\ORM\\EntityRepository<In2plane\\CoreBundle\\Document\\Machine\\DataFeed>.","line":207,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Command/CreateDummyFuelOrdersCommand.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>::findOneByDomain().","line":116,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Command/DataImportCommand.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\User>::findOneByEmailOrUsername().","line":104,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Command/DynamicSchedulingDelayedArrivalsCommand.php":{"errors":2,"messages":[{"message":"Property In2plane\\OperationsBundle\\Command\\DynamicSchedulingDelayedArrivalsCommand::$companyRepository (In2plane\\CoreBundle\\Repository\\CompanyRepository) does not accept Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":46,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>::findByEnabledLicence().","line":70,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Command/DynamicSchedulingLateOrdersCommand.php":{"errors":2,"messages":[{"message":"Property In2plane\\OperationsBundle\\Command\\DynamicSchedulingLateOrdersCommand::$companyRepository (In2plane\\CoreBundle\\Repository\\CompanyRepository) does not accept Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":46,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>::findByEnabledLicence().","line":70,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Command/ExpiredFuelSupplierContractsCommand.php":{"errors":2,"messages":[{"message":"Method In2plane\\OperationsBundle\\Command\\ExpiredFuelSupplierContractsCommand::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":95,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Command\\ExpiredFuelSupplierContractsCommand::getFuelSupplierContractRepository() should return In2plane\\OperationsBundle\\Repository\\FuelSupplierContractRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplierContract>.","line":103,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Command/ExportServiceOrdersCommand.php":{"errors":2,"messages":[{"message":"Method In2plane\\OperationsBundle\\Command\\ExportServiceOrdersCommand::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":171,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Command\\ExportServiceOrdersCommand::getServiceTypeSettingsRepository() should return In2plane\\OperationsBundle\\Repository\\ServiceTypeSettingsRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\ServiceTypeSettings>.","line":179,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Command/FinishKLMChipShiftsCommand.php":{"errors":2,"messages":[{"message":"Method In2plane\\OperationsBundle\\Command\\FinishKLMChipShiftsCommand::getShiftRepository() should return In2plane\\OperationsBundle\\Repository\\ShiftRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Shift>.","line":97,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Command\\FinishKLMChipShiftsCommand::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":102,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Command/FixCreditReissueTransactionTypeCommand.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Command\\FixCreditReissueTransactionTypeCommand::getServiceOrderRepository() should return In2plane\\OperationsBundle\\Repository\\ServiceOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrder>.","line":115,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Command/FixDeliveredSTAVolumeCommand.php":{"errors":2,"messages":[{"message":"Method In2plane\\OperationsBundle\\Command\\FixDeliveredSTAVolumeCommand::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":115,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Command\\FixDeliveredSTAVolumeCommand::getFuelOrderRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":123,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Command/FixFuelSupplierContractDatesCommand.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>::findByType().","line":63,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Command/FixTemperatureAndVolumesCommand.php":{"errors":2,"messages":[{"message":"Method In2plane\\OperationsBundle\\Command\\FixTemperatureAndVolumesCommand::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":137,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Command\\FixTemperatureAndVolumesCommand::getFuelOrderRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":145,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Command/FuelOrderAttachContractCommand.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplierContract>::findOneForFuelOrder().","line":64,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Command/FuellingLateUpdateCommand.php":{"errors":2,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>::findLate().","line":113,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>::findNotLate().","line":130,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Command/MigrateRefuelTimingRulesCommand.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Command\\MigrateRefuelTimingRulesCommand::getAuditLogRepository() should return In2plane\\AuditBundle\\Repository\\AuditLogRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\AuditBundle\\Document\\BaseAction>.","line":129,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Command/PubSubFeedProcessorCommand.php":{"errors":1,"messages":[{"message":"Else branch is unreachable because ternary operator condition is always true.","line":135,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Command/RecalculateFuelSupplierContractSplitsCommand.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>::findNotCancelledByFuelSupplierContract().","line":86,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Command/RegenerateServiceOrdersCommand.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrder>::findAllAfterDate().","line":67,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Command/RemoveStandCommand.php":{"errors":3,"messages":[{"message":"Property In2plane\\OperationsBundle\\Command\\RemoveStandCommand::$standRepository (In2plane\\CoreBundle\\Repository\\StandRepository) does not accept Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Stand>.","line":47,"ignorable":true},{"message":"Property In2plane\\OperationsBundle\\Command\\RemoveStandCommand::$companyRepository (In2plane\\CoreBundle\\Repository\\CompanyRepository) does not accept Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":48,"ignorable":true},{"message":"Property In2plane\\OperationsBundle\\Command\\RemoveStandCommand::$serviceOrderRepository (In2plane\\OperationsBundle\\Repository\\ServiceOrderRepository) does not accept Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrder>.","line":49,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Command/ServiceOrderSuppliersImportCommand.php":{"errors":2,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrderSupplier>::findOneByName().","line":217,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>::findOneByName().","line":232,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Command/TanksFixerCommand.php":{"errors":2,"messages":[{"message":"Method In2plane\\OperationsBundle\\Command\\TanksFixerCommand::getAirlineRepository() should return In2plane\\CoreBundle\\Repository\\AirlineRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airline>.","line":64,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Command\\TanksFixerCommand::getAircraftRepository() should return In2plane\\OperationsBundle\\Repository\\AircraftRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Aircraft>.","line":69,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Controller/AircraftMovementController.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\AircraftMovement>::findOneByFlight().","line":385,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Controller/AllocationController.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrder>::findByIds().","line":242,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Controller/CreditReasonController.php":{"errors":1,"messages":[{"message":"If condition is always false.","line":39,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Controller/FuelSupplierGroupController.php":{"errors":2,"messages":[{"message":"Strict comparison using !== between null and null will always evaluate to false.","line":54,"ignorable":true},{"message":"Strict comparison using === between true and false will always evaluate to false.","line":60,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Controller/FuelTypeCodeController.php":{"errors":1,"messages":[{"message":"If condition is always false.","line":53,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Controller/QualityControlCheckController.php":{"errors":1,"messages":[{"message":"If condition is always false.","line":48,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Controller/ReasonController.php":{"errors":1,"messages":[{"message":"If condition is always false.","line":37,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Controller/ServicedFlightController.php":{"errors":3,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServicedFlight>::findByFuelSupplierContract().","line":531,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Controller\\ServicedFlightController::getDOOPFileRepository() should return In2plane\\OperationsBundle\\Repository\\DOOPFileRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\DOOPFile>.","line":810,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Controller\\ServicedFlightController::getAirportScheduleRepository() should return In2plane\\OperationsBundle\\Repository\\AirportScheduleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\AirportSchedule>.","line":818,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/DataFixtures/Alice/Processor/FuelOrderProcessor.php":{"errors":1,"messages":[{"message":"Property In2plane\\OperationsBundle\\DataFixtures\\Alice\\Processor\\FuelOrderProcessor::$documentProvider (In2plane\\CoreBundle\\DataFixtures\\Faker\\Provider\\DocumentProvider) does not accept Nelmio\\CorsBundle\\Options\\ProviderInterface|null.","line":66,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/DataFixtures/MongoDB/LoadAircraftData.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\DataFixtures\\MongoDB\\LoadAircraftData::load() should return bool but returns int.","line":28,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/AircraftMovement.php":{"errors":2,"messages":[{"message":"Property In2plane\\OperationsBundle\\Document\\AircraftMovement::$serviceOrders ((Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\ServiceOrder>)|null) does not accept array<int, In2plane\\OperationsBundle\\Document\\ServiceOrder>|(Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\ServiceOrder>).","line":1142,"ignorable":true},{"message":"Property In2plane\\OperationsBundle\\Document\\AircraftMovement::$notes ((Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\CoreBundle\\Document\\Note>)|null) does not accept array<int, In2plane\\CoreBundle\\Document\\Note>|(Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\CoreBundle\\Document\\Note>).","line":1250,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/ExportableDocument.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Document\\ExportableDocument::getUploads() should return array<In2plane\\OperationsBundle\\Document\\Upload>|Doctrine\\Common\\Collections\\ArrayCollection but returns Doctrine\\Common\\Collections\\Collection&iterable<In2plane\\OperationsBundle\\Document\\Upload>.","line":38,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/Flags/Flag.php":{"errors":3,"messages":[{"message":"Property In2plane\\OperationsBundle\\Document\\Flags\\Flag::$createdAt is never written, only read.","line":141,"ignorable":true,"tip":"See: https://phpstan.org/developing-extensions/always-read-written-properties"},{"message":"Property In2plane\\OperationsBundle\\Document\\Flags\\Flag::$updatedAt is never written, only read.","line":147,"ignorable":true,"tip":"See: https://phpstan.org/developing-extensions/always-read-written-properties"},{"message":"Property In2plane\\OperationsBundle\\Document\\Flags\\Flag::$companies ((Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\CoreBundle\\Document\\Company>)|null) does not accept array<int, In2plane\\CoreBundle\\Document\\Company>|(Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\CoreBundle\\Document\\Company>).","line":339,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/FuelFlow.php":{"errors":3,"messages":[{"message":"Property In2plane\\OperationsBundle\\Document\\FuelFlow::$flowChanges ((Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\FuelFlow\\FlowChange>)|null) does not accept array<int, In2plane\\OperationsBundle\\Document\\FuelFlow\\FlowChange>|(Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\FuelFlow\\FlowChange>).","line":325,"ignorable":true},{"message":"Property In2plane\\OperationsBundle\\Document\\FuelFlow::$temperatures ((Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\FuelFlow\\Temperature>)|null) does not accept array<int, In2plane\\OperationsBundle\\Document\\FuelFlow\\Temperature>|(Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\FuelFlow\\Temperature>).","line":399,"ignorable":true},{"message":"Property In2plane\\OperationsBundle\\Document\\FuelFlow::$flowChanges ((Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\FuelFlow\\FlowChange>)|null) does not accept array<int, In2plane\\OperationsBundle\\Document\\FuelFlow\\FlowChange>|(Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\FuelFlow\\FlowChange>).","line":572,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/FuelFlow/FlowChange.php":{"errors":3,"messages":[{"message":"Call to function is_null() with float will always evaluate to false.","line":145,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":165,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":185,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/FuelFlow/Temperature.php":{"errors":1,"messages":[{"message":"Call to function is_null() with float will always evaluate to false.","line":95,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/FuelOrder.php":{"errors":4,"messages":[{"message":"Call to function is_null() with float will always evaluate to false.","line":2517,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":2541,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Else branch is unreachable because previous condition is always true.","line":3041,"ignorable":true},{"message":"Else branch is unreachable because previous condition is always true.","line":3078,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/FuelOrder/AircraftMeasurement/FuelQuantity.php":{"errors":1,"messages":[{"message":"Call to function is_null() with float will always evaluate to false.","line":435,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/FuelOrder/DensityMeasurement.php":{"errors":4,"messages":[{"message":"Call to function is_null() with float will always evaluate to false.","line":134,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":156,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":178,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":200,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/FuelOrder/Equipment.php":{"errors":1,"messages":[{"message":"Expression in empty() is not falsy.","line":476,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/FuelOrder/MeterMeasurement.php":{"errors":9,"messages":[{"message":"Call to function is_null() with float will always evaluate to false.","line":505,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":527,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":549,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":650,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":694,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":732,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":788,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":811,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":1029,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/FuelOrder/StorageTankMeasurement.php":{"errors":1,"messages":[{"message":"Call to function is_null() with float will always evaluate to false.","line":131,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/FuelOrder/TankMeasurement.php":{"errors":3,"messages":[{"message":"Call to function is_null() with float will always evaluate to false.","line":198,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":220,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":242,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/FuelOrder/VehicleMeasurement.php":{"errors":6,"messages":[{"message":"Call to function is_null() with float will always evaluate to false.","line":191,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":213,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":235,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":257,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":302,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":324,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/Gantt.php":{"errors":1,"messages":[{"message":"Property In2plane\\OperationsBundle\\Document\\Gantt::$swimLanes ((Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\SwimLane>)|null) does not accept array<int, In2plane\\OperationsBundle\\Document\\SwimLane>|(Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\SwimLane>).","line":157,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/IataInvoice/CurrencyFrom.php":{"errors":1,"messages":[{"message":"Property In2plane\\OperationsBundle\\Document\\IataInvoice\\CurrencyFrom::$factorFrom is never read, only written.","line":20,"ignorable":true,"tip":"See: https://phpstan.org/developing-extensions/always-read-written-properties"}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/IataInvoice/CurrencyTo.php":{"errors":1,"messages":[{"message":"Property In2plane\\OperationsBundle\\Document\\IataInvoice\\CurrencyTo::$factorTo is never read, only written.","line":20,"ignorable":true,"tip":"See: https://phpstan.org/developing-extensions/always-read-written-properties"}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/IataInvoice/InvoiceHeader.php":{"errors":1,"messages":[{"message":"Property In2plane\\OperationsBundle\\Document\\IataInvoice\\InvoiceHeader::$invoiceTotalAmountLocal is never read, only written.","line":250,"ignorable":true,"tip":"See: https://phpstan.org/developing-extensions/always-read-written-properties"}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/IataInvoice/InvoiceReferenceValue.php":{"errors":1,"messages":[{"message":"Property In2plane\\OperationsBundle\\Document\\IataInvoice\\InvoiceReferenceValue::$invoiceReferenceType is never read, only written.","line":21,"ignorable":true,"tip":"See: https://phpstan.org/developing-extensions/always-read-written-properties"}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/IataInvoice/InvoiceType.php":{"errors":2,"messages":[{"message":"Property In2plane\\OperationsBundle\\Document\\IataInvoice\\InvoiceType::$invoiceTransactionType is never read, only written.","line":20,"ignorable":true,"tip":"See: https://phpstan.org/developing-extensions/always-read-written-properties"},{"message":"Property In2plane\\OperationsBundle\\Document\\IataInvoice\\InvoiceType::$invoiceTypeValue is never read, only written.","line":31,"ignorable":true,"tip":"See: https://phpstan.org/developing-extensions/always-read-written-properties"}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/IataInvoice/ItemReferenceLocalDate.php":{"errors":1,"messages":[{"message":"Property In2plane\\OperationsBundle\\Document\\IataInvoice\\ItemReferenceLocalDate::$itemReferenceDateTypes is never read, only written.","line":22,"ignorable":true,"tip":"See: https://phpstan.org/developing-extensions/always-read-written-properties"}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/IataInvoice/ItemTransportation.php":{"errors":1,"messages":[{"message":"Property In2plane\\OperationsBundle\\Document\\IataInvoice\\ItemTransportation::$itemTransportationType is never read, only written.","line":23,"ignorable":true,"tip":"See: https://phpstan.org/developing-extensions/always-read-written-properties"}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/IataInvoice/SubItemProductId.php":{"errors":1,"messages":[{"message":"Property In2plane\\OperationsBundle\\Document\\IataInvoice\\SubItemProductId::$subItemProductIdQualifierValue is never read, only written.","line":24,"ignorable":true,"tip":"See: https://phpstan.org/developing-extensions/always-read-written-properties"}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/MandatoryNoteHistory.php":{"errors":1,"messages":[{"message":"Property In2plane\\OperationsBundle\\Document\\MandatoryNoteHistory::$acknowledgements ((Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\Acknowledgement>)|null) does not accept array<int, In2plane\\OperationsBundle\\Document\\Acknowledgement>|(Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\Acknowledgement>).","line":147,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/ServiceOrder.php":{"errors":13,"messages":[{"message":"Property In2plane\\OperationsBundle\\Document\\ServiceOrder::$allocations ((Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\FuelOrder\\Allocation>)|null) does not accept array<int, In2plane\\OperationsBundle\\Document\\FuelOrder\\Allocation>|(Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\FuelOrder\\Allocation>).","line":4188,"ignorable":true},{"message":"Property In2plane\\OperationsBundle\\Document\\ServiceOrder::$equipment ((Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\FuelOrder\\Equipment>)|null) does not accept array<int, In2plane\\OperationsBundle\\Document\\FuelOrder\\Equipment>|(Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\FuelOrder\\Equipment>).","line":4421,"ignorable":true},{"message":"Property In2plane\\OperationsBundle\\Document\\ServiceOrder::$equipment ((Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\FuelOrder\\Equipment>)|null) does not accept array<In2plane\\OperationsBundle\\Document\\FuelOrder\\Equipment>|(Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\FuelOrder\\Equipment>).","line":4460,"ignorable":true},{"message":"Property In2plane\\OperationsBundle\\Document\\ServiceOrder::$incidents ((Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\FuelOrder\\Incident>)|null) does not accept array<int, In2plane\\OperationsBundle\\Document\\FuelOrder\\Incident>|(Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\FuelOrder\\Incident>).","line":4473,"ignorable":true},{"message":"Property In2plane\\OperationsBundle\\Document\\ServiceOrder::$notes ((Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\CoreBundle\\Document\\Note>)|null) does not accept array<int, In2plane\\CoreBundle\\Document\\Note>|(Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\CoreBundle\\Document\\Note>).","line":4570,"ignorable":true},{"message":"Property In2plane\\OperationsBundle\\Document\\ServiceOrder::$auditHistory ((Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\AuditBundle\\Document\\Operations\\ServiceOrderBaseAction>)|null) does not accept array<In2plane\\AuditBundle\\Document\\Operations\\ServiceOrderBaseAction>|(Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\AuditBundle\\Document\\Operations\\ServiceOrderBaseAction>).","line":4732,"ignorable":true},{"message":"Comparison operation \"<\" between int<min, -1> and 0 is always true.","line":7183,"ignorable":true},{"message":"Else branch is unreachable because ternary operator condition is always true.","line":7183,"ignorable":true},{"message":"Comparison operation \"<\" between int<min, -1> and 0 is always true.","line":7241,"ignorable":true},{"message":"Else branch is unreachable because ternary operator condition is always true.","line":7241,"ignorable":true},{"message":"Comparison operation \"<\" between int<min, -1> and 0 is always true.","line":7300,"ignorable":true},{"message":"Else branch is unreachable because ternary operator condition is always true.","line":7300,"ignorable":true},{"message":"Property In2plane\\OperationsBundle\\Document\\ServiceOrder::$dataIntegrationTransmissions ((Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\DataIntegration\\DataIntegrationTransmission>)|null) does not accept array<int, In2plane\\OperationsBundle\\Document\\DataIntegration\\DataIntegrationTransmission>|(Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\DataIntegration\\DataIntegrationTransmission>).","line":8160,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/ServicedFlight.php":{"errors":1,"messages":[{"message":"Call to function is_null() with float will always evaluate to false.","line":800,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/Settings/IRSSettings.php":{"errors":1,"messages":[{"message":"Call to function is_null() with In2plane\\BulkStorageBundle\\Document\\FuelOwnerInterface|In2plane\\CoreBundle\\Document\\Customer will always evaluate to false.","line":930,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/Settings/OperationsSettings.php":{"errors":5,"messages":[{"message":"Property In2plane\\OperationsBundle\\Document\\Settings\\OperationsSettings::$reasonList ((Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\Settings\\Reason>)|null) does not accept array<int, In2plane\\OperationsBundle\\Document\\Settings\\Reason>|(Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\Settings\\Reason>).","line":3002,"ignorable":true},{"message":"Property In2plane\\OperationsBundle\\Document\\Settings\\OperationsSettings::$creditReasonList ((Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\ServiceOrder\\CreditReason>)|null) does not accept array<int, In2plane\\OperationsBundle\\Document\\ServiceOrder\\CreditReason>|(Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\ServiceOrder\\CreditReason>).","line":3052,"ignorable":true},{"message":"Property In2plane\\OperationsBundle\\Document\\Settings\\OperationsSettings::$serviceOrderTimingList ((Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\Settings\\ServiceOrderTiming>)|null) does not accept array<int, In2plane\\OperationsBundle\\Document\\Settings\\ServiceOrderTiming>|(Doctrine\\Common\\Collections\\ArrayCollection&iterable<In2plane\\OperationsBundle\\Document\\Settings\\ServiceOrderTiming>).","line":4864,"ignorable":true},{"message":"Variable $callsigns in empty() always exists and is not falsy.","line":6099,"ignorable":true},{"message":"Variable $registrations in empty() always exists and is not falsy.","line":6118,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Document/WaterOrder.php":{"errors":1,"messages":[{"message":"Call to function is_null() with float will always evaluate to false.","line":91,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/EventListener/AircraftMovementListener.php":{"errors":2,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Flags\\Flag>::findByCompanyAndUsage().","line":186,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrder>::findByAircraftMovementId().","line":223,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Factory/AircraftFactory.php":{"errors":4,"messages":[{"message":"Method In2plane\\OperationsBundle\\Factory\\AircraftFactory::getAircraftRepository() should return In2plane\\OperationsBundle\\Repository\\AircraftRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Aircraft>.","line":150,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\AircraftFactory::getAirlineRepository() should return In2plane\\CoreBundle\\Repository\\AirlineRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airline>.","line":158,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\AircraftModel>::findOneByIataCode().","line":190,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\AircraftVariant>::findOneByCodeOrName().","line":313,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Factory/AircraftMovementFactory.php":{"errors":4,"messages":[{"message":"Method In2plane\\OperationsBundle\\Factory\\AircraftMovementFactory::getAircraftMovementRepository() should return In2plane\\OperationsBundle\\Repository\\AircraftMovementRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\AircraftMovement>.","line":1036,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\AircraftMovementFactory::getFlightRepository() should return In2plane\\OperationsBundle\\Repository\\FlightRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Flight>.","line":1044,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\AircraftMovementFactory::getRuleRepository() should return In2plane\\RuleBundle\\Repository\\RuleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\RuleBundle\\Document\\Rule>.","line":1052,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\AircraftMovementFactory::getServiceOrderRepository() should return In2plane\\OperationsBundle\\Repository\\ServiceOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrder>.","line":1124,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Factory/BaseOrderFactory.php":{"errors":2,"messages":[{"message":"Method In2plane\\OperationsBundle\\Factory\\BaseOrderFactory::getVehicleRepository() should return In2plane\\CoreBundle\\Repository\\VehicleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>.","line":177,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\BaseOrderFactory::getServiceOrderRepository() should return In2plane\\OperationsBundle\\Repository\\ServiceOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrder>.","line":182,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Factory/CloseoutFactory.php":{"errors":2,"messages":[{"message":"Method In2plane\\OperationsBundle\\Factory\\CloseoutFactory::getCloseoutRepository() should return In2plane\\OperationsBundle\\Repository\\CloseoutRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Closeout>.","line":116,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\CloseoutFactory::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":124,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Factory/FlightFactory.php":{"errors":3,"messages":[{"message":"Right side of && is always true.","line":475,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\FlightFactory::getAirportRepository() should return In2plane\\CoreBundle\\Repository\\AirportRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airport>.","line":1190,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\FlightFactory::getFlightRepository() should return In2plane\\OperationsBundle\\Repository\\FlightRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Flight>.","line":1195,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Factory/FuelOrderFactory.php":{"errors":6,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Flags\\Flag>::findByCompanyAndUsage().","line":1363,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Customer>::findOneByTypeObject().","line":2060,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\FuelOrderFactory::getFuelOrderRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":2799,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\FuelOrderFactory::getServiceOrderRepository() should return In2plane\\OperationsBundle\\Repository\\ServiceOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrder>.","line":2804,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\FuelOrderFactory::getSalesOrderRepository() should return In2plane\\OperationsBundle\\Repository\\SalesOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\SalesOrder>.","line":2809,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\FuelOrderFactory::getFuelSupplierContractRepository() should return In2plane\\OperationsBundle\\Repository\\FuelSupplierContractRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplierContract>.","line":2814,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Factory/FuelSupplierFactory.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Factory\\FuelSupplierFactory::getFuelSupplierRepository() should return In2plane\\OperationsBundle\\Repository\\FuelSupplierRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>.","line":94,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Factory/ReasonFactory.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Factory\\ReasonFactory::getReasonRepository() should return In2plane\\OperationsBundle\\Repository\\ReasonRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\Reason>.","line":36,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Factory/SalesOrderFactory.php":{"errors":6,"messages":[{"message":"Method In2plane\\OperationsBundle\\Factory\\SalesOrderFactory::getSalesOrderRepository() should return In2plane\\OperationsBundle\\Repository\\SalesOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\SalesOrder>.","line":302,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\SalesOrderFactory::getFuelTypeRepository() should return In2plane\\CoreBundle\\Repository\\FuelTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FuelType>.","line":307,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\SalesOrderFactory::getAircraftVariantRepository() should return In2plane\\CoreBundle\\Repository\\AircraftVariantRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\AircraftVariant>.","line":312,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\SalesOrderFactory::getCustomerRepository() should return In2plane\\CoreBundle\\Repository\\CustomerRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Customer>.","line":317,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\SalesOrderFactory::getFuelOrderRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":322,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\SalesOrderFactory::getUserRepository() should return In2plane\\CoreBundle\\Repository\\UserRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\User>.","line":327,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Factory/ServiceOrderFactory.php":{"errors":13,"messages":[{"message":"Method In2plane\\OperationsBundle\\Factory\\ServiceOrderFactory::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":731,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\ServiceOrderFactory::getFuelTypeRepository() should return In2plane\\CoreBundle\\Repository\\FuelTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FuelType>.","line":835,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\ServiceOrderFactory::getAircraftRepository() should return In2plane\\OperationsBundle\\Repository\\AircraftRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Aircraft>.","line":843,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\ServiceOrderFactory::getAircraftModelRepository() should return In2plane\\CoreBundle\\Repository\\AircraftModelRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\AircraftModel>.","line":851,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\ServiceOrderFactory::getAircraftMovementRepository() should return In2plane\\OperationsBundle\\Repository\\AircraftMovementRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\AircraftMovement>.","line":859,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\ServiceOrderFactory::getAircraftVariantRepository() should return In2plane\\CoreBundle\\Repository\\AircraftVariantRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\AircraftVariant>.","line":867,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\ServiceOrderFactory::getAirlineRepository() should return In2plane\\CoreBundle\\Repository\\AirlineRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airline>.","line":875,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\ServiceOrderFactory::getAirportRepository() should return In2plane\\CoreBundle\\Repository\\AirportRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airport>.","line":883,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\ServiceOrderFactory::getFlightRepository() should return In2plane\\OperationsBundle\\Repository\\FlightRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Flight>.","line":891,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\ServiceOrderFactory::getServicedFlightRepository() should return In2plane\\OperationsBundle\\Repository\\ServicedFlightRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServicedFlight>.","line":899,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\ServiceOrderFactory::getCoreSettingsRepository() should return In2plane\\CoreBundle\\Repository\\CoreSettingsRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Settings\\CoreSettings>.","line":907,"ignorable":true},{"message":"Left side of && is always true.","line":969,"ignorable":true},{"message":"Left side of && is always true.","line":1017,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Factory/ServicedFlights/AbstractServicedFlightsFactory.php":{"errors":9,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\RuleBundle\\Document\\Rule>::findActiveRulesForCompanyAndType().","line":175,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airport>::findOneByIataCode().","line":314,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airport>::findOneByIataCode().","line":318,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\ServicedFlights\\AbstractServicedFlightsFactory::getAirlineRepository() should return In2plane\\CoreBundle\\Repository\\AirlineRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airline>.","line":493,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\ServicedFlights\\AbstractServicedFlightsFactory::getAirportRepository() should return In2plane\\CoreBundle\\Repository\\AirportRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airport>.","line":501,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\ServicedFlights\\AbstractServicedFlightsFactory::getAircraftVariantRepository() should return In2plane\\CoreBundle\\Repository\\AircraftVariantRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\AircraftVariant>.","line":509,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\ServicedFlights\\AbstractServicedFlightsFactory::getServicedFlightRepository() should return In2plane\\OperationsBundle\\Repository\\ServicedFlightRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServicedFlight>.","line":517,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\ServicedFlights\\AbstractServicedFlightsFactory::getFuelSupplierContractRepository() should return In2plane\\OperationsBundle\\Repository\\FuelSupplierContractRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplierContract>.","line":522,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\ServicedFlights\\AbstractServicedFlightsFactory::getCustomerRepository() should return In2plane\\CoreBundle\\Repository\\CustomerRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Customer>.","line":527,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Factory/SpanishCustomsDailyLedgerFactory.php":{"errors":4,"messages":[{"message":"Method In2plane\\OperationsBundle\\Factory\\SpanishCustomsDailyLedgerFactory::getCloseoutRepository() should return In2plane\\OperationsBundle\\Repository\\CloseoutRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Closeout>.","line":328,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\SpanishCustomsDailyLedgerFactory::getFuelTypeRepository() should return In2plane\\CoreBundle\\Repository\\FuelTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FuelType>.","line":336,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\SpanishCustomsDailyLedgerFactory::getSpanishCustomsDailyLedgerRepository() should return In2plane\\OperationsBundle\\Repository\\SpanishCustomsDailyLedgerRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\SpanishCustomsDailyLedger>.","line":344,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Factory\\SpanishCustomsDailyLedgerFactory::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":352,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/APISalesOrderType.php":{"errors":2,"messages":[{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\APISalesOrderType::getAirportRepository() should return In2plane\\CoreBundle\\Repository\\AirportRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airport>.","line":294,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\APISalesOrderType::getFuelTypeRepository() should return In2plane\\CoreBundle\\Repository\\FuelTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FuelType>.","line":299,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/AbsenceOrderType.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\AbsenceOrderType::getTerminalRepository() should return In2plane\\CoreBundle\\Repository\\TerminalRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Terminal>.","line":74,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/AircraftMovementType.php":{"errors":1,"messages":[{"message":"Expression in empty() is not falsy.","line":386,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/CustomerServiceOrders/CateringType.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrderSupplier>::findByType().","line":36,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/CustomerServiceOrders/CollectLaundryType.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrderSupplier>::findByType().","line":39,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/CustomerServiceOrders/ReturnLaundryType.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrderSupplier>::findByType().","line":44,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/CustomerServiceOrders/ServiceOrderProductItemType.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrderProduct>::findByType().","line":55,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/CustomerServiceOrders/TransportType.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrderSupplier>::findByType().","line":55,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/DraftCertificatesTableFilterType.php":{"errors":2,"messages":[{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\DraftCertificatesTableFilterType::getVehicleRepository() should return In2plane\\CoreBundle\\Repository\\VehicleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>.","line":117,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\DraftCertificatesTableFilterType::getUserRepository() should return In2plane\\CoreBundle\\Repository\\UserRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\User>.","line":122,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/EquipmentOperationalType.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\EquipmentOperationalType::getPitRepository() should return In2plane\\CoreBundle\\Repository\\PitRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Pit>.","line":106,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/EquipmentType.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\UserInactiveHistory>::findByUserIdsArray().","line":91,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/FuelOrderOperationalType.php":{"errors":3,"messages":[{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\FuelOrderOperationalType::getPitRepository() should return In2plane\\CoreBundle\\Repository\\PitRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Pit>.","line":176,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\FuelOrderOperationalType::getStandRepository() should return In2plane\\CoreBundle\\Repository\\StandRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Stand>.","line":184,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\FuelOrderOperationalType::getTerminalRepository() should return In2plane\\CoreBundle\\Repository\\TerminalRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Terminal>.","line":192,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/FuelOrderType.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\FuelOrderType::getSalesOrderRepository() should return In2plane\\OperationsBundle\\Repository\\SalesOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\SalesOrder>.","line":1806,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/FuelSupplierGroupType.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\FuelSupplierGroupType::getFuelSupplierGroupRepository() should return In2plane\\OperationsBundle\\Repository\\FuelSupplierGroupRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplierGroup>.","line":87,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/GanttOperatorSwimLaneType.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\GanttOperatorSwimLaneType::getBlockPrefix() should return string but returns null.","line":42,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/GanttOperatorsShiftType.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\GanttOperatorsShiftType::getBlockPrefix() should return string but returns null.","line":42,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/GanttOperatorsShiftsType.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\GanttOperatorsShiftsType::getBlockPrefix() should return string but returns null.","line":36,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/InboundEmail/EmailOrderType.php":{"errors":3,"messages":[{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\InboundEmail\\EmailOrderType::getAircraftRepository() should return In2plane\\OperationsBundle\\Repository\\AircraftRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Aircraft>.","line":255,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\InboundEmail\\EmailOrderType::getAirportRepository() should return In2plane\\CoreBundle\\Repository\\AirportRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airport>.","line":260,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\InboundEmail\\EmailOrderType::getStandRepository() should return In2plane\\CoreBundle\\Repository\\StandRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Stand>.","line":265,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/ManualFuelOrderType.php":{"errors":2,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\StorageTank>::findChildren().","line":103,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\ManualFuelOrderType::getVehicleRepository() should return In2plane\\CoreBundle\\Repository\\VehicleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>.","line":642,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/Operations/FuelOrderTableFilterType.php":{"errors":2,"messages":[{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\Operations\\FuelOrderTableFilterType::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":469,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\Operations\\FuelOrderTableFilterType::getAirportRepository() should return In2plane\\CoreBundle\\Repository\\AirportRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airport>.","line":477,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/Rest/EditFlagType.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\Rest\\EditFlagType::getFlagRepository() should return In2plane\\OperationsBundle\\Repository\\FlagRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Flags\\Flag>.","line":106,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/Rest/MandatoryNoteType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\OperationsBundle\\Form\\Type\\Rest\\MandatoryNoteType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":42,"ignorable":true},{"message":"Return type (null) of method In2plane\\OperationsBundle\\Form\\Type\\Rest\\MandatoryNoteType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":42,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/Rest/UpdateAircraftStandType.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\Rest\\UpdateAircraftStandType::getStandRepository() should return In2plane\\CoreBundle\\Repository\\StandRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Stand>.","line":74,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/SalesOrderFilterType.php":{"errors":6,"messages":[{"message":"Return type (null) of method In2plane\\OperationsBundle\\Form\\Type\\SalesOrderFilterType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":259,"ignorable":true},{"message":"Return type (null) of method In2plane\\OperationsBundle\\Form\\Type\\SalesOrderFilterType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":259,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\SalesOrderFilterType::getFuelTypeRepository() should return In2plane\\CoreBundle\\Repository\\FuelTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FuelType>.","line":266,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\SalesOrderFilterType::getAircraftRepository() should return In2plane\\OperationsBundle\\Repository\\AircraftRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Aircraft>.","line":271,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\SalesOrderFilterType::getAirportRepository() should return In2plane\\CoreBundle\\Repository\\AirportRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airport>.","line":276,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\SalesOrderFilterType::getCustomerRepository() should return In2plane\\CoreBundle\\Repository\\CustomerRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Customer>.","line":281,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/SalesOrderType.php":{"errors":5,"messages":[{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\SalesOrderType::getFuelTypeRepository() should return In2plane\\CoreBundle\\Repository\\FuelTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FuelType>.","line":369,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\SalesOrderType::getAircraftRepository() should return In2plane\\OperationsBundle\\Repository\\AircraftRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Aircraft>.","line":374,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\SalesOrderType::getAirportRepository() should return In2plane\\CoreBundle\\Repository\\AirportRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airport>.","line":379,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\SalesOrderType::getCustomerRepository() should return In2plane\\CoreBundle\\Repository\\CustomerRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Customer>.","line":384,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\SalesOrderType::getAirlineRepository() should return In2plane\\CoreBundle\\Repository\\AirlineRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airline>.","line":389,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/ScheduleBreakType.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>::findAllAllocations().","line":69,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/ServiceOrderCreditReasonType.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrder\\CreditReason>::findByCompanyAndStatus().","line":32,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/ServiceOrderType.php":{"errors":2,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Terminal>::findByAirport().","line":369,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Stand>::findByAirport().","line":388,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/Settings/GeneralSettingsType.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\Settings\\GeneralSettingsType::getAirlineRepository() should return In2plane\\CoreBundle\\Repository\\AirlineRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airline>.","line":337,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/ThirdPartyIn2PlaneAgent/FlightFormType.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\ThirdPartyIn2PlaneAgent\\FlightFormType::getAirportRepository() should return In2plane\\CoreBundle\\Repository\\AirportRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airport>.","line":75,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/ThirdPartyIn2PlaneAgent/FuelOrderFormType.php":{"errors":2,"messages":[{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\ThirdPartyIn2PlaneAgent\\FuelOrderFormType::getFuelSupplierRepository() should return In2plane\\OperationsBundle\\Repository\\FuelSupplierRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>.","line":106,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\ThirdPartyIn2PlaneAgent\\FuelOrderFormType::getFuelTypeRepository() should return In2plane\\CoreBundle\\Repository\\FuelTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FuelType>.","line":114,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/UpdateStandLocationType.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Form\\Type\\UpdateStandLocationType::getStandRepository() should return In2plane\\CoreBundle\\Repository\\StandRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Stand>.","line":53,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/eHandshake/EhandshakeOrdersType.php":{"errors":2,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Aircraft>::findOneByRegistration().","line":46,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airport>::findOneByCode().","line":66,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Form/Type/eHandshake/NonEhandshakeFuelOrderSearchType.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Aircraft>::findOneByRegistration().","line":85,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Helper/OperationsControllerHelper.php (in context of class In2plane\\CoreBundle\\Controller\\DocumentController)":{"errors":3,"messages":[{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getSwimLaneRepository() should return In2plane\\OperationsBundle\\Repository\\SwimLaneRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\SwimLane>.","line":79,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getGanttRepository() should return In2plane\\OperationsBundle\\Repository\\GanttRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Gantt>.","line":87,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\DocumentController::getGanttRegenerationRepository() should return In2plane\\OperationsBundle\\Repository\\GanttRegenerationRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\GanttRegeneration>.","line":95,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Helper/OperationsControllerHelper.php (in context of class In2plane\\CoreBundle\\Controller\\FOSRestDocumentController)":{"errors":3,"messages":[{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getSwimLaneRepository() should return In2plane\\OperationsBundle\\Repository\\SwimLaneRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\SwimLane>.","line":79,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getGanttRepository() should return In2plane\\OperationsBundle\\Repository\\GanttRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Gantt>.","line":87,"ignorable":true},{"message":"Method In2plane\\CoreBundle\\Controller\\FOSRestDocumentController::getGanttRegenerationRepository() should return In2plane\\OperationsBundle\\Repository\\GanttRegenerationRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\GanttRegeneration>.","line":95,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Helper/ServiceOrderHelper.php":{"errors":3,"messages":[{"message":"Method In2plane\\OperationsBundle\\Helper\\ServiceOrderHelper::getServiceTypeSettingsRepository() should return In2plane\\OperationsBundle\\Repository\\ServiceTypeSettingsRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\ServiceTypeSettings>.","line":547,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrder\\ReturnOrderActivitySchedule>::findOneByAircraftMovementAndServiceOrderId().","line":679,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Helper\\ServiceOrderHelper::getAircraftMovementRepository() should return In2plane\\OperationsBundle\\Repository\\AircraftMovementRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\AircraftMovement>.","line":752,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/MessageQueue/Processor/AidxFlightLegProcessor.php":{"errors":9,"messages":[{"message":"Offset 5 does not exist on array{string, string, string, DateTime, In2plane\\OperationsBundle\\Model\\Iata\\Common\\General\\Airport}.","line":128,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\MessageQueue\\Processor\\AidxFlightLegProcessor::getAirlineRepo() should return In2plane\\CoreBundle\\Repository\\AirlineRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airline>.","line":1044,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\MessageQueue\\Processor\\AidxFlightLegProcessor::getAirportRepo() should return In2plane\\CoreBundle\\Repository\\AirportRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airport>.","line":1049,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\MessageQueue\\Processor\\AidxFlightLegProcessor::getCompanyRepo() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":1054,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\MessageQueue\\Processor\\AidxFlightLegProcessor::getFuelOrderRepo() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":1059,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\MessageQueue\\Processor\\AidxFlightLegProcessor::getServicedFlightRepo() should return In2plane\\OperationsBundle\\Repository\\ServicedFlightRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServicedFlight>.","line":1064,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\MessageQueue\\Processor\\AidxFlightLegProcessor::getFuelSupplierContractRepo() should return In2plane\\OperationsBundle\\Repository\\FuelSupplierContractRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplierContract>.","line":1069,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\MessageQueue\\Processor\\AidxFlightLegProcessor::getNonServicedFlightRepo() should return In2plane\\OperationsBundle\\Repository\\NonServicedFlightRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\NonServicedFlight>.","line":1074,"ignorable":true},{"message":"Offset 5 does not exist on array{string, string, string, DateTime, In2plane\\OperationsBundle\\Model\\Iata\\Common\\General\\Airport}.","line":1247,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/MessageQueue/Processor/AircraftMovementProcessor.php":{"errors":3,"messages":[{"message":"Method In2plane\\OperationsBundle\\MessageQueue\\Processor\\AircraftMovementProcessor::getAircraftMovementRepository() should return In2plane\\OperationsBundle\\Repository\\AircraftMovementRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\AircraftMovement>.","line":131,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\MessageQueue\\Processor\\AircraftMovementProcessor::getOrphanedFlightRepository() should return In2plane\\OperationsBundle\\Repository\\OrphanedFlightRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\OrphanedFlight>.","line":136,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\MessageQueue\\Processor\\AircraftMovementProcessor::getFlightRepository() should return In2plane\\OperationsBundle\\Repository\\FlightRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Flight>.","line":141,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/MessageQueue/Processor/KLM/IncidentProcessor.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\MessageQueue\\Processor\\KLM\\IncidentProcessor::getServiceOrderRepository() should return In2plane\\OperationsBundle\\Repository\\ServiceOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrder>.","line":72,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/MessageQueue/Processor/KLM/ShiftProcessor.php":{"errors":3,"messages":[{"message":"Method In2plane\\OperationsBundle\\MessageQueue\\Processor\\KLM\\ShiftProcessor::getUserRepository() should return In2plane\\CoreBundle\\Repository\\UserRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\User>.","line":253,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\MessageQueue\\Processor\\KLM\\ShiftProcessor::getShiftRepository() should return In2plane\\OperationsBundle\\Repository\\ShiftRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Shift>.","line":258,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\MessageQueue\\Processor\\KLM\\ShiftProcessor::getServiceOrderRepository() should return In2plane\\OperationsBundle\\Repository\\ServiceOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrder>.","line":263,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/MessageQueue/Processor/KLM/TaskProcessor.php":{"errors":5,"messages":[{"message":"Method In2plane\\OperationsBundle\\MessageQueue\\Processor\\KLM\\TaskProcessor::getStandRepository() should return In2plane\\CoreBundle\\Repository\\StandRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Stand>.","line":1111,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\MessageQueue\\Processor\\KLM\\TaskProcessor::getFuelTypeRepository() should return In2plane\\CoreBundle\\Repository\\FuelTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FuelType>.","line":1116,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\MessageQueue\\Processor\\KLM\\TaskProcessor::getVehicleRepository() should return In2plane\\CoreBundle\\Repository\\VehicleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>.","line":1121,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\MessageQueue\\Processor\\KLM\\TaskProcessor::getFlightRepository() should return In2plane\\OperationsBundle\\Repository\\FlightRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Flight>.","line":1126,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\MessageQueue\\Processor\\KLM\\TaskProcessor::getFuelOrderRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":1131,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/MessageQueue/Processor/WFS/DataHandler/CustomerDataHandler.php":{"errors":1,"messages":[{"message":"Variable $company in empty() always exists and is not falsy.","line":76,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Model/DubaiFids/Arrival24hrs.php":{"errors":1,"messages":[{"message":"Expression in empty() is not falsy.","line":232,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Model/DubaiFids/Departure24hrs.php":{"errors":1,"messages":[{"message":"Expression in empty() is not falsy.","line":240,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Model/Klm/Fuel/Transaction/HeaderInfo.php":{"errors":3,"messages":[{"message":"Property In2plane\\OperationsBundle\\Model\\Klm\\Fuel\\Transaction\\HeaderInfo::$numberOfTransactions is never read, only written.","line":14,"ignorable":true,"tip":"See: https://phpstan.org/developing-extensions/always-read-written-properties"},{"message":"Property In2plane\\OperationsBundle\\Model\\Klm\\Fuel\\Transaction\\HeaderInfo::$sentDatetime is never read, only written.","line":21,"ignorable":true,"tip":"See: https://phpstan.org/developing-extensions/always-read-written-properties"},{"message":"Property In2plane\\OperationsBundle\\Model\\Klm\\Fuel\\Transaction\\HeaderInfo::$location is never read, only written.","line":28,"ignorable":true,"tip":"See: https://phpstan.org/developing-extensions/always-read-written-properties"}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Model/Klm/PilotSummaryAcknowledgement/FuelSummary.php":{"errors":1,"messages":[{"message":"PHPDoc type string|null of property In2plane\\OperationsBundle\\Model\\Klm\\PilotSummaryAcknowledgement\\FuelSummary::$receiptId is not covariant with PHPDoc type string of overridden property In2plane\\OperationsBundle\\Model\\Iata\\AidxFuelNotifRq\\FuelFlightLeg\\Fuel\\FuelSummary::$receiptId.","line":17,"ignorable":true,"tip":"You can fix 3rd party PHPDoc types with stub files:\n   <fg=cyan>https://phpstan.org/user-guide/stub-files</>"}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Repository/AircraftMovementRepository.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Aircraft>::findBySearchQuery().","line":409,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Repository/FlightRepository.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Repository\\FlightRepository::getFuelOrderRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":653,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Repository/FuelOrderRepository.php":{"errors":3,"messages":[{"message":"Variable $transactionTypes in empty() always exists and is not falsy.","line":117,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airline>::findOneByIataCode().","line":1359,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Flight>::findOneNextOutboundByAircraft().","line":1647,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Repository/FuelSupplierContractRepository.php":{"errors":1,"messages":[{"message":"Variable $fuelSuppliersIds in empty() always exists and is not falsy.","line":231,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Repository/SalesOrderRepository.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Repository\\SalesOrderRepository::getAirlineRepo() should return In2plane\\CoreBundle\\Repository\\AirlineRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airline>.","line":150,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Repository/ServiceOrderRepository.php":{"errors":10,"messages":[{"message":"Method In2plane\\OperationsBundle\\Repository\\ServiceOrderRepository::getAircraftRepo() should return In2plane\\OperationsBundle\\Repository\\AircraftRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Aircraft>.","line":91,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Repository\\ServiceOrderRepository::getAirlineRepo() should return In2plane\\CoreBundle\\Repository\\AirlineRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airline>.","line":99,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Repository\\ServiceOrderRepository::getAircraftMovementRepo() should return In2plane\\OperationsBundle\\Repository\\AircraftMovementRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\AircraftMovement>.","line":107,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Repository\\ServiceOrderRepository::getFlightRepo() should return In2plane\\OperationsBundle\\Repository\\FlightRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Flight>.","line":115,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Repository\\ServiceOrderRepository::getCustomerRepo() should return In2plane\\CoreBundle\\Repository\\CustomerRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Customer>.","line":123,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Repository\\ServiceOrderRepository::getStandRepo() should return In2plane\\CoreBundle\\Repository\\StandRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Stand>.","line":131,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Repository\\ServiceOrderRepository::getPitRepo() should return In2plane\\CoreBundle\\Repository\\PitRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Pit>.","line":139,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Repository\\ServiceOrderRepository::getPaymentCardRepo() should return In2plane\\OperationsBundle\\Repository\\PaymentCardRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\PaymentCard>.","line":147,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Repository\\ServiceOrderRepository::getCompanyRepo() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":155,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Repository\\ServiceOrderRepository::getVehicleRepo() should return In2plane\\CoreBundle\\Repository\\VehicleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>.","line":163,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Repository/ServicedFlightRepository.php":{"errors":2,"messages":[{"message":"If condition is always true.","line":89,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplierContract>::findExpired().","line":191,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/BillingTypeService.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Service\\BillingTypeService::getBillingTypeRepository() should return In2plane\\OperationsBundle\\Repository\\BillingTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\BillingType>.","line":60,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/BulkDeliveryExporter.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Service\\BulkDeliveryExporter::getServiceOrderRepository() should return In2plane\\OperationsBundle\\Repository\\ServiceOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrder>.","line":44,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/CloseOutService.php":{"errors":10,"messages":[{"message":"Offset 'vehicle' on array in empty() always exists and is not falsy.","line":398,"ignorable":true},{"message":"Offset 'rebillId' on array{mismatch: false} on left side of ?? does not exist.","line":518,"ignorable":true},{"message":"Offset 'rebillId' on array{mismatch: false} on left side of ?? does not exist.","line":809,"ignorable":true},{"message":"Offset 'customers' on array{customers: non-empty-array<int|string, array{customer: mixed, totalBowserToBowser: int<0, max>, totalBowserToTank: int<0, max>, totalBulkUps: int<0, max>, totalCancelledOrders: int<0, max>, totalMaintenance: int<0, max>, totalNSRs: int<0, max>, totalOrders: int<1, max>, ...}>, totals: array{totalBowserToBowser?: int<1, max>, totalBowserToTank?: int<1, max>, totalBulkUps?: int<1, max>, totalCancelledOrders?: int<1, max>, totalMaintenance: int<0, max>, totalNSRs: int<0, max>, totalOrders: int<1, max>, totalServicedOrders: int<0, max>, ...}} in isset() always exists and is not nullable.","line":1152,"ignorable":true},{"message":"Right side of && is always false.","line":1164,"ignorable":true},{"message":"Right side of && is always false.","line":1204,"ignorable":true},{"message":"Strict comparison using === between mixed and null will always evaluate to false.","line":1777,"ignorable":true},{"message":"Strict comparison using === between mixed and null will always evaluate to false.","line":1785,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Service\\CloseOutService::getFuelOrderRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":2795,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Service\\CloseOutService::getCloseoutRepository() should return In2plane\\OperationsBundle\\Repository\\CloseoutRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Closeout>.","line":3184,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/Closeout/DataIntegration/SpanishCustoms/SpanishCustomsWorker.php":{"errors":3,"messages":[{"message":"Method In2plane\\OperationsBundle\\Service\\Closeout\\DataIntegration\\SpanishCustoms\\SpanishCustomsWorker::getCompanyRepo() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":75,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Service\\Closeout\\DataIntegration\\SpanishCustoms\\SpanishCustomsWorker::getFuelOrderRepo() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":83,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Service\\Closeout\\DataIntegration\\SpanishCustoms\\SpanishCustomsWorker::getCloseoutRepo() should return In2plane\\OperationsBundle\\Repository\\CloseoutRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Closeout>.","line":91,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/CustomerService.php":{"errors":2,"messages":[{"message":"Method In2plane\\OperationsBundle\\Service\\CustomerService::getCustomerRepository() should return In2plane\\CoreBundle\\Repository\\CustomerRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Customer>.","line":183,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Service\\CustomerService::getTemporaryCustomerRepository() should return In2plane\\CoreBundle\\Repository\\TemporaryCustomerRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\TemporaryCustomer>.","line":412,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/Customs/ITA/OLIMDA/Document.php":{"errors":1,"messages":[{"message":"Binary operation \"*\" between string|null and float|null results in an error.","line":313,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/Customs/ItalianCustomsService.php":{"errors":2,"messages":[{"message":"Call to function is_null() with In2plane\\BulkStorageBundle\\Document\\DailyStock will always evaluate to false.","line":181,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with In2plane\\BulkStorageBundle\\Document\\AuditReconciliation will always evaluate to false.","line":192,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/EHandshake/EHandshakeService.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Service\\EHandshake\\EHandshakeService::getReasonRepository() should return In2plane\\OperationsBundle\\Repository\\ReasonRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\Reason>.","line":578,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/EHandshake/KerosService.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airport>::findOneByCode().","line":87,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/EHandshake/ShellService.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Service\\EHandshake\\ShellService::getFlightRepository() should return In2plane\\OperationsBundle\\Repository\\FlightRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Flight>.","line":82,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/EHandshake/ThirdPartyIn2PlaneAgentEHandshakeService.php":{"errors":2,"messages":[{"message":"Method In2plane\\OperationsBundle\\Service\\EHandshake\\ThirdPartyIn2PlaneAgentEHandshakeService::getFuelTypeRepository() should return In2plane\\CoreBundle\\Repository\\FuelTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FuelType>.","line":309,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Service\\EHandshake\\ThirdPartyIn2PlaneAgentEHandshakeService::getCustomerRepository() should return In2plane\\CoreBundle\\Repository\\CustomerRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Customer>.","line":317,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/EquipmentService.php":{"errors":2,"messages":[{"message":"Method In2plane\\OperationsBundle\\Service\\EquipmentService::getUserRepo() should return In2plane\\CoreBundle\\Repository\\UserRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\User>.","line":40,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Service\\EquipmentService::getVehicleRepo() should return In2plane\\CoreBundle\\Repository\\VehicleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>.","line":48,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/FlightService.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\RuleBundle\\Document\\Rule>::findActiveRulesForCompanyAndType().","line":42,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/FuelOrderQualityCheckService.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\QualityCheckDefinition>::findForFuelOrderEquipmentAndCompany().","line":29,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/FuelSupplierContractService.php":{"errors":2,"messages":[{"message":"Method In2plane\\OperationsBundle\\Service\\FuelSupplierContractService::getFuelSupplierContractRepository() should return In2plane\\OperationsBundle\\Repository\\FuelSupplierContractRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplierContract>.","line":98,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Service\\FuelSupplierContractService::getUserRepository() should return In2plane\\CoreBundle\\Repository\\UserRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\User>.","line":103,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/FuelSupplierDestinationCodesService.php":{"errors":3,"messages":[{"message":"Expression in empty() is not falsy.","line":51,"ignorable":true},{"message":"Strict comparison using === between false and true will always evaluate to false.","line":51,"ignorable":true},{"message":"Expression in empty() is not falsy.","line":69,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/FuelSupplierIdentifierService.php":{"errors":4,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\CompanyFuelSupplierIdentifier>::findOneByFuelSupplier().","line":40,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\CompanyFuelSupplierIdentifier>::findOneByNonSalesOrdersMode().","line":42,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\CompanyFuelSupplierIdentifier>::initialiseIdentifierForPeriod().","line":54,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\CompanyFuelSupplierIdentifier>::getAndIncrementIdentifierForPeriod().","line":58,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/FuelSupplierLocationCodeService.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplierLocationCode>::findOneByCompanyAndFuelSupplier().","line":63,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/GanttService.php":{"errors":4,"messages":[{"message":"Method In2plane\\OperationsBundle\\Service\\GanttService::getGanttRepository() should return In2plane\\OperationsBundle\\Repository\\GanttRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Gantt>.","line":625,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Service\\GanttService::getGanttRegenerationRepository() should return In2plane\\OperationsBundle\\Repository\\GanttRegenerationRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\GanttRegeneration>.","line":630,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Service\\GanttService::getFuelOrderRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":635,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Service\\GanttService::getShiftScheduleRepository() should return In2plane\\OperationsBundle\\Repository\\ShiftScheduleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ShiftSchedule>.","line":681,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/InboundEmail/EmailRequestService.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\InboundEmail\\InboundEmailOrderParserSettings>::findOneEnabledByTo().","line":157,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/JigDefuelService.php":{"errors":2,"messages":[{"message":"Method In2plane\\OperationsBundle\\Service\\JigDefuelService::getAirlineGroupRepository() should return In2plane\\OperationsBundle\\Repository\\AirlineGroupRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\AirlineGroup>.","line":127,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Service\\JigDefuelService::getFuelQuantityChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelQuantityChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelQuantityChange>.","line":137,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/Operations/BaseServiceOrderService.php":{"errors":2,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>::findActiveByCompany().","line":146,"ignorable":true},{"message":"Call to an undefined method Doctrine\\Persistence\\ObjectRepository::findAllAllocations().","line":543,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/Operations/BeltLoaderOrderService.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>::findActiveByRoleAndCompany().","line":17,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/Operations/BreakOrderService.php":{"errors":2,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>::findByCompany().","line":20,"ignorable":true},{"message":"If condition is always true.","line":67,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/Operations/FuelOrderService.php":{"errors":3,"messages":[{"message":"Method In2plane\\OperationsBundle\\Service\\Operations\\FuelOrderService::getRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":73,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Service\\Operations\\FuelOrderService::getFuelQuantityChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelQuantityChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelQuantityChange>.","line":784,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Closeout>::findOneByDate().","line":828,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/Operations/ManualFuelOrderService.php":{"errors":8,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>::findManualBySchedule().","line":669,"ignorable":true},{"message":"If condition is always false.","line":686,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelStockChange>::findByFuelOrderOrResaleOrder().","line":1198,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelQuantityChange>::findByFuelOrder().","line":1205,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelMovement>::findByFuelOrder().","line":1213,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Service\\Operations\\ManualFuelOrderService::getStorageTankRepository() should return In2plane\\BulkStorageBundle\\Repository\\StorageTankRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\StorageTank>.","line":1315,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Service\\Operations\\ManualFuelOrderService::getFuelSupplierContractRepository() should return In2plane\\OperationsBundle\\Repository\\FuelSupplierContractRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplierContract>.","line":1340,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Service\\Operations\\ManualFuelOrderService::getSalesOrderRepository() should return In2plane\\OperationsBundle\\Repository\\SalesOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\SalesOrder>.","line":1348,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/Operations/PushbackOrderService.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>::findActiveByRoleAndCompany().","line":18,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/Operations/ReturnToAircraftOrderService.php":{"errors":3,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\AircraftMovement>::findOneByAircraftIdAndEarlierActualTime().","line":182,"ignorable":true},{"message":"Variable $returnServiceTypes in empty() always exists and is not falsy.","line":390,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrder>::findPlannedByServiceTypesAndAircraft().","line":393,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/Operations/ServiceOrderLocationUpdateService.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Service\\Operations\\ServiceOrderLocationUpdateService::getAircraftMovementRepository() should return In2plane\\OperationsBundle\\Repository\\AircraftMovementRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\AircraftMovement>.","line":106,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/Operations/ServiceOrderService.php":{"errors":8,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\RuleBundle\\Document\\Rule>::findActiveRulesForCompanyAndType().","line":363,"ignorable":true},{"message":"Expression in empty() is not falsy.","line":653,"ignorable":true},{"message":"If condition is always true.","line":1142,"ignorable":true},{"message":"If condition is always true.","line":1193,"ignorable":true},{"message":"If condition is always true.","line":1249,"ignorable":true},{"message":"If condition is always true.","line":1312,"ignorable":true},{"message":"If condition is always true.","line":1361,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Service\\Operations\\ServiceOrderService::getAircraftMovementRepository() should return In2plane\\OperationsBundle\\Repository\\AircraftMovementRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\AircraftMovement>.","line":1885,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/Operations/ServiceOrderTable.php":{"errors":3,"messages":[{"message":"Method In2plane\\OperationsBundle\\Service\\Operations\\ServiceOrderTable::getServiceOrderRepo() should return In2plane\\OperationsBundle\\Repository\\ServiceOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrder>.","line":46,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Service\\Operations\\ServiceOrderTable::getAcRepo() should return In2plane\\OperationsBundle\\Repository\\AircraftRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Aircraft>.","line":54,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Service\\Operations\\ServiceOrderTable::getAirlineRepo() should return In2plane\\CoreBundle\\Repository\\AirlineRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airline>.","line":62,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/Operations/ShuttleBusOrderService.php":{"errors":1,"messages":[{"message":"If condition is always true.","line":181,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/OperatorForceLogoutService.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Service\\OperatorForceLogoutService::getTelemetrySessionRepository() should return In2plane\\TelemetryBundle\\Repository\\TelemetrySessionRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\TelemetryBundle\\Document\\TelemetrySession>.","line":63,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/PaymentDetailsService.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\PaymentCard>::findForCompany().","line":22,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/STAVolumeService.php":{"errors":1,"messages":[{"message":"Result of || is always false.","line":287,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/ServiceOrderExportService.php":{"errors":5,"messages":[{"message":"Expression on left side of ?? is not nullable.","line":432,"ignorable":true},{"message":"Expression on left side of ?? is not nullable.","line":433,"ignorable":true},{"message":"Expression on left side of ?? is not nullable.","line":435,"ignorable":true},{"message":"Expression on left side of ?? is not nullable.","line":439,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Service\\ServiceOrderExportService::getServiceOrderRepository() should return In2plane\\OperationsBundle\\Repository\\ServiceOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrder>.","line":644,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/ServiceOrderTimingService.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Service\\ServiceOrderTimingService::getServiceOrderTimingRepository() should return In2plane\\OperationsBundle\\Repository\\ServiceOrderTimingRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\ServiceOrderTiming>.","line":97,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/ServiceTypesService.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Service\\ServiceTypesService::getServiceTypeSettingsRepository() should return In2plane\\OperationsBundle\\Repository\\ServiceTypeSettingsRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Settings\\ServiceTypeSettings>.","line":162,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/ShiftService.php":{"errors":2,"messages":[{"message":"Method In2plane\\OperationsBundle\\Service\\ShiftService::getFuelOrderRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":344,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Service\\ShiftService::getScheduledBreakRepository() should return In2plane\\OperationsBundle\\Repository\\ScheduledBreakRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ScheduledBreak>.","line":349,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Service/SwimLaneService.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Service\\SwimLaneService::getSwimLaneRepository() should return In2plane\\OperationsBundle\\Repository\\SwimLaneRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\SwimLane>.","line":39,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Tools/AircraftTools.php":{"errors":2,"messages":[{"message":"Unreachable statement - code above always terminates.","line":266,"ignorable":true},{"message":"Unreachable statement - code above always terminates.","line":282,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Tools/FlightCodeTools.php":{"errors":2,"messages":[{"message":"Unreachable statement - code above always terminates.","line":24,"ignorable":true},{"message":"Unreachable statement - code above always terminates.","line":60,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Twig/ServiceOrderFlightExtension.php":{"errors":1,"messages":[{"message":"Right side of || is always false.","line":58,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Validator/Constraints/FuelOrderEquipmentDateCloseoutConstraintValidator.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Validator\\Constraints\\FuelOrderEquipmentDateCloseoutConstraintValidator::getCloseoutRepository() should return In2plane\\OperationsBundle\\Repository\\CloseoutRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Closeout>.","line":88,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Validator/Constraints/HasValidContractValidator.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplierContract>::findOneForFuelOrder().","line":43,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Validator/Constraints/ManualFuelOrderMatchingFuelTypesValidator.php":{"errors":1,"messages":[{"message":"Access to an undefined property Symfony\\Component\\Validator\\Constraint::$message.","line":31,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Validator/Constraints/ServiceOrderDateCloseoutValidator.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Validator\\Constraints\\ServiceOrderDateCloseoutValidator::getCloseoutRepository() should return In2plane\\OperationsBundle\\Repository\\CloseoutRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Closeout>.","line":62,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Worker/ActivateServicedFlightsWorker.php":{"errors":5,"messages":[{"message":"Method In2plane\\OperationsBundle\\Worker\\ActivateServicedFlightsWorker::getUserRepository() should return In2plane\\CoreBundle\\Repository\\UserRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\User>.","line":131,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Worker\\ActivateServicedFlightsWorker::getServicedFlightRepository() should return In2plane\\OperationsBundle\\Repository\\ServicedFlightRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServicedFlight>.","line":136,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Worker\\ActivateServicedFlightsWorker::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":141,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Worker\\ActivateServicedFlightsWorker::getDoopFileRepository() should return In2plane\\OperationsBundle\\Repository\\DOOPFileRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\DOOPFile>.","line":146,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Worker\\ActivateServicedFlightsWorker::getAirportScheduleRepository() should return In2plane\\OperationsBundle\\Repository\\AirportScheduleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\AirportSchedule>.","line":151,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Worker/CloseOutWorker.php":{"errors":4,"messages":[{"message":"Method In2plane\\OperationsBundle\\Worker\\CloseOutWorker::getFuelOrderRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":130,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Worker\\CloseOutWorker::getUserRepository() should return In2plane\\CoreBundle\\Repository\\UserRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\User>.","line":138,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Worker\\CloseOutWorker::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":146,"ignorable":true},{"message":"Variable $originalOrderDatesForReissues in empty() always exists and is not falsy.","line":327,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Worker/ExportBatchDeliveryTicketsWorker.php":{"errors":2,"messages":[{"message":"Method In2plane\\OperationsBundle\\Worker\\ExportBatchDeliveryTicketsWorker::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":111,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Worker\\ExportBatchDeliveryTicketsWorker::getUserRepository() should return In2plane\\CoreBundle\\Repository\\UserRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\User>.","line":116,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Worker/ExportServiceOrdersWorker.php":{"errors":2,"messages":[{"message":"Method In2plane\\OperationsBundle\\Worker\\ExportServiceOrdersWorker::getUserRepository() should return In2plane\\CoreBundle\\Repository\\UserRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\User>.","line":330,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Worker\\ExportServiceOrdersWorker::getServiceOrderRepository() should return In2plane\\OperationsBundle\\Repository\\ServiceOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrder>.","line":338,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Worker/ExportWorksheetWorker.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>::findOneByCompanyId().","line":106,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Worker/GanttCheckerWorker.php":{"errors":5,"messages":[{"message":"Method In2plane\\OperationsBundle\\Worker\\GanttCheckerWorker::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":331,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Worker\\GanttCheckerWorker::getUserRepository() should return In2plane\\CoreBundle\\Repository\\UserRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\User>.","line":339,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Worker\\GanttCheckerWorker::getShiftRepository() should return In2plane\\OperationsBundle\\Repository\\ShiftRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Shift>.","line":347,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Worker\\GanttCheckerWorker::getRuleRepository() should return In2plane\\RuleBundle\\Repository\\RuleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\RuleBundle\\Document\\Rule>.","line":355,"ignorable":true},{"message":"Method In2plane\\OperationsBundle\\Worker\\GanttCheckerWorker::getFuelOrderRepository() should return In2plane\\OperationsBundle\\Repository\\FuelOrderRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelOrder>.","line":363,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Worker/ProcessDOOPFileWorker.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Worker\\ProcessDOOPFileWorker::getServicedFlightRepository() should return In2plane\\OperationsBundle\\Repository\\ServicedFlightRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServicedFlight>.","line":147,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Worker/RetryWorker.php":{"errors":1,"messages":[{"message":"Unreachable statement - code above always terminates.","line":33,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Worker/SaveServiceOrderToApiWorker.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrder>::findOneAndMarkAsSent().","line":81,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Worker/UpdateReturnServiceOrderWorker.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ServiceOrder\\ReturnOrderActivitySchedule>::findOneByAircraftMovementAndServiceOrderId().","line":102,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Worker/UpdateServiceOrderLocationToApiWorker.php":{"errors":1,"messages":[{"message":"Method In2plane\\OperationsBundle\\Worker\\UpdateServiceOrderLocationToApiWorker::getAircraftMovementRepository() should return In2plane\\OperationsBundle\\Repository\\AircraftMovementRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\AircraftMovement>.","line":162,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/OperationsBundle/Worker/UpdateSpanishCustomsLedgerWorker.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Closeout>::findOneByDate().","line":74,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/ReportingBundle/Behat/ReportingContext.php":{"errors":1,"messages":[{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":508,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/ReportingBundle/Model/Report.php":{"errors":2,"messages":[{"message":"Result of && is always false.","line":723,"ignorable":true},{"message":"Strict comparison using === between mixed and '-' will always evaluate to false.","line":723,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/ReportingBundle/Service/Processor/DataTable/BulkStorageProcessor.php":{"errors":5,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>::findAvailableBowsersByCompany().","line":244,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>::findAvailableBowsersByCompany().","line":346,"ignorable":true},{"message":"Method In2plane\\ReportingBundle\\Service\\Processor\\DataTable\\BulkStorageProcessor::getFuelStockChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelStockChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelStockChange>.","line":3707,"ignorable":true},{"message":"Method In2plane\\ReportingBundle\\Service\\Processor\\DataTable\\BulkStorageProcessor::getFuelQuantityChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelQuantityChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelQuantityChange>.","line":3715,"ignorable":true},{"message":"Method In2plane\\ReportingBundle\\Service\\Processor\\DataTable\\BulkStorageProcessor::getStorageTankRepository() should return In2plane\\BulkStorageBundle\\Repository\\StorageTankRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\StorageTank>.","line":3723,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/ReportingBundle/Service/Processor/DataTable/FuelOrderProcessor.php":{"errors":9,"messages":[{"message":"Else branch is unreachable because ternary operator condition is always true.","line":1118,"ignorable":true},{"message":"Left side of && is always false.","line":1746,"ignorable":true},{"message":"Left side of && is always false.","line":1883,"ignorable":true},{"message":"Ternary operator condition is always true.","line":3295,"ignorable":true},{"message":"Left side of && is always true.","line":3814,"ignorable":true},{"message":"Left side of && is always true.","line":3822,"ignorable":true},{"message":"Left side of && is always true.","line":3830,"ignorable":true},{"message":"Ternary operator condition is always true.","line":4194,"ignorable":true},{"message":"Ternary operator condition is always true.","line":4368,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/ReportingBundle/Service/QueryFactory/AuditQueryFactory.php":{"errors":2,"messages":[{"message":"Method In2plane\\ReportingBundle\\Service\\QueryFactory\\AuditQueryFactory::getAuditLogRepo() should return In2plane\\AuditBundle\\Repository\\AuditLogRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\AuditBundle\\Document\\BaseAction>.","line":67,"ignorable":true},{"message":"Method In2plane\\ReportingBundle\\Service\\QueryFactory\\AuditQueryFactory::getCompanyRepository() should return In2plane\\CoreBundle\\Repository\\CompanyRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>.","line":146,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/ReportingBundle/Service/QueryFactory/BulkStorageQueryFactory.php":{"errors":21,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Company>::createQueryBuilderForAll().","line":208,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\LogisticsBundle\\Document\\LogisticsMovement>::findForReportQb().","line":382,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\ProductUplift>::findForReportQb().","line":415,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\WasteUplift>::findForReportQb().","line":449,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelDelivery>::findForReportQb().","line":494,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelDelivery>::findForReportQb().","line":530,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>::findByOwningCompany().","line":575,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelDelivery>::findForReportQb().","line":595,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\TemperatureAndDensity>::getQbByDateAndFuelType().","line":776,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\MonthlyStock>::getQbByDateAndFuelType().","line":804,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\MonthlyStock>::getQbByDateAndSuppliedCompanyAndFuelSuppliers().","line":882,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\MonthlyStock>::getQbByDateRangeAndFuelType().","line":943,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelOwnershipTransfer>::findForReportQb().","line":1036,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelOwnershipTransfer>::findForFuelSupplierReportQb().","line":1055,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelDelivery>::findForReportQb().","line":1164,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelDelivery>::findForReportQb().","line":1208,"ignorable":true},{"message":"Method In2plane\\ReportingBundle\\Service\\QueryFactory\\BulkStorageQueryFactory::getFuelStockChangeRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelStockChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelStockChange>.","line":1266,"ignorable":true},{"message":"Method In2plane\\ReportingBundle\\Service\\QueryFactory\\BulkStorageQueryFactory::getFuelStockRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelStockRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelStock>.","line":1274,"ignorable":true},{"message":"Method In2plane\\ReportingBundle\\Service\\QueryFactory\\BulkStorageQueryFactory::getStorageTankRepository() should return In2plane\\BulkStorageBundle\\Repository\\StorageTankRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\StorageTank>.","line":1282,"ignorable":true},{"message":"Method In2plane\\ReportingBundle\\Service\\QueryFactory\\BulkStorageQueryFactory::getDailyStockRepository() should return In2plane\\BulkStorageBundle\\Repository\\DailyStockRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\DailyStock>.","line":1290,"ignorable":true},{"message":"Method In2plane\\ReportingBundle\\Service\\QueryFactory\\BulkStorageQueryFactory::getFuelSupplierRepository() should return In2plane\\OperationsBundle\\Repository\\FuelSupplierRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>.","line":1298,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/ReportingBundle/Service/QueryFactory/CertificateQueryFactory.php":{"errors":1,"messages":[{"message":"Method In2plane\\ReportingBundle\\Service\\QueryFactory\\CertificateQueryFactory::getCertificateRepository() should return In2plane\\CoreBundle\\Repository\\CertificateRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Certificate>.","line":61,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/ReportingBundle/Service/QueryFactory/CommsQueryFactory.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CommsBundle\\Document\\VoiceCall>::findForReportQb().","line":47,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/ReportingBundle/Service/QueryFactory/DensityTemperatureReadingsQueryFactory.php":{"errors":1,"messages":[{"message":"Method In2plane\\ReportingBundle\\Service\\QueryFactory\\DensityTemperatureReadingsQueryFactory::getDensityTemperatureReadingsRepository() should return In2plane\\OperationsBundle\\Repository\\DensityTemperatureReadingsRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\DensityTemperatureReadings>.","line":40,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/ReportingBundle/Service/QueryFactory/FuelQuantityChangeQueryFactory.php":{"errors":2,"messages":[{"message":"Method In2plane\\ReportingBundle\\Service\\QueryFactory\\FuelQuantityChangeQueryFactory::getFuelQuantityChangeRepo() should return In2plane\\BulkStorageBundle\\Repository\\FuelQuantityChangeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelQuantityChange>.","line":51,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>::hydrate().","line":69,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/ReportingBundle/Service/QueryFactory/MonthlyCustomerCostQueryFactory.php":{"errors":1,"messages":[{"message":"Property In2plane\\ReportingBundle\\Service\\QueryFactory\\MonthlyCustomerCostQueryFactory::$monthlyCustomerCostRepo (In2plane\\CoreBundle\\Repository\\MonthlyCustomerCostRepository) does not accept Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\MonthlyCustomerCost>.","line":23,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/ReportingBundle/Service/QueryFactory/ScheduledBreakQueryFactory.php":{"errors":1,"messages":[{"message":"Method In2plane\\ReportingBundle\\Service\\QueryFactory\\ScheduledBreakQueryFactory::getScheduledBreakRepository() should return In2plane\\OperationsBundle\\Repository\\ScheduledBreakRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\ScheduledBreak>.","line":49,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/ReportingBundle/Service/QueryFactory/ServiceOrderQueryFactory.php":{"errors":3,"messages":[{"message":"Call to method findByOwningCompany() on an unknown class Doctrine\\Common\\Persistence\\ObjectRepository.","line":292,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Method In2plane\\ReportingBundle\\Service\\QueryFactory\\ServiceOrderQueryFactory::getFuelSupplierRepository() has invalid return type Doctrine\\Common\\Persistence\\ObjectRepository.","line":459,"ignorable":true},{"message":"Method In2plane\\ReportingBundle\\Service\\QueryFactory\\ServiceOrderQueryFactory::getFuelSupplierRepository() should return Doctrine\\Common\\Persistence\\ObjectRepository|In2plane\\OperationsBundle\\Document\\FuelSupplier but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>.","line":461,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/ReportingBundle/Service/ReportGenerator.php":{"errors":13,"messages":[{"message":"Else branch is unreachable because previous condition is always true.","line":14477,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Method In2plane\\ReportingBundle\\Service\\ReportGenerator::getFuelSupplierRepository() should return In2plane\\OperationsBundle\\Repository\\FuelSupplierRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>.","line":14556,"ignorable":true},{"message":"Method In2plane\\ReportingBundle\\Service\\ReportGenerator::getVehicleRepository() should return In2plane\\CoreBundle\\Repository\\VehicleRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Vehicle>.","line":14564,"ignorable":true},{"message":"Method In2plane\\ReportingBundle\\Service\\ReportGenerator::getCustomerRepository() should return In2plane\\CoreBundle\\Repository\\CustomerRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Customer>.","line":14572,"ignorable":true},{"message":"Method In2plane\\ReportingBundle\\Service\\ReportGenerator::getAirlineRepository() should return In2plane\\CoreBundle\\Repository\\AirlineRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airline>.","line":14580,"ignorable":true},{"message":"Method In2plane\\ReportingBundle\\Service\\ReportGenerator::getFuelTypeRepository() should return In2plane\\CoreBundle\\Repository\\FuelTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FuelType>.","line":14588,"ignorable":true},{"message":"Method In2plane\\ReportingBundle\\Service\\ReportGenerator::getFinancePackageCostMonthRepository() should return In2plane\\CoreBundle\\Repository\\FinancePackageCostMonthRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FinancePackageCostMonth>.","line":14596,"ignorable":true},{"message":"Method In2plane\\ReportingBundle\\Service\\ReportGenerator::getFuelStockRepository() should return In2plane\\BulkStorageBundle\\Repository\\FuelStockRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\FuelStock>.","line":14604,"ignorable":true},{"message":"Method In2plane\\ReportingBundle\\Service\\ReportGenerator::getStorageTankRepository() should return In2plane\\BulkStorageBundle\\Repository\\StorageTankRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\StorageTank>.","line":14612,"ignorable":true},{"message":"Method In2plane\\ReportingBundle\\Service\\ReportGenerator::getFlagRepository() should return In2plane\\OperationsBundle\\Repository\\FlagRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Flags\\Flag>.","line":14620,"ignorable":true},{"message":"Method In2plane\\ReportingBundle\\Service\\ReportGenerator::getTerminalRepository() should return In2plane\\CoreBundle\\Repository\\TerminalRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Terminal>.","line":14628,"ignorable":true},{"message":"Method In2plane\\ReportingBundle\\Service\\ReportGenerator::getBillingTypesRepository() should return In2plane\\OperationsBundle\\Repository\\BillingTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\BillingType>.","line":14636,"ignorable":true},{"message":"Method In2plane\\ReportingBundle\\Service\\ReportGenerator::getReportRepository() should return In2plane\\ReportingBundle\\Repository\\ReportRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\ReportingBundle\\Document\\Report>.","line":14644,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/ReportingBundle/Tools/ReportTools.php":{"errors":1,"messages":[{"message":"Right side of && is always true.","line":399,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Behat/AirportContext.php":{"errors":4,"messages":[{"message":"Call to method followRedirect() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":77,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":78,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method followRedirect() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":133,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":134,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Behat/AutomatedExporterContext.php":{"errors":1,"messages":[{"message":"Call to an undefined method In2plane\\CoreBundle\\Document\\Machine\\AutomatedExporter\\Method\\MethodConfig::getEmailAddresses().","line":308,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Behat/CompanyOperationsSettingsContext.php":{"errors":6,"messages":[{"message":"Expression \"expect($operationsSettings->getDisplaySTAVolume())->to->be->true\" on a separate line does not do anything.","line":77,"ignorable":true},{"message":"Expression \"expect($operationsSettings->getDisplayMass())->to->be->false\" on a separate line does not do anything.","line":78,"ignorable":true},{"message":"Expression \"expect($operationsSettings->getAllowCapturingTaxCertificateNumber())->to->be->true\" on a separate line does not do anything.","line":85,"ignorable":true},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":178,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":203,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Expression \"expect($isEnabled)->to->be->true\" on a separate line does not do anything.","line":248,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Behat/ConsortiumContext.php":{"errors":1,"messages":[{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":31,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Behat/CurrencyContext.php":{"errors":2,"messages":[{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":33,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":36,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Behat/DatabaseContext.php":{"errors":4,"messages":[{"message":"Call to method followRedirect() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":32,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":33,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method followRedirect() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":44,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":45,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Behat/DocumentEditorContext.php":{"errors":22,"messages":[{"message":"Expression \"expect($document['newNull'])->to->be->null\" on a separate line does not do anything.","line":238,"ignorable":true},{"message":"Expression \"expect($document['newBool'])->to->be->false\" on a separate line does not do anything.","line":262,"ignorable":true},{"message":"Expression \"expect($document['avp']['unlimited'])->to->be->true\" on a separate line does not do anything.","line":270,"ignorable":true},{"message":"Expression \"expect($document['bowser']['fuelType'])->to->be->null\" on a separate line does not do anything.","line":276,"ignorable":true},{"message":"Expression \"expect($document['flowMeters']['1']['type'])->to->be->null\" on a separate line does not do anything.","line":296,"ignorable":true},{"message":"Expression \"expect($document['location'])->to->be->null\" on a separate line does not do anything.","line":304,"ignorable":true},{"message":"Expression \"expect($document['sameTotalizers'])->to->be->true\" on a separate line does not do anything.","line":306,"ignorable":true},{"message":"Expression \"expect($document['status'])->to->be->null\" on a separate line does not do anything.","line":308,"ignorable":true},{"message":"Expression \"expect($data['newNull'])->to->be->null\" on a separate line does not do anything.","line":332,"ignorable":true},{"message":"Expression \"expect($data['newBool'])->to->be->false\" on a separate line does not do anything.","line":350,"ignorable":true},{"message":"Expression \"expect($data['bowser']['defuelledAirline'])->to->be->null\" on a separate line does not do anything.","line":358,"ignorable":true},{"message":"Expression \"expect($data['bowser']['fuelType'])->to->be->null\" on a separate line does not do anything.","line":360,"ignorable":true},{"message":"Expression \"expect($data['company'])->to->be->null\" on a separate line does not do anything.","line":362,"ignorable":true},{"message":"Expression \"expect($data['flowMeters']['0']['type'])->to->be->null\" on a separate line does not do anything.","line":374,"ignorable":true},{"message":"Expression \"expect($data['flowMeters']['1']['type'])->to->be->null\" on a separate line does not do anything.","line":378,"ignorable":true},{"message":"Expression \"expect($data['flowMeters']['2'])->to->be->null\" on a separate line does not do anything.","line":380,"ignorable":true},{"message":"Expression \"expect($data['inputFlowMeterTotalizerMode'])->to->be->null\" on a separate line does not do anything.","line":384,"ignorable":true},{"message":"Expression \"expect($data['location'])->to->be->null\" on a separate line does not do anything.","line":386,"ignorable":true},{"message":"Expression \"expect($data['sameTotalizers'])->to->be->true\" on a separate line does not do anything.","line":388,"ignorable":true},{"message":"Expression \"expect($data['status'])->to->be->null\" on a separate line does not do anything.","line":390,"ignorable":true},{"message":"Expression \"expect($document['avp']['unlimited'])->to->be->true\" on a separate line does not do anything.","line":617,"ignorable":true},{"message":"Expression \"expect($document['sameTotalizers'])->to->be->false\" on a separate line does not do anything.","line":669,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Behat/FuelMovementContext.php":{"errors":1,"messages":[{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":54,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Behat/FuelQuantityChangeContext.php":{"errors":1,"messages":[{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":50,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Behat/FuelStockChangeContext.php":{"errors":1,"messages":[{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":31,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Behat/LogisticsOperatorContext.php":{"errors":2,"messages":[{"message":"Expression \"expect($logisticsOperator)->to->not->be->null\" on a separate line does not do anything.","line":39,"ignorable":true},{"message":"Expression \"expect($logisticsOperator)->to->not->be->null\" on a separate line does not do anything.","line":81,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Behat/PrintRendererContext.php":{"errors":1,"messages":[{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":27,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Behat/StorageTankContext.php":{"errors":3,"messages":[{"message":"PHPDoc tag @var has invalid value ($company Company): Unexpected token \"$company\", expected type at offset 9","line":75,"ignorable":true},{"message":"Expression \"expect($storageTank)->to->be->null\" on a separate line does not do anything.","line":214,"ignorable":true},{"message":"Expression \"expect($storageTank->isOperational())->to->be->false\" on a separate line does not do anything.","line":224,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Behat/SupplySourceContext.php":{"errors":2,"messages":[{"message":"Call to method followRedirect() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":82,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":83,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Behat/UpstreamFuelSupplierContext.php":{"errors":7,"messages":[{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":41,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":51,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\UpstreamFuelSupplier>::findOneById().","line":134,"ignorable":true},{"message":"Call to method followRedirect() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":154,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":155,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\UpstreamFuelSupplier>::findOneByName().","line":167,"ignorable":true},{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\BulkStorageBundle\\Document\\UpstreamFuelSupplier>::findOneByName().","line":184,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Behat/V2ReportContext.php":{"errors":1,"messages":[{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":27,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Controller/CompanyController.php":{"errors":2,"messages":[{"message":"Call to function is_array() with Doctrine\\ODM\\MongoDB\\Iterator\\Iterator<In2plane\\CoreBundle\\Document\\FuelType> will always evaluate to false.","line":675,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Doctrine\\Common\\Collections\\ArrayCollection<*NEVER*, *NEVER*> does not accept In2plane\\BulkStorageBundle\\Document\\AllocationCapacityPercentage.","line":708,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Controller/PrintRendererController.php":{"errors":1,"messages":[{"message":"If condition is always false.","line":97,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Controller/ReportController.php":{"errors":1,"messages":[{"message":"If condition is always false.","line":89,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Controller/V2ReportController.php":{"errors":1,"messages":[{"message":"If condition is always false.","line":97,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/AidxXmlViewType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\AidxXmlViewType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":48,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\AidxXmlViewType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":48,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/AircraftSearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\AircraftSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":48,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\AircraftSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":48,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/AircraftVariantSearchType.php":{"errors":1,"messages":[{"message":"Method In2plane\\SuperAdminBundle\\Form\\Type\\AircraftVariantSearchType::getBlockPrefix() should return string but returns null.","line":24,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/AirlineAjaxSearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\AirlineAjaxSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":31,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\AirlineAjaxSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":31,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/AirlineMergeSearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\AirlineMergeSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":34,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\AirlineMergeSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":34,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/AirlineSearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\AirlineSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":81,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\AirlineSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":81,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/AirportSearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\AirportSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":67,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\AirportSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":67,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/AutomatedExporterSearchType.php":{"errors":1,"messages":[{"message":"Method In2plane\\SuperAdminBundle\\Form\\Type\\AutomatedExporterSearchType::getBlockPrefix() should return string but returns null.","line":93,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/BusinessRuleSearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\BusinessRuleSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":55,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\BusinessRuleSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":55,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/CertificateTypeSearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\CertificateTypeSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":47,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\CertificateTypeSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":47,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/CompanySearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\CompanySearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":46,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\CompanySearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":46,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/CountryAjaxSearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\CountryAjaxSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":30,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\CountryAjaxSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":30,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/CountrySearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\CountrySearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":49,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\CountrySearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":49,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/CurrencySearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\CurrencySearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":47,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\CurrencySearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":47,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/CustomerSearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\CustomerSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":30,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\CustomerSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":30,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/DataFeedSearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\DataFeedSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":56,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\DataFeedSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":56,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/DeviceSearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\DeviceSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":98,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\DeviceSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":98,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/DiscrepancyCalculationSettingsSearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\DiscrepancyCalculationSettingsSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":48,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\DiscrepancyCalculationSettingsSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":48,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/DocumentEditorEditType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\DocumentEditorEditType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":53,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\DocumentEditorEditType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":53,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/DocumentLogViewType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\DocumentLogViewType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":62,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\DocumentLogViewType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":62,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/DocumentMergerMergeType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\DocumentMergerMergeType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":64,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\DocumentMergerMergeType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":64,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/FlagsTestType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\FlagsTestType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":46,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\FlagsTestType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":46,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/FuelAdditiveSearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\FuelAdditiveSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":48,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\FuelAdditiveSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":48,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/FuelMovementSearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\FuelMovementSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":66,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\FuelMovementSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":66,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/FuelQuantityChangeSearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\FuelQuantityChangeSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":80,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\FuelQuantityChangeSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":80,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/FuelStockType.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\FuelSupplier>::findByCompany().","line":72,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/FuelSupplierSearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\FuelSupplierSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":48,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\FuelSupplierSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":48,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/GanttRegenType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\GanttRegenType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":75,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\GanttRegenType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":75,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/InfrastructureSearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\InfrastructureSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":83,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\InfrastructureSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":83,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/Machine/AutomatedExporter/Format/AirBPDeliveryTicketType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\Machine\\AutomatedExporter\\Format\\AirBPDeliveryTicketType::getBlockPrefix() should be compatible with return type (string) of method In2plane\\SuperAdminBundle\\Form\\Type\\Machine\\AutomatedExporter\\Format\\FormatConfigType::getBlockPrefix()","line":41,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\Machine\\AutomatedExporter\\Format\\AirBPDeliveryTicketType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":41,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/Machine/AutomatedExporter/Format/IataFuelTransactionType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\Machine\\AutomatedExporter\\Format\\IataFuelTransactionType::getBlockPrefix() should be compatible with return type (string) of method In2plane\\SuperAdminBundle\\Form\\Type\\Machine\\AutomatedExporter\\Format\\FormatConfigType::getBlockPrefix()","line":1076,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\Machine\\AutomatedExporter\\Format\\IataFuelTransactionType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":1076,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/Machine/AutomatedExporter/Format/KlmFuelTransactionType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\Machine\\AutomatedExporter\\Format\\KlmFuelTransactionType::getBlockPrefix() should be compatible with return type (string) of method In2plane\\SuperAdminBundle\\Form\\Type\\Machine\\AutomatedExporter\\Format\\FormatConfigType::getBlockPrefix()","line":67,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\Machine\\AutomatedExporter\\Format\\KlmFuelTransactionType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":67,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/Machine/AutomatedExporter/Method/ApiType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\Machine\\AutomatedExporter\\Method\\ApiType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":107,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\Machine\\AutomatedExporter\\Method\\ApiType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":107,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/Machine/AutomatedExporter/Method/FtpsType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\Machine\\AutomatedExporter\\Method\\FtpsType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":98,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\Machine\\AutomatedExporter\\Method\\FtpsType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":98,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/Machine/AutomatedExporter/Method/PubSubType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\Machine\\AutomatedExporter\\Method\\PubSubType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":68,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\Machine\\AutomatedExporter\\Method\\PubSubType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":68,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/Machine/AutomatedExporter/Method/SftpUploadType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\Machine\\AutomatedExporter\\Method\\SftpUploadType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":109,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\Machine\\AutomatedExporter\\Method\\SftpUploadType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":109,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/Machine/AutomatedExporter/Method/SoapType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\Machine\\AutomatedExporter\\Method\\SoapType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":112,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\Machine\\AutomatedExporter\\Method\\SoapType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":112,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/PrintRendererComponents/FlagType.php":{"errors":1,"messages":[{"message":"Method In2plane\\SuperAdminBundle\\Form\\Type\\PrintRendererComponents\\FlagType::getFlagRepository() should return In2plane\\OperationsBundle\\Repository\\FlagRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Flags\\Flag>.","line":119,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/PrintRendererSearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\PrintRendererSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":46,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\PrintRendererSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":46,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/ReportSearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\ReportSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":98,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\ReportSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":98,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/SearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\SearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":48,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\SearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":48,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/SettingsChangeSearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\SettingsChangeSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":48,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\SettingsChangeSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":48,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/SiteSearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\SiteSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":67,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\SiteSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":67,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/StorageTankSearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\StorageTankSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":47,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\StorageTankSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":47,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Form/Type/UserSearchType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\UserSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":48,"ignorable":true},{"message":"Return type (null) of method In2plane\\SuperAdminBundle\\Form\\Type\\UserSearchType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":48,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Helper/SuperAdminControllerHelper.php (in context of class In2plane\\SuperAdminBundle\\Controller\\GlobalSettingsController)":{"errors":1,"messages":[{"message":"Method In2plane\\SuperAdminBundle\\Controller\\GlobalSettingsController::getGlobalSettingsRepository() should return In2plane\\SuperAdminBundle\\Repository\\GlobalSettingsRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\SuperAdminBundle\\Document\\GlobalSettings>.","line":15,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Service/CompanySettingsImportService.php":{"errors":6,"messages":[{"message":"Method In2plane\\SuperAdminBundle\\Service\\CompanySettingsImportService::getAirlineRepository() should return In2plane\\CoreBundle\\Repository\\AirlineRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airline>.","line":587,"ignorable":true},{"message":"Method In2plane\\SuperAdminBundle\\Service\\CompanySettingsImportService::getAirportRepository() should return In2plane\\CoreBundle\\Repository\\AirportRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Airport>.","line":592,"ignorable":true},{"message":"Method In2plane\\SuperAdminBundle\\Service\\CompanySettingsImportService::getReportRepository() should return In2plane\\ReportingBundle\\Repository\\ReportRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\ReportingBundle\\Document\\Report>.","line":597,"ignorable":true},{"message":"Method In2plane\\SuperAdminBundle\\Service\\CompanySettingsImportService::getCountryRepository() should return In2plane\\CoreBundle\\Repository\\CountryRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\Country>.","line":602,"ignorable":true},{"message":"Method In2plane\\SuperAdminBundle\\Service\\CompanySettingsImportService::getPaymentCardRepository() should return In2plane\\OperationsBundle\\Repository\\PaymentCardRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\PaymentCard>.","line":607,"ignorable":true},{"message":"Method In2plane\\SuperAdminBundle\\Service\\CompanySettingsImportService::getFuelTypeRepository() should return In2plane\\CoreBundle\\Repository\\FuelTypeRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\FuelType>.","line":612,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Service/DocumentEditService.php":{"errors":1,"messages":[{"message":"Method In2plane\\SuperAdminBundle\\Service\\DocumentEditService::getLogEntryRepository() should return In2plane\\CoreBundle\\Repository\\LogEntryRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\LogEntry>.","line":791,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Twig/PrintRendererExtension.php":{"errors":1,"messages":[{"message":"Method In2plane\\SuperAdminBundle\\Twig\\PrintRendererExtension::getFlagRepository() should return In2plane\\OperationsBundle\\Repository\\FlagRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\OperationsBundle\\Document\\Flags\\Flag>.","line":38,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Validator/Constraints/ExistingPartialFuelDeliveriesValidator.php":{"errors":1,"messages":[{"message":"Access to an undefined property Symfony\\Component\\Validator\\Constraint::$company.","line":18,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Validator/Constraints/ExistingPlannedFuelDeliveriesValidator.php":{"errors":1,"messages":[{"message":"Access to an undefined property Symfony\\Component\\Validator\\Constraint::$company.","line":18,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Validator/Constraints/OperationalStatusTankQuantityValidator.php":{"errors":1,"messages":[{"message":"Access to an undefined property Symfony\\Component\\Validator\\Constraint::$message.","line":28,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Validator/Constraints/PrintRendererComponentValidator.php":{"errors":1,"messages":[{"message":"Property In2plane\\SuperAdminBundle\\Validator\\Constraints\\PrintRendererComponentValidator::$constraint is never read, only written.","line":13,"ignorable":true,"tip":"See: https://phpstan.org/developing-extensions/always-read-written-properties"}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Validator/Constraints/PrintRendererValidator.php":{"errors":1,"messages":[{"message":"Property In2plane\\SuperAdminBundle\\Validator\\Constraints\\PrintRendererValidator::$constraint is never read, only written.","line":30,"ignorable":true,"tip":"See: https://phpstan.org/developing-extensions/always-read-written-properties"}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Validator/Constraints/QualityManagementEnabledValidator.php":{"errors":1,"messages":[{"message":"Access to an undefined property Symfony\\Component\\Validator\\Constraint::$message.","line":26,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Validator/Constraints/TankOrderChoicesValidator.php":{"errors":1,"messages":[{"message":"Access to an undefined property Symfony\\Component\\Validator\\Constraint::$message.","line":30,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/SuperAdminBundle/Worker/MergeDocumentsWorker.php":{"errors":1,"messages":[{"message":"Method In2plane\\SuperAdminBundle\\Worker\\MergeDocumentsWorker::getUserRepository() should return In2plane\\CoreBundle\\Repository\\UserRepository but returns Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\CoreBundle\\Document\\User>.","line":84,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/TelemetryBundle/Behat/TelemetryAPIContext.php":{"errors":4,"messages":[{"message":"Access to an undefined property In2plane\\TelemetryBundle\\Behat\\TelemetryAPIContext::$XApiKey.","line":81,"ignorable":true},{"message":"Access to an undefined property In2plane\\TelemetryBundle\\Behat\\TelemetryAPIContext::$companyId.","line":82,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":199,"ignorable":true},{"message":"Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getMock().","line":259,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/TelemetryBundle/Behat/TelemetryContext.php":{"errors":4,"messages":[{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":40,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":50,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":91,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"},{"message":"Call to method getResponse() on an unknown class In2plane\\CoreBundle\\Behat\\Client.","line":189,"ignorable":true,"tip":"Learn more at https://phpstan.org/user-guide/discovering-symbols"}]},"/var/www/in2plane-cloud/src/In2plane/TelemetryBundle/Command/FinishSessionsCommand.php":{"errors":1,"messages":[{"message":"Call to an undefined method Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\TelemetryBundle\\Document\\TelemetrySession>::findUnfinishedSessions().","line":73,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/TelemetryBundle/Controller/SessionController.php":{"errors":1,"messages":[{"message":"Method In2plane\\TelemetryBundle\\Controller\\SessionController::listAction() should return array{grouped: array<string, non-empty-array<int, In2plane\\TelemetryBundle\\Document\\TelemetrySession>>, form: Symfony\\Component\\Form\\FormView, pager: string} but returns array{grouped: array<int, non-empty-array<int, In2plane\\TelemetryBundle\\Document\\TelemetrySession>>, form: Symfony\\Component\\Form\\FormView, pager: string}.","line":70,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/TelemetryBundle/DataFixtures/MongoDB/LoadTelemetryData.php":{"errors":1,"messages":[{"message":"Property In2plane\\TelemetryBundle\\DataFixtures\\MongoDB\\LoadTelemetryData::$telemetrySessionManager is never read, only written.","line":31,"ignorable":true,"tip":"See: https://phpstan.org/developing-extensions/always-read-written-properties"}]},"/var/www/in2plane-cloud/src/In2plane/TelemetryBundle/Document/Motion.php":{"errors":3,"messages":[{"message":"Call to function is_null() with float will always evaluate to false.","line":79,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":101,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":123,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/TelemetryBundle/Document/ObdData.php":{"errors":10,"messages":[{"message":"Call to function is_null() with float will always evaluate to false.","line":331,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":353,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":375,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":397,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":419,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":441,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":463,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":485,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":507,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":615,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/TelemetryBundle/Document/Position.php":{"errors":2,"messages":[{"message":"Call to function is_null() with float will always evaluate to false.","line":107,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."},{"message":"Call to function is_null() with float will always evaluate to false.","line":129,"ignorable":true,"tip":"Because the type is coming from a PHPDoc, you can turn off this check by setting <fg=cyan>treatPhpDocTypesAsCertain: false</> in your <fg=cyan>%configurationFile%</>."}]},"/var/www/in2plane-cloud/src/In2plane/TelemetryBundle/Form/Type/Rest/MotionsType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\TelemetryBundle\\Form\\Type\\Rest\\MotionsType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":34,"ignorable":true},{"message":"Return type (null) of method In2plane\\TelemetryBundle\\Form\\Type\\Rest\\MotionsType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":34,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/TelemetryBundle/Form/Type/Rest/PositionsType.php":{"errors":2,"messages":[{"message":"Return type (null) of method In2plane\\TelemetryBundle\\Form\\Type\\Rest\\PositionsType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\AbstractType::getBlockPrefix()","line":36,"ignorable":true},{"message":"Return type (null) of method In2plane\\TelemetryBundle\\Form\\Type\\Rest\\PositionsType::getBlockPrefix() should be compatible with return type (string) of method Symfony\\Component\\Form\\FormTypeInterface::getBlockPrefix()","line":36,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/TelemetryBundle/Service/JourneyService.php":{"errors":2,"messages":[{"message":"Property In2plane\\TelemetryBundle\\Service\\JourneyService::$journeyRepo (In2plane\\TelemetryBundle\\Repository\\JourneyRepository) does not accept Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\TelemetryBundle\\Document\\Journey>.","line":32,"ignorable":true},{"message":"Property In2plane\\TelemetryBundle\\Service\\JourneyService::$telemetryRepo (In2plane\\TelemetryBundle\\Repository\\TelemetryRepository) does not accept Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\TelemetryBundle\\Document\\Telemetry>.","line":33,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/TelemetryBundle/Service/TelemetryService.php":{"errors":3,"messages":[{"message":"Property In2plane\\TelemetryBundle\\Service\\TelemetryService::$telemetryRepo (In2plane\\TelemetryBundle\\Repository\\TelemetryRepository) does not accept Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\TelemetryBundle\\Document\\Telemetry>.","line":50,"ignorable":true},{"message":"Property In2plane\\TelemetryBundle\\Service\\TelemetryService::$telemetryDataRepo (In2plane\\TelemetryBundle\\Repository\\TelemetryDataRepository) does not accept Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\TelemetryBundle\\Document\\TelemetryData>.","line":51,"ignorable":true},{"message":"Property In2plane\\TelemetryBundle\\Service\\TelemetryService::$telemetrySessionRepo (In2plane\\TelemetryBundle\\Repository\\TelemetrySessionRepository) does not accept Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\TelemetryBundle\\Document\\TelemetrySession>.","line":52,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/TelemetryBundle/Service/TelemetrySessionManager.php":{"errors":1,"messages":[{"message":"Property In2plane\\TelemetryBundle\\Service\\TelemetrySessionManager::$telemetrySessionRepo (In2plane\\TelemetryBundle\\Repository\\TelemetrySessionRepository) does not accept Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\TelemetryBundle\\Document\\TelemetrySession>.","line":38,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/TestBundle/Behat/DatabasesContext.php":{"errors":4,"messages":[{"message":"Expression \"expect($result)->to->be->true\" on a separate line does not do anything.","line":94,"ignorable":true},{"message":"Expression \"expect($flight instanceof \\In2plane\\OperationsBundle\\Document\\Flight)->to->be->false\" on a separate line does not do anything.","line":176,"ignorable":true},{"message":"Expression \"expect($result)->to->be->true\" on a separate line does not do anything.","line":216,"ignorable":true},{"message":"Expression \"expect($result)->to->be->true\" on a separate line does not do anything.","line":227,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/TestBundle/Behat/SettingsContext.php":{"errors":1,"messages":[{"message":"Expression \"expect($company->getOperationsSettings()->getStandRequired())->to->be->false\" on a separate line does not do anything.","line":32,"ignorable":true}]},"/var/www/in2plane-cloud/src/In2plane/TestBundle/Services/DatabaseService.php":{"errors":1,"messages":[{"message":"Property In2plane\\TestBundle\\Services\\DatabaseService::$databaseRepository (In2plane\\TestBundle\\Repository\\DatabaseRepository) does not accept Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository<In2plane\\TestBundle\\Document\\Database>.","line":788,"ignorable":true}]}},"errors":["Internal error: Internal error: Class \"SoapHeader\" not found in file /var/www/in2plane-cloud/src/In2plane/CoreBundle/Service/AutomatedExporter/Method/WsSoap/UsernameTokenSecurityHeader.php\nRun PHPStan with -v option and post the stack trace to:\nhttps://github.com/phpstan/phpstan/issues/new?template=Bug_report.md","Child process error (exit code 1): "]}